/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.api;

import com.dynatrace.apis.configv1.ApiException;
import com.dynatrace.apis.configv1.model.AllowlistedAwsAccount;
import com.dynatrace.apis.configv1.model.AllowlistedAwsAccountList;
import com.dynatrace.apis.configv1.model.AwsPrivateLinkConfig;
import com.dynatrace.apis.configv1.model.ErrorEnvelope;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for AwsPrivateLinkApi
 */
@Ignore
public class AwsPrivateLinkApiTest {

    private final AwsPrivateLinkApi api = new AwsPrivateLinkApi();

    
    /**
     * Gets the information about all allowlisted accounts in AWS PrivateLink
     *
     * Lists the account ids of all allowlisted accounts in AWS PrivateLink for this tenant
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllAllowlistedAccountsTest() throws ApiException {
        AllowlistedAwsAccountList response = 
        api.getAllAllowlistedAccounts();
        
        // TODO: test validations
    }
    
    /**
     * Gets the configuration information about AWS PrivateLink
     *
     * Gets all configuration settings for AWS PrivateLink for this tenant
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPrivateLinkConfigTest() throws ApiException {
        AwsPrivateLinkConfig response = 
        api.getPrivateLinkConfig();
        
        // TODO: test validations
    }
    
    /**
     * Updates the given AWS account id in the allowlist in AWS PrivateLink
     *
     * Updates the given AWS account id in the allowlisted accounts in AWS PrivateLink for this tenant
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putAllowlistedAccountTest() throws ApiException {
        String id = null;
        AllowlistedAwsAccount allowlistedAwsAccount = null;
        AllowlistedAwsAccount response = 
        api.putAllowlistedAccount(id, allowlistedAwsAccount);
        
        // TODO: test validations
    }
    
    /**
     * Updates the configuration information about AWS PrivateLink
     *
     * Updates the configuration settings for AWS PrivateLink for this tenant
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putPrivateLinkConfigTest() throws ApiException {
        AwsPrivateLinkConfig awsPrivateLinkConfig = null;
        AwsPrivateLinkConfig response = 
        api.putPrivateLinkConfig(awsPrivateLinkConfig);
        
        // TODO: test validations
    }
    
    /**
     * Removes one AWS account from the allowlist in AWS PrivateLink
     *
     * Removes the given AWS account id from the allowlisted accounts in AWS PrivateLink for this tenant
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeAllowlistedAccountTest() throws ApiException {
        String id = null;
        
        api.removeAllowlistedAccount(id);
        
        // TODO: test validations
    }
    
}
