/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.api;

import com.dynatrace.apis.configv1.ApiException;
import com.dynatrace.apis.configv1.model.EntityShortRepresentation;
import com.dynatrace.apis.configv1.model.ErrorEnvelope;
import com.dynatrace.apis.configv1.model.FullWebRequestRule;
import com.dynatrace.apis.configv1.model.StubList;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for ServiceDetectionFullWebRequestApi
 */
@Ignore
public class ServiceDetectionFullWebRequestApiTest {

    private final ServiceDetectionFullWebRequestApi api = new ServiceDetectionFullWebRequestApi();

    
    /**
     * Creates a new service detection rule
     *
     * The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createRequestDetectionRuleTest() throws ApiException {
        String position = null;
        FullWebRequestRule fullWebRequestRule = null;
        EntityShortRepresentation response = 
        api.createRequestDetectionRule(position, fullWebRequestRule);
        
        // TODO: test validations
    }
    
    /**
     * Deletes the specified service detection rule
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRequestDetectionRuleTest() throws ApiException {
        UUID id = null;
        
        api.deleteRequestDetectionRule(id);
        
        // TODO: test validations
    }
    
    /**
     * Gets the properties of the specified service detection rule
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRequestDetectionRuleTest() throws ApiException {
        UUID id = null;
        FullWebRequestRule response = 
        api.getRequestDetectionRule(id);
        
        // TODO: test validations
    }
    
    /**
     * Lists all full web request service detection rules
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listRequestDetectionRulesTest() throws ApiException {
        StubList response = 
        api.listRequestDetectionRules();
        
        // TODO: test validations
    }
    
    /**
     * Reorders the service detection rules of the specified type
     *
     * The request reorders the rules of the specified type according to the order of the IDs in the body of the request.    Rules that are omitted in the body of the request will retain their relative order but will be placed *after* all those present in the request.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void orderRequestDetectionRulesTest() throws ApiException {
        StubList stubList = null;
        
        api.orderRequestDetectionRules(stubList);
        
        // TODO: test validations
    }
    
    /**
     * Updates an existing service detection rule
     *
     * If a rule with the specified ID doesn&#39;t exist, a new rule is created and appended to the end of the rule list.    The request keeps the existing order of rules, unless the **order** parameter is set.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateRequestDetectionRuleTest() throws ApiException {
        UUID id = null;
        FullWebRequestRule fullWebRequestRule = null;
        EntityShortRepresentation response = 
        api.updateRequestDetectionRule(id, fullWebRequestRule);
        
        // TODO: test validations
    }
    
    /**
     * Validates the payload for the &#x60;POST /ruleBasedServiceDetection/FULL_WEB_REQUEST&#x60; request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateCreateRequestDetectionRuleTest() throws ApiException {
        FullWebRequestRule fullWebRequestRule = null;
        
        api.validateCreateRequestDetectionRule(fullWebRequestRule);
        
        // TODO: test validations
    }
    
    /**
     * Validates the payload for the &#x60;PUT /service/detectionRules/FULL_WEB_REQUEST/{id}&#x60; request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateUpdateRequestDetectionRuleTest() throws ApiException {
        UUID id = null;
        FullWebRequestRule fullWebRequestRule = null;
        
        api.validateUpdateRequestDetectionRule(id, fullWebRequestRule);
        
        // TODO: test validations
    }
    
}
