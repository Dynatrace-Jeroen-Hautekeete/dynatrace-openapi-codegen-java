/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.api;

import com.dynatrace.apis.configv1.ApiException;
import com.dynatrace.apis.configv1.model.ErrorEnvelope;
import com.dynatrace.apis.configv1.model.RemoteEnvironmentConfigDto;
import com.dynatrace.apis.configv1.model.RemoteEnvironmentConfigListDto;
import com.dynatrace.apis.configv1.model.RemoteEnvironmentConfigStub;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for RemoteEnvironmentsApi
 */
@Ignore
public class RemoteEnvironmentsApiTest {

    private final RemoteEnvironmentsApi api = new RemoteEnvironmentsApi();

    
    /**
     * Creates a new remote environment configuration | maturity&#x3D;EARLY_ADOPTER
     *
     * The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.   Be sure to prepare a token with the **Fetch data from a remote environment** (&#x60;RestRequestForwarding&#x60;) scope. You can create such a token via [Tokens API](https://dt-url.net/ff23kmx).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createRemoteEnvironmentConfigTest() throws ApiException {
        RemoteEnvironmentConfigDto remoteEnvironmentConfigDto = null;
        RemoteEnvironmentConfigStub response = 
        api.createRemoteEnvironmentConfig(remoteEnvironmentConfigDto);
        
        // TODO: test validations
    }
    
    /**
     * Deletes the specified remote environment configuration | maturity&#x3D;EARLY_ADOPTER
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRemoteEnvironmentConfigTest() throws ApiException {
        String id = null;
        
        api.deleteRemoteEnvironmentConfig(id);
        
        // TODO: test validations
    }
    
    /**
     * Gets the properties of the specified remote environment configuration | maturity&#x3D;EARLY_ADOPTER
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRemoteEnvironmentConfigTest() throws ApiException {
        String id = null;
        RemoteEnvironmentConfigDto response = 
        api.getRemoteEnvironmentConfig(id);
        
        // TODO: test validations
    }
    
    /**
     * Lists all remote environment configurations | maturity&#x3D;EARLY_ADOPTER
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listRemoteEnvironmentConfigsTest() throws ApiException {
        RemoteEnvironmentConfigListDto response = 
        api.listRemoteEnvironmentConfigs();
        
        // TODO: test validations
    }
    
    /**
     * Updates an existing remote environment configuration or creates a new one | maturity&#x3D;EARLY_ADOPTER
     *
     * If a remote environment configuration with the specified ID doesn&#39;t exist, a new configuration is created.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateRemoteEnvironmentConfigTest() throws ApiException {
        String id = null;
        RemoteEnvironmentConfigDto remoteEnvironmentConfigDto = null;
        RemoteEnvironmentConfigStub response = 
        api.updateRemoteEnvironmentConfig(id, remoteEnvironmentConfigDto);
        
        // TODO: test validations
    }
    
    /**
     * Validates the payload for the &#x60;POST /remoteEnvironments&#x60; request | maturity&#x3D;EARLY_ADOPTER
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateCreateRemoteEnvironmentConfigTest() throws ApiException {
        RemoteEnvironmentConfigDto remoteEnvironmentConfigDto = null;
        
        api.validateCreateRemoteEnvironmentConfig(remoteEnvironmentConfigDto);
        
        // TODO: test validations
    }
    
    /**
     * Validates the payload for the &#x60;PUT /remoteEnvironments/{id}&#x60; request | maturity&#x3D;EARLY_ADOPTER
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateUpdateRemoteEnvironmentConfigTest() throws ApiException {
        String id = null;
        RemoteEnvironmentConfigDto remoteEnvironmentConfigDto = null;
        
        api.validateUpdateRemoteEnvironmentConfig(id, remoteEnvironmentConfigDto);
        
        // TODO: test validations
    }
    
}
