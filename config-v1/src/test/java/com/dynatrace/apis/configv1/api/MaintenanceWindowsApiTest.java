/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.api;

import com.dynatrace.apis.configv1.ApiException;
import com.dynatrace.apis.configv1.model.EntityShortRepresentation;
import com.dynatrace.apis.configv1.model.ErrorEnvelope;
import com.dynatrace.apis.configv1.model.MaintenanceWindow;
import com.dynatrace.apis.configv1.model.StubList;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for MaintenanceWindowsApi
 */
@Ignore
public class MaintenanceWindowsApiTest {

    private final MaintenanceWindowsApi api = new MaintenanceWindowsApi();

    
    /**
     * Creates a new maintenance window
     *
     * The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createMaintenanceWindowTest() throws ApiException {
        MaintenanceWindow maintenanceWindow = null;
        EntityShortRepresentation response = 
        api.createMaintenanceWindow(maintenanceWindow);
        
        // TODO: test validations
    }
    
    /**
     * Deletes the specified maintenance window
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMaintenanceWindowTest() throws ApiException {
        UUID id = null;
        
        api.deleteMaintenanceWindow(id);
        
        // TODO: test validations
    }
    
    /**
     * Gets the properties of the specified maintenance window
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMaintenanceWindowTest() throws ApiException {
        UUID id = null;
        MaintenanceWindow response = 
        api.getMaintenanceWindow(id);
        
        // TODO: test validations
    }
    
    /**
     * Lists all available maintenance windows
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMaintenanceWindowsTest() throws ApiException {
        StubList response = 
        api.listMaintenanceWindows();
        
        // TODO: test validations
    }
    
    /**
     * Updates an existing maintenance window
     *
     * If a maintenance window with the specified ID doesn&#39;t exist, a new one is created.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateMaintenanceWindowTest() throws ApiException {
        UUID id = null;
        MaintenanceWindow maintenanceWindow = null;
        EntityShortRepresentation response = 
        api.updateMaintenanceWindow(id, maintenanceWindow);
        
        // TODO: test validations
    }
    
    /**
     * Validates the payload for the &#x60;POST /maintenancewindow&#x60; request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateCreateMaintenanceWindowTest() throws ApiException {
        MaintenanceWindow maintenanceWindow = null;
        
        api.validateCreateMaintenanceWindow(maintenanceWindow);
        
        // TODO: test validations
    }
    
    /**
     * Validates the payload for the &#x60;PUT /maintenancewindow/{id}&#x60; request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateUpdateMaintenanceWindowTest() throws ApiException {
        UUID id = null;
        MaintenanceWindow maintenanceWindow = null;
        
        api.validateUpdateMaintenanceWindow(id, maintenanceWindow);
        
        // TODO: test validations
    }
    
}
