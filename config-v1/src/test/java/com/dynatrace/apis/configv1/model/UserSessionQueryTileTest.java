/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import com.dynatrace.apis.configv1.model.Tile;
import com.dynatrace.apis.configv1.model.TileBounds;
import com.dynatrace.apis.configv1.model.TileFilter;
import com.dynatrace.apis.configv1.model.UserSessionQueryTileConfiguration;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for UserSessionQueryTile
 */
public class UserSessionQueryTileTest {
    private final UserSessionQueryTile model = new UserSessionQueryTile();

    /**
     * Model tests for UserSessionQueryTile
     */
    @Test
    public void testUserSessionQueryTile() {
        // TODO: test UserSessionQueryTile
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nameSize'
     */
    @Test
    public void nameSizeTest() {
        // TODO: test nameSize
    }

    /**
     * Test the property 'tileType'
     */
    @Test
    public void tileTypeTest() {
        // TODO: test tileType
    }

    /**
     * Test the property 'configured'
     */
    @Test
    public void configuredTest() {
        // TODO: test configured
    }

    /**
     * Test the property 'bounds'
     */
    @Test
    public void boundsTest() {
        // TODO: test bounds
    }

    /**
     * Test the property 'tileFilter'
     */
    @Test
    public void tileFilterTest() {
        // TODO: test tileFilter
    }

    /**
     * Test the property 'customName'
     */
    @Test
    public void customNameTest() {
        // TODO: test customName
    }

    /**
     * Test the property 'query'
     */
    @Test
    public void queryTest() {
        // TODO: test query
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'timeFrameShift'
     */
    @Test
    public void timeFrameShiftTest() {
        // TODO: test timeFrameShift
    }

    /**
     * Test the property 'visualizationConfig'
     */
    @Test
    public void visualizationConfigTest() {
        // TODO: test visualizationConfig
    }

    /**
     * Test the property 'limit'
     */
    @Test
    public void limitTest() {
        // TODO: test limit
    }

}
