/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.api;

import com.dynatrace.apis.configv1.ApiException;
import com.dynatrace.apis.configv1.model.ErrorEnvelope;
import com.dynatrace.apis.configv1.model.HostAutoUpdateConfig;
import com.dynatrace.apis.configv1.model.HostConfig;
import com.dynatrace.apis.configv1.model.MonitoringConfig;
import com.dynatrace.apis.configv1.model.TechMonitoringList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for OneAgentOnAHostApi
 */
@Ignore
public class OneAgentOnAHostApiTest {

    private final OneAgentOnAHostApi api = new OneAgentOnAHostApi();

    
    /**
     * Gets the configuration of OneAgent auto-update on the specified host
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAutoUpdateConfig1Test() throws ApiException {
        String id = null;
        HostAutoUpdateConfig response = 
        api.getAutoUpdateConfig1(id);
        
        // TODO: test validations
    }
    
    /**
     * Gets the OneAgent configuration on the specified host
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getHostConfigTest() throws ApiException {
        String id = null;
        HostConfig response = 
        api.getHostConfig(id);
        
        // TODO: test validations
    }
    
    /**
     * Deprecated. Manage host monitoring settings via the environment API v2 settings endpoint with schemaId &#39;builtin:host.monitoring&#39; instead.
     *
     * Deprecated. Manage host monitoring settings via the [Settings endpoint](index.jsp?urls.primaryName&#x3D;Environment%20API%20v2#/Settings%20-%20Objects) with schemaId &#x60;builtin:host.monitoring&#x60; instead.  Gets the monitoring configuration of OneAgent on the specified host
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMonitoringConfigTest() throws ApiException {
        String id = null;
        MonitoringConfig response = 
        api.getMonitoringConfig(id);
        
        // TODO: test validations
    }
    
    /**
     * Gets the configuration of monitored technologies on the specified host
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTechHostConfigsTest() throws ApiException {
        String id = null;
        TechMonitoringList response = 
        api.getTechHostConfigs(id);
        
        // TODO: test validations
    }
    
    /**
     * Updates the configuration of OneAgent auto-update on the specified host
     *
     * OneAgent is updated several minutes after the change of configuration.   The process can take more time depending on number of OneAgents in the update queue.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateAutoUpdateConfigTest() throws ApiException {
        String id = null;
        HostAutoUpdateConfig hostAutoUpdateConfig = null;
        
        api.updateAutoUpdateConfig(id, hostAutoUpdateConfig);
        
        // TODO: test validations
    }
    
    /**
     * Deprecated. Manage host monitoring settings via the environment API v2 settings endpoint with schemaId &#39;builtin:host.monitoring&#39; instead.
     *
     * Deprecated. Manage host monitoring settings via the [Settings endpoint](index.jsp?urls.primaryName&#x3D;Environment%20API%20v2#/Settings%20-%20Objects) with schemaId &#x60;builtin:host.monitoring&#x60; instead.  Updates the monitoring configuration of OneAgent on the specified host. The monitoring mode of OneAgent is updated several minutes after the change of configuration.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateMonitoringConfigTest() throws ApiException {
        String id = null;
        MonitoringConfig monitoringConfig = null;
        
        api.updateMonitoringConfig(id, monitoringConfig);
        
        // TODO: test validations
    }
    
    /**
     * Validates the payload for the &#x60;PUT /hosts/{id}/autoupdate&#x60; request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateAutoUpdateConfig1Test() throws ApiException {
        String id = null;
        HostAutoUpdateConfig hostAutoUpdateConfig = null;
        
        api.validateAutoUpdateConfig1(id, hostAutoUpdateConfig);
        
        // TODO: test validations
    }
    
    /**
     * Deprecated. Manage host monitoring settings via the environment API v2 settings endpoint with schemaId &#39;builtin:host.monitoring&#39; instead.
     *
     * Deprecated. Manage host monitoring settings via the [Settings endpoint](index.jsp?urls.primaryName&#x3D;Environment%20API%20v2#/Settings%20-%20Objects) with schemaId &#x60;builtin:host.monitoring&#x60; instead.  Validates the payload for the &#x60;PUT /hosts/{id}/monitoring&#x60; request
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateMonitoringConfigTest() throws ApiException {
        String id = null;
        MonitoringConfig monitoringConfig = null;
        
        api.validateMonitoringConfig(id, monitoringConfig);
        
        // TODO: test validations
    }
    
}
