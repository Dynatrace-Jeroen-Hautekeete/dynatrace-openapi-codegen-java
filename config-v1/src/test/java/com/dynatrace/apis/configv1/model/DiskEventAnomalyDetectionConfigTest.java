/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import com.dynatrace.apis.configv1.model.ConfigurationMetadata;
import com.dynatrace.apis.configv1.model.DiskNameFilter;
import com.dynatrace.apis.configv1.model.TagFilter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.LinkedHashSet;
import java.util.Set;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for DiskEventAnomalyDetectionConfig
 */
public class DiskEventAnomalyDetectionConfigTest {
    private final DiskEventAnomalyDetectionConfig model = new DiskEventAnomalyDetectionConfig();

    /**
     * Model tests for DiskEventAnomalyDetectionConfig
     */
    @Test
    public void testDiskEventAnomalyDetectionConfig() {
        // TODO: test DiskEventAnomalyDetectionConfig
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'metric'
     */
    @Test
    public void metricTest() {
        // TODO: test metric
    }

    /**
     * Test the property 'threshold'
     */
    @Test
    public void thresholdTest() {
        // TODO: test threshold
    }

    /**
     * Test the property 'samples'
     */
    @Test
    public void samplesTest() {
        // TODO: test samples
    }

    /**
     * Test the property 'violatingSamples'
     */
    @Test
    public void violatingSamplesTest() {
        // TODO: test violatingSamples
    }

    /**
     * Test the property 'diskNameFilter'
     */
    @Test
    public void diskNameFilterTest() {
        // TODO: test diskNameFilter
    }

    /**
     * Test the property 'tagFilters'
     */
    @Test
    public void tagFiltersTest() {
        // TODO: test tagFilters
    }

    /**
     * Test the property 'hostGroupId'
     */
    @Test
    public void hostGroupIdTest() {
        // TODO: test hostGroupId
    }

}
