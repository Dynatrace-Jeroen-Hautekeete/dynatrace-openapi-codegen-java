/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import com.dynatrace.apis.configv1.model.AdvancedJavaScriptTagSettings;
import com.dynatrace.apis.configv1.model.ContentCapture;
import com.dynatrace.apis.configv1.model.JavaScriptFrameworkSupport;
import com.dynatrace.apis.configv1.model.JavaScriptInjectionRules;
import com.dynatrace.apis.configv1.model.WebApplicationConfigBrowserRestrictionSettings;
import com.dynatrace.apis.configv1.model.WebApplicationConfigIpAddressRestrictionSettings;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for MonitoringSettings
 */
public class MonitoringSettingsTest {
    private final MonitoringSettings model = new MonitoringSettings();

    /**
     * Model tests for MonitoringSettings
     */
    @Test
    public void testMonitoringSettings() {
        // TODO: test MonitoringSettings
    }

    /**
     * Test the property 'fetchRequests'
     */
    @Test
    public void fetchRequestsTest() {
        // TODO: test fetchRequests
    }

    /**
     * Test the property 'xmlHttpRequest'
     */
    @Test
    public void xmlHttpRequestTest() {
        // TODO: test xmlHttpRequest
    }

    /**
     * Test the property 'javaScriptFrameworkSupport'
     */
    @Test
    public void javaScriptFrameworkSupportTest() {
        // TODO: test javaScriptFrameworkSupport
    }

    /**
     * Test the property 'contentCapture'
     */
    @Test
    public void contentCaptureTest() {
        // TODO: test contentCapture
    }

    /**
     * Test the property 'excludeXhrRegex'
     */
    @Test
    public void excludeXhrRegexTest() {
        // TODO: test excludeXhrRegex
    }

    /**
     * Test the property 'correlationHeaderInclusionRegex'
     */
    @Test
    public void correlationHeaderInclusionRegexTest() {
        // TODO: test correlationHeaderInclusionRegex
    }

    /**
     * Test the property 'injectionMode'
     */
    @Test
    public void injectionModeTest() {
        // TODO: test injectionMode
    }

    /**
     * Test the property 'addCrossOriginAnonymousAttribute'
     */
    @Test
    public void addCrossOriginAnonymousAttributeTest() {
        // TODO: test addCrossOriginAnonymousAttribute
    }

    /**
     * Test the property 'scriptTagCacheDurationInHours'
     */
    @Test
    public void scriptTagCacheDurationInHoursTest() {
        // TODO: test scriptTagCacheDurationInHours
    }

    /**
     * Test the property 'libraryFileLocation'
     */
    @Test
    public void libraryFileLocationTest() {
        // TODO: test libraryFileLocation
    }

    /**
     * Test the property 'monitoringDataPath'
     */
    @Test
    public void monitoringDataPathTest() {
        // TODO: test monitoringDataPath
    }

    /**
     * Test the property 'customConfigurationProperties'
     */
    @Test
    public void customConfigurationPropertiesTest() {
        // TODO: test customConfigurationProperties
    }

    /**
     * Test the property 'serverRequestPathId'
     */
    @Test
    public void serverRequestPathIdTest() {
        // TODO: test serverRequestPathId
    }

    /**
     * Test the property 'secureCookieAttribute'
     */
    @Test
    public void secureCookieAttributeTest() {
        // TODO: test secureCookieAttribute
    }

    /**
     * Test the property 'cookiePlacementDomain'
     */
    @Test
    public void cookiePlacementDomainTest() {
        // TODO: test cookiePlacementDomain
    }

    /**
     * Test the property 'cacheControlHeaderOptimizations'
     */
    @Test
    public void cacheControlHeaderOptimizationsTest() {
        // TODO: test cacheControlHeaderOptimizations
    }

    /**
     * Test the property 'advancedJavaScriptTagSettings'
     */
    @Test
    public void advancedJavaScriptTagSettingsTest() {
        // TODO: test advancedJavaScriptTagSettings
    }

    /**
     * Test the property 'browserRestrictionSettings'
     */
    @Test
    public void browserRestrictionSettingsTest() {
        // TODO: test browserRestrictionSettings
    }

    /**
     * Test the property 'ipAddressRestrictionSettings'
     */
    @Test
    public void ipAddressRestrictionSettingsTest() {
        // TODO: test ipAddressRestrictionSettings
    }

    /**
     * Test the property 'javaScriptInjectionRules'
     */
    @Test
    public void javaScriptInjectionRulesTest() {
        // TODO: test javaScriptInjectionRules
    }

    /**
     * Test the property 'angularPackageName'
     */
    @Test
    public void angularPackageNameTest() {
        // TODO: test angularPackageName
    }

}
