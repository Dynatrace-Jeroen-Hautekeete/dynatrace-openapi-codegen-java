/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.api;

import com.dynatrace.apis.configv1.ApiException;
import com.dynatrace.apis.configv1.model.EntityShortRepresentation;
import com.dynatrace.apis.configv1.model.ErrorEnvelope;
import com.dynatrace.apis.configv1.model.ManagementZone;
import com.dynatrace.apis.configv1.model.StubList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for ManagementZonesApi
 */
@Ignore
public class ManagementZonesApiTest {

    private final ManagementZonesApi api = new ManagementZonesApi();

    
    /**
     * Creates a new management zone
     *
     * The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createManagementZoneTest() throws ApiException {
        ManagementZone managementZone = null;
        EntityShortRepresentation response = 
        api.createManagementZone(managementZone);
        
        // TODO: test validations
    }
    
    /**
     * Deletes the specified management zone
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteManagementZoneTest() throws ApiException {
        String id = null;
        
        api.deleteManagementZone(id);
        
        // TODO: test validations
    }
    
    /**
     * Lists the parameters of the specified management zone
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getManagementZoneTest() throws ApiException {
        String id = null;
        Boolean includeProcessGroupReferences = null;
        ManagementZone response = 
        api.getManagementZone(id, includeProcessGroupReferences);
        
        // TODO: test validations
    }
    
    /**
     * Lists all configured management zones
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listManagementZonesTest() throws ApiException {
        StubList response = 
        api.listManagementZones();
        
        // TODO: test validations
    }
    
    /**
     * Updates the specified management zone
     *
     * If a management zone with the specified ID doesn&#39;t exist, a new one is created.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateManagementZoneTest() throws ApiException {
        String id = null;
        ManagementZone managementZone = null;
        EntityShortRepresentation response = 
        api.updateManagementZone(id, managementZone);
        
        // TODO: test validations
    }
    
    /**
     * Validates a new management zone for the &#x60;POST /managementZones&#x60; request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateCreateManagementZoneTest() throws ApiException {
        ManagementZone managementZone = null;
        
        api.validateCreateManagementZone(managementZone);
        
        // TODO: test validations
    }
    
    /**
     * Validate updates of existing management zone for the &#x60;PUT /managementZones/{id}&#x60; request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateUpdateManagementZoneTest() throws ApiException {
        String id = null;
        ManagementZone managementZone = null;
        
        api.validateUpdateManagementZone(id, managementZone);
        
        // TODO: test validations
    }
    
}
