/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.api;

import com.dynatrace.apis.configv1.ApiException;
import com.dynatrace.apis.configv1.model.DashboardReport;
import com.dynatrace.apis.configv1.model.EntityShortRepresentation;
import com.dynatrace.apis.configv1.model.ErrorEnvelope;
import com.dynatrace.apis.configv1.model.ReportStubList;
import com.dynatrace.apis.configv1.model.ReportSubscriptions;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for ReportsApi
 */
@Ignore
public class ReportsApiTest {

    private final ReportsApi api = new ReportsApi();

    
    /**
     * Updates an existing report | maturity&#x3D;EARLY_ADOPTER
     *
     * If a report with the specified ID doesn&#39;t exist, a new report is created.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createOrUpdateReportTest() throws ApiException {
        String id = null;
        DashboardReport dashboardReport = null;
        EntityShortRepresentation response = 
        api.createOrUpdateReport(id, dashboardReport);
        
        // TODO: test validations
    }
    
    /**
     * Creates a report | maturity&#x3D;EARLY_ADOPTER
     *
     * The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createReportTest() throws ApiException {
        DashboardReport dashboardReport = null;
        EntityShortRepresentation response = 
        api.createReport(dashboardReport);
        
        // TODO: test validations
    }
    
    /**
     * Deletes the specified report | maturity&#x3D;EARLY_ADOPTER
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteReportTest() throws ApiException {
        String id = null;
        
        api.deleteReport(id);
        
        // TODO: test validations
    }
    
    /**
     * Gets the properties of the specified report | maturity&#x3D;EARLY_ADOPTER
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReportTest() throws ApiException {
        String id = null;
        DashboardReport response = 
        api.getReport(id);
        
        // TODO: test validations
    }
    
    /**
     * Lists all reports available in your environment | maturity&#x3D;EARLY_ADOPTER
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listReportsTest() throws ApiException {
        String type = null;
        String sourceId = null;
        ReportStubList response = 
        api.listReports(type, sourceId);
        
        // TODO: test validations
    }
    
    /**
     * Subscribes to the specified report | maturity&#x3D;EARLY_ADOPTER
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void subscribeReportTest() throws ApiException {
        String id = null;
        ReportSubscriptions reportSubscriptions = null;
        EntityShortRepresentation response = 
        api.subscribeReport(id, reportSubscriptions);
        
        // TODO: test validations
    }
    
    /**
     * Unsubscribes from the specified report | maturity&#x3D;EARLY_ADOPTER
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void unsubscribeReportTest() throws ApiException {
        String id = null;
        ReportSubscriptions reportSubscriptions = null;
        EntityShortRepresentation response = 
        api.unsubscribeReport(id, reportSubscriptions);
        
        // TODO: test validations
    }
    
    /**
     * Validates the payload for the &#x60;PUT /reports/{id}&#x60; request | maturity&#x3D;EARLY_ADOPTER
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateCreateOrUpdateReportTest() throws ApiException {
        String id = null;
        DashboardReport dashboardReport = null;
        
        api.validateCreateOrUpdateReport(id, dashboardReport);
        
        // TODO: test validations
    }
    
    /**
     * Validates the payload for the &#x60;POST /reports&#x60; request | maturity&#x3D;EARLY_ADOPTER
     *
     * The body must not provide an ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateCreateReportTest() throws ApiException {
        DashboardReport dashboardReport = null;
        
        api.validateCreateReport(dashboardReport);
        
        // TODO: test validations
    }
    
}
