/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.api;

import com.dynatrace.apis.configv1.ApiException;
import com.dynatrace.apis.configv1.model.EntityShortRepresentation;
import com.dynatrace.apis.configv1.model.ErrorEnvelope;
import com.dynatrace.apis.configv1.model.RequestAttribute;
import com.dynatrace.apis.configv1.model.StubList;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for ServiceRequestAttributesApi
 */
@Ignore
public class ServiceRequestAttributesApiTest {

    private final ServiceRequestAttributesApi api = new ServiceRequestAttributesApi();

    
    /**
     * Creates a new request attribute
     *
     * The body must not provide an ID as IDs are automatically assigned.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createRequestAttributesConfigTest() throws ApiException {
        RequestAttribute requestAttribute = null;
        EntityShortRepresentation response = 
        api.createRequestAttributesConfig(requestAttribute);
        
        // TODO: test validations
    }
    
    /**
     * Deletes the specified request attribute
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRequestAttributesConfigTest() throws ApiException {
        UUID id = null;
        
        api.deleteRequestAttributesConfig(id);
        
        // TODO: test validations
    }
    
    /**
     * Shows the properties of the specified request attribute
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRequestAttributesConfigTest() throws ApiException {
        UUID id = null;
        Boolean includeProcessGroupReferences = null;
        RequestAttribute response = 
        api.getRequestAttributesConfig(id, includeProcessGroupReferences);
        
        // TODO: test validations
    }
    
    /**
     * Lists all available request attributes
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listRequestAttributesConfigsTest() throws ApiException {
        StubList response = 
        api.listRequestAttributesConfigs();
        
        // TODO: test validations
    }
    
    /**
     * Updates an existing request attribute or creates a new one
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateRequestAttributesConfigTest() throws ApiException {
        UUID id = null;
        RequestAttribute requestAttribute = null;
        EntityShortRepresentation response = 
        api.updateRequestAttributesConfig(id, requestAttribute);
        
        // TODO: test validations
    }
    
    /**
     * Validates new request attributes for the &#x60;POST /requestAttributes&#x60; request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateCreateRequestAttributesConfigTest() throws ApiException {
        RequestAttribute requestAttribute = null;
        
        api.validateCreateRequestAttributesConfig(requestAttribute);
        
        // TODO: test validations
    }
    
    /**
     * Validate updates of existing request attribute for the &#x60;PUT /requestAttributes/{id}&#x60; request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateUpdateRequestAttributesConfigTest() throws ApiException {
        UUID id = null;
        RequestAttribute requestAttribute = null;
        
        api.validateUpdateRequestAttributesConfig(id, requestAttribute);
        
        // TODO: test validations
    }
    
}
