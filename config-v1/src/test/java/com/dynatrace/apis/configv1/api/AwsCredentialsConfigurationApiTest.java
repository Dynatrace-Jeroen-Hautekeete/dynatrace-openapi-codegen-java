/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.api;

import com.dynatrace.apis.configv1.ApiException;
import com.dynatrace.apis.configv1.model.AwsCredentialsConfig;
import com.dynatrace.apis.configv1.model.AwsIamToken;
import com.dynatrace.apis.configv1.model.AwsMonitoredServicesDto;
import com.dynatrace.apis.configv1.model.CloudSupportedServicesList;
import com.dynatrace.apis.configv1.model.EntityShortRepresentation;
import com.dynatrace.apis.configv1.model.ErrorEnvelope;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for AwsCredentialsConfigurationApi
 */
@Ignore
public class AwsCredentialsConfigurationApiTest {

    private final AwsCredentialsConfigurationApi api = new AwsCredentialsConfigurationApi();

    
    /**
     * Creates a new AWS credentials configuration
     *
     * The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAwsCredentialsConfigTest() throws ApiException {
        AwsCredentialsConfig awsCredentialsConfig = null;
        EntityShortRepresentation response = 
        api.createAwsCredentialsConfig(awsCredentialsConfig);
        
        // TODO: test validations
    }
    
    /**
     * Deletes the specified AWS credentials configuration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAwsCredentialsConfigTest() throws ApiException {
        String id = null;
        
        api.deleteAwsCredentialsConfig(id);
        
        // TODO: test validations
    }
    
    /**
     * Gets the configuration of the specified AWS credentials
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAwsCredentialsConfigTest() throws ApiException {
        String id = null;
        AwsCredentialsConfig response = 
        api.getAwsCredentialsConfig(id);
        
        // TODO: test validations
    }
    
    /**
     * Gets the monitored services configuration of the specified AWS credentials
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAwsServicesConfigTest() throws ApiException {
        String id = null;
        AwsMonitoredServicesDto response = 
        api.getAwsServicesConfig(id);
        
        // TODO: test validations
    }
    
    /**
     * Gets the list of AWS supported services
     *
     * You can use this list for adding services to AWS credentials
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSupportedServicesTest() throws ApiException {
        CloudSupportedServicesList response = 
        api.getSupportedServices();
        
        // TODO: test validations
    }
    
    /**
     * Lists all available AWS credentials configurations
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAwsCredentialConfigsTest() throws ApiException {
        List<EntityShortRepresentation> response = 
        api.listAwsCredentialConfigs();
        
        // TODO: test validations
    }
    
    /**
     * Gets the external ID token for setting an IAM role
     *
     * You&#39;ll need it for the role-based AWS authentication.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readIamExternalIdTokenTest() throws ApiException {
        AwsIamToken response = 
        api.readIamExternalIdToken();
        
        // TODO: test validations
    }
    
    /**
     * Updates an existing AWS credentials configuration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateAwsCredentialsConfigTest() throws ApiException {
        String id = null;
        AwsCredentialsConfig awsCredentialsConfig = null;
        EntityShortRepresentation response = 
        api.updateAwsCredentialsConfig(id, awsCredentialsConfig);
        
        // TODO: test validations
    }
    
    /**
     * Replace an existing monitored services configuration of the specified AWS credentials
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateAwsServicesConfigTest() throws ApiException {
        String id = null;
        AwsMonitoredServicesDto awsMonitoredServicesDto = null;
        
        api.updateAwsServicesConfig(id, awsMonitoredServicesDto);
        
        // TODO: test validations
    }
    
    /**
     * Validates the payload for the &#x60;POST /aws/credentials&#x60; request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateCreateAwsCredentialsConfigTest() throws ApiException {
        AwsCredentialsConfig awsCredentialsConfig = null;
        
        api.validateCreateAwsCredentialsConfig(awsCredentialsConfig);
        
        // TODO: test validations
    }
    
    /**
     * Validates the payload for the &#x60;PUT /aws/credentials/{id}&#x60; request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateUpdateAwsCredentialsConfigTest() throws ApiException {
        String id = null;
        AwsCredentialsConfig awsCredentialsConfig = null;
        
        api.validateUpdateAwsCredentialsConfig(id, awsCredentialsConfig);
        
        // TODO: test validations
    }
    
    /**
     * Validates the payload for the &#x60;PUT /aws/credentials/{id}/services&#x60; request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateUpdateAwsServicesConfigTest() throws ApiException {
        String id = null;
        AwsMonitoredServicesDto awsMonitoredServicesDto = null;
        
        api.validateUpdateAwsServicesConfig(id, awsMonitoredServicesDto);
        
        // TODO: test validations
    }
    
}
