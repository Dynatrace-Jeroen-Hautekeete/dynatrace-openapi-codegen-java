/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import com.dynatrace.apis.configv1.model.CalculatedMetricDefinition;
import com.dynatrace.apis.configv1.model.Condition;
import com.dynatrace.apis.configv1.model.ConfigurationMetadata;
import com.dynatrace.apis.configv1.model.DimensionDefinition;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for CalculatedServiceMetric
 */
public class CalculatedServiceMetricTest {
    private final CalculatedServiceMetric model = new CalculatedServiceMetric();

    /**
     * Model tests for CalculatedServiceMetric
     */
    @Test
    public void testCalculatedServiceMetric() {
        // TODO: test CalculatedServiceMetric
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'tsmMetricKey'
     */
    @Test
    public void tsmMetricKeyTest() {
        // TODO: test tsmMetricKey
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'ignoreMutedRequests'
     */
    @Test
    public void ignoreMutedRequestsTest() {
        // TODO: test ignoreMutedRequests
    }

    /**
     * Test the property 'metricDefinition'
     */
    @Test
    public void metricDefinitionTest() {
        // TODO: test metricDefinition
    }

    /**
     * Test the property 'unit'
     */
    @Test
    public void unitTest() {
        // TODO: test unit
    }

    /**
     * Test the property 'unitDisplayName'
     */
    @Test
    public void unitDisplayNameTest() {
        // TODO: test unitDisplayName
    }

    /**
     * Test the property 'entityId'
     */
    @Test
    public void entityIdTest() {
        // TODO: test entityId
    }

    /**
     * Test the property 'managementZones'
     */
    @Test
    public void managementZonesTest() {
        // TODO: test managementZones
    }

    /**
     * Test the property 'conditions'
     */
    @Test
    public void conditionsTest() {
        // TODO: test conditions
    }

    /**
     * Test the property 'dimensionDefinition'
     */
    @Test
    public void dimensionDefinitionTest() {
        // TODO: test dimensionDefinition
    }

}
