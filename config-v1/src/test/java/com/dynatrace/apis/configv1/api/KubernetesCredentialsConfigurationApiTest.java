/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.api;

import com.dynatrace.apis.configv1.ApiException;
import com.dynatrace.apis.configv1.model.EntityShortRepresentation;
import com.dynatrace.apis.configv1.model.ErrorEnvelope;
import com.dynatrace.apis.configv1.model.KubernetesConfigStubListDto;
import com.dynatrace.apis.configv1.model.KubernetesCredentials;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for KubernetesCredentialsConfigurationApi
 */
@Ignore
public class KubernetesCredentialsConfigurationApiTest {

    private final KubernetesCredentialsConfigurationApi api = new KubernetesCredentialsConfigurationApi();

    
    /**
     * Creates a new Kubernetes credentials configuration | maturity&#x3D;EARLY_ADOPTER
     *
     * The body must not provide an ID as it will be automatically assigned by the Dynatrace server.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createKubernetesCredentialsConfigTest() throws ApiException {
        KubernetesCredentials kubernetesCredentials = null;
        EntityShortRepresentation response = 
        api.createKubernetesCredentialsConfig(kubernetesCredentials);
        
        // TODO: test validations
    }
    
    /**
     * Deletes the specified Kubernetes credentials configuration | maturity&#x3D;EARLY_ADOPTER
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteKubernetesCredentialsConfigTest() throws ApiException {
        String id = null;
        
        api.deleteKubernetesCredentialsConfig(id);
        
        // TODO: test validations
    }
    
    /**
     * Gets the configuration of the specified Kubernetes credentials | maturity&#x3D;EARLY_ADOPTER
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getKubernetesCredentialsConfigTest() throws ApiException {
        String id = null;
        KubernetesCredentials response = 
        api.getKubernetesCredentialsConfig(id);
        
        // TODO: test validations
    }
    
    /**
     * Lists all available Kubernetes credentials configurations | maturity&#x3D;EARLY_ADOPTER
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listKubernetesCredentialsConfigsTest() throws ApiException {
        KubernetesConfigStubListDto response = 
        api.listKubernetesCredentialsConfigs();
        
        // TODO: test validations
    }
    
    /**
     * Updates an existing Kubernetes credentials configuration | maturity&#x3D;EARLY_ADOPTER
     *
     * You can&#39;t change the URL of the Kubernetes cluster.   If a configuration with the specified ID doesn&#39;t exist, a new configuration is created.  IDs of entities are computed server side upon creation. If you want to create a new entity, use the POST method without an ID. To update an existing entity, use the PUT method with an existing, valid ID. To re-create an entity under a specific ID, a valid ID must be provided with the PUT method.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateKubernetesCredentialsConfigTest() throws ApiException {
        String id = null;
        KubernetesCredentials kubernetesCredentials = null;
        EntityShortRepresentation response = 
        api.updateKubernetesCredentialsConfig(id, kubernetesCredentials);
        
        // TODO: test validations
    }
    
    /**
     * Validates the payload for the &#x60;POST /kubernetes/credentials&#x60; request | maturity&#x3D;EARLY_ADOPTER
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateCreateKubernetesCredentialsConfigTest() throws ApiException {
        KubernetesCredentials kubernetesCredentials = null;
        
        api.validateCreateKubernetesCredentialsConfig(kubernetesCredentials);
        
        // TODO: test validations
    }
    
    /**
     * Validates the payload for the &#x60;PUT /kubernetes/credentials/{id}&#x60; request | maturity&#x3D;EARLY_ADOPTER
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateUpdateKubernetesCredentialsConfigTest() throws ApiException {
        String id = null;
        KubernetesCredentials kubernetesCredentials = null;
        
        api.validateUpdateKubernetesCredentialsConfig(id, kubernetesCredentials);
        
        // TODO: test validations
    }
    
}
