/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.api;

import com.dynatrace.apis.configv1.ApiException;
import com.dynatrace.apis.configv1.model.ErrorEnvelope;
import com.dynatrace.apis.configv1.model.NotificationConfig;
import com.dynatrace.apis.configv1.model.NotificationConfigStub;
import com.dynatrace.apis.configv1.model.NotificationConfigStubListDto;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for NotificationsApi
 */
@Ignore
public class NotificationsApiTest {

    private final NotificationsApi api = new NotificationsApi();

    
    /**
     * Creates a new notification configuration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNotificationConfigTest() throws ApiException {
        NotificationConfig notificationConfig = null;
        
        api.createNotificationConfig(notificationConfig);
        
        // TODO: test validations
    }
    
    /**
     * Deletes the specified notification configuration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteNotificationConfigTest() throws ApiException {
        UUID id = null;
        
        api.deleteNotificationConfig(id);
        
        // TODO: test validations
    }
    
    /**
     * Gets the properties of the specified notification configuration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getNotificationConfigTest() throws ApiException {
        UUID id = null;
        NotificationConfig response = 
        api.getNotificationConfig(id);
        
        // TODO: test validations
    }
    
    /**
     * Lists all notification configurations available in your environment
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listNotificationConfigsTest() throws ApiException {
        NotificationConfigStubListDto response = 
        api.listNotificationConfigs();
        
        // TODO: test validations
    }
    
    /**
     * Updates an existing notification configuration or creates a new one
     *
     * If a notification configuration with the specified ID doesn&#39;t exist, a new configuration is created.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateNotificationConfigTest() throws ApiException {
        UUID id = null;
        NotificationConfig notificationConfig = null;
        NotificationConfigStub response = 
        api.updateNotificationConfig(id, notificationConfig);
        
        // TODO: test validations
    }
    
    /**
     * Validates the payload for the &#x60;POST /notifications&#x60; request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateCreateNotificationConfigTest() throws ApiException {
        NotificationConfig notificationConfig = null;
        
        api.validateCreateNotificationConfig(notificationConfig);
        
        // TODO: test validations
    }
    
    /**
     * Validates the payload the &#x60;PUT /notifications/{id}&#x60; request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateUpdateNotificationConfigTest() throws ApiException {
        UUID id = null;
        NotificationConfig notificationConfig = null;
        
        api.validateUpdateNotificationConfig(id, notificationConfig);
        
        // TODO: test validations
    }
    
}
