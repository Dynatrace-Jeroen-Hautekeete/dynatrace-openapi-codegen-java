/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import com.dynatrace.apis.configv1.model.ApplicationTypeComparison;
import com.dynatrace.apis.configv1.model.AzureComputeModeComparison;
import com.dynatrace.apis.configv1.model.AzureSkuComparision;
import com.dynatrace.apis.configv1.model.BitnessComparision;
import com.dynatrace.apis.configv1.model.CloudTypeComparison;
import com.dynatrace.apis.configv1.model.CustomApplicationTypeComparison;
import com.dynatrace.apis.configv1.model.DatabaseTopologyComparison;
import com.dynatrace.apis.configv1.model.DcrumDecoderComparison;
import com.dynatrace.apis.configv1.model.EntityIdComparison;
import com.dynatrace.apis.configv1.model.HypervisorTypeComparision;
import com.dynatrace.apis.configv1.model.IndexedNameComparison;
import com.dynatrace.apis.configv1.model.IndexedStringComparison;
import com.dynatrace.apis.configv1.model.IndexedTagComparison;
import com.dynatrace.apis.configv1.model.IntegerComparison;
import com.dynatrace.apis.configv1.model.IpAddressComparison;
import com.dynatrace.apis.configv1.model.MobilePlatformComparison;
import com.dynatrace.apis.configv1.model.OsArchitectureComparison;
import com.dynatrace.apis.configv1.model.OsTypeComparison;
import com.dynatrace.apis.configv1.model.PaasTypeComparison;
import com.dynatrace.apis.configv1.model.ServiceTopologyComparison;
import com.dynatrace.apis.configv1.model.ServiceTypeComparison;
import com.dynatrace.apis.configv1.model.SimpleHostTechComparison;
import com.dynatrace.apis.configv1.model.SimpleTechComparison;
import com.dynatrace.apis.configv1.model.StringComparison;
import com.dynatrace.apis.configv1.model.SyntheticEngineTypeComparison;
import com.dynatrace.apis.configv1.model.TagComparison;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ComparisonBasic
 */
public class ComparisonBasicTest {
    private final ComparisonBasic model = new ComparisonBasic();

    /**
     * Model tests for ComparisonBasic
     */
    @Test
    public void testComparisonBasic() {
        // TODO: test ComparisonBasic
    }

    /**
     * Test the property 'operator'
     */
    @Test
    public void operatorTest() {
        // TODO: test operator
    }

    /**
     * Test the property 'value'
     */
    @Test
    public void valueTest() {
        // TODO: test value
    }

    /**
     * Test the property 'negate'
     */
    @Test
    public void negateTest() {
        // TODO: test negate
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
