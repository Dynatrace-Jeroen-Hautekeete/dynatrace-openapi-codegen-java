/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.api;

import com.dynatrace.apis.configv1.ApiException;
import com.dynatrace.apis.configv1.model.AlertingProfile;
import com.dynatrace.apis.configv1.model.EntityShortRepresentation;
import com.dynatrace.apis.configv1.model.ErrorEnvelope;
import com.dynatrace.apis.configv1.model.StubList;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for AlertingProfilesApi
 */
@Ignore
public class AlertingProfilesApiTest {

    private final AlertingProfilesApi api = new AlertingProfilesApi();

    
    /**
     * Creates a new alerting profile
     *
     * The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAlertingProfileTest() throws ApiException {
        AlertingProfile alertingProfile = null;
        EntityShortRepresentation response = 
        api.createAlertingProfile(alertingProfile);
        
        // TODO: test validations
    }
    
    /**
     * Updates an existing alerting profile
     *
     * If an alerting profile with the specified ID doesn&#39;t exist, a new one is created.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createOrUpdateAlertingProfileTest() throws ApiException {
        UUID id = null;
        AlertingProfile alertingProfile = null;
        EntityShortRepresentation response = 
        api.createOrUpdateAlertingProfile(id, alertingProfile);
        
        // TODO: test validations
    }
    
    /**
     * Deletes the specified alerting profile
     *
     * The default alerting profile cannot be deleted.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAlertingProfileTest() throws ApiException {
        UUID id = null;
        
        api.deleteAlertingProfile(id);
        
        // TODO: test validations
    }
    
    /**
     * Gets the properties of the specified alerting profile
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAlertingProfileTest() throws ApiException {
        UUID id = null;
        AlertingProfile response = 
        api.getAlertingProfile(id);
        
        // TODO: test validations
    }
    
    /**
     * Lists all alerting profiles available in your environment
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAlertingProfilesTest() throws ApiException {
        StubList response = 
        api.getAlertingProfiles();
        
        // TODO: test validations
    }
    
    /**
     * Validates the payload the &#x60;POST /alertingProfiles&#x60; request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateCreateAlertingProfileTest() throws ApiException {
        AlertingProfile alertingProfile = null;
        
        api.validateCreateAlertingProfile(alertingProfile);
        
        // TODO: test validations
    }
    
    /**
     * Validates the payload the &#x60;PUT /alertingProfiles/{id}&#x60; request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateCreateOrUpdateAlertingProfileTest() throws ApiException {
        UUID id = null;
        AlertingProfile alertingProfile = null;
        
        api.validateCreateOrUpdateAlertingProfile(id, alertingProfile);
        
        // TODO: test validations
    }
    
}
