/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import com.dynatrace.apis.configv1.model.Axes;
import com.dynatrace.apis.configv1.model.GraphChartSettings;
import com.dynatrace.apis.configv1.model.HeatmapSettings;
import com.dynatrace.apis.configv1.model.HoneycombSettings;
import com.dynatrace.apis.configv1.model.SingleValueSettings;
import com.dynatrace.apis.configv1.model.TableSettings;
import com.dynatrace.apis.configv1.model.VisualizationGlobalProperties;
import com.dynatrace.apis.configv1.model.VisualizationRule;
import com.dynatrace.apis.configv1.model.VisualizationThreshold;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for VisualizationConfiguration
 */
public class VisualizationConfigurationTest {
    private final VisualizationConfiguration model = new VisualizationConfiguration();

    /**
     * Model tests for VisualizationConfiguration
     */
    @Test
    public void testVisualizationConfiguration() {
        // TODO: test VisualizationConfiguration
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'global'
     */
    @Test
    public void globalTest() {
        // TODO: test global
    }

    /**
     * Test the property 'rules'
     */
    @Test
    public void rulesTest() {
        // TODO: test rules
    }

    /**
     * Test the property 'axes'
     */
    @Test
    public void axesTest() {
        // TODO: test axes
    }

    /**
     * Test the property 'heatmapSettings'
     */
    @Test
    public void heatmapSettingsTest() {
        // TODO: test heatmapSettings
    }

    /**
     * Test the property 'singleValueSettings'
     */
    @Test
    public void singleValueSettingsTest() {
        // TODO: test singleValueSettings
    }

    /**
     * Test the property 'thresholds'
     */
    @Test
    public void thresholdsTest() {
        // TODO: test thresholds
    }

    /**
     * Test the property 'tableSettings'
     */
    @Test
    public void tableSettingsTest() {
        // TODO: test tableSettings
    }

    /**
     * Test the property 'graphChartSettings'
     */
    @Test
    public void graphChartSettingsTest() {
        // TODO: test graphChartSettings
    }

    /**
     * Test the property 'honeycombSettings'
     */
    @Test
    public void honeycombSettingsTest() {
        // TODO: test honeycombSettings
    }

}
