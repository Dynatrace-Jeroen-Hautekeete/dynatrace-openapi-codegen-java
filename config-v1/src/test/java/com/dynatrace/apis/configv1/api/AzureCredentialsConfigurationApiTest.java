/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.api;

import com.dynatrace.apis.configv1.ApiException;
import com.dynatrace.apis.configv1.model.AzureCredentials;
import com.dynatrace.apis.configv1.model.AzureCredentialsCreation;
import com.dynatrace.apis.configv1.model.AzureMonitoredServicesDto;
import com.dynatrace.apis.configv1.model.CloudSupportedServicesList;
import com.dynatrace.apis.configv1.model.EntityShortRepresentation;
import com.dynatrace.apis.configv1.model.ErrorEnvelope;
import com.dynatrace.apis.configv1.model.StubList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for AzureCredentialsConfigurationApi
 */
@Ignore
public class AzureCredentialsConfigurationApiTest {

    private final AzureCredentialsConfigurationApi api = new AzureCredentialsConfigurationApi();

    
    /**
     * Creates a new Azure credentials configuration
     *
     * The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAzureCredentialsConfigTest() throws ApiException {
        AzureCredentialsCreation azureCredentialsCreation = null;
        EntityShortRepresentation response = 
        api.createAzureCredentialsConfig(azureCredentialsCreation);
        
        // TODO: test validations
    }
    
    /**
     * Deletes the specified Azure credentials configuration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAzureCredentialsConfigTest() throws ApiException {
        String id = null;
        
        api.deleteAzureCredentialsConfig(id);
        
        // TODO: test validations
    }
    
    /**
     * Gets the configuration of the specified Azure credentials
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAzureCredentialsConfigTest() throws ApiException {
        String id = null;
        AzureCredentials response = 
        api.getAzureCredentialsConfig(id);
        
        // TODO: test validations
    }
    
    /**
     * Gets the monitored services configuration of the specified Azure credentials
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAzureServicesConfigTest() throws ApiException {
        String id = null;
        AzureMonitoredServicesDto response = 
        api.getAzureServicesConfig(id);
        
        // TODO: test validations
    }
    
    /**
     * Gets the list of Azure supported services
     *
     * You can use this list for adding services to Azure credentials
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSupportedServices1Test() throws ApiException {
        CloudSupportedServicesList response = 
        api.getSupportedServices1();
        
        // TODO: test validations
    }
    
    /**
     * Lists all available Azure credentials configurations
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAzureCredentialsConfigsTest() throws ApiException {
        StubList response = 
        api.listAzureCredentialsConfigs();
        
        // TODO: test validations
    }
    
    /**
     * Updates an existing Azure credentials configuration
     *
     * * You can&#39;t change the Application ID or Directory ID of an Azure configuration. If you need to change them, create a new credentials configuration.  * If a configuration with the specified ID doesn&#39;t exist, a new configuration is created.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateAzureCredentialsConfigTest() throws ApiException {
        String id = null;
        AzureCredentials azureCredentials = null;
        EntityShortRepresentation response = 
        api.updateAzureCredentialsConfig(id, azureCredentials);
        
        // TODO: test validations
    }
    
    /**
     * Replace an existing monitored services configuration of the specified Azure credentials
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateAzureServicesConfigTest() throws ApiException {
        String id = null;
        AzureMonitoredServicesDto azureMonitoredServicesDto = null;
        
        api.updateAzureServicesConfig(id, azureMonitoredServicesDto);
        
        // TODO: test validations
    }
    
    /**
     * Validates the payload for the &#x60;POST /azure/credentials&#x60; request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateAzureCredentialsConfigTest() throws ApiException {
        AzureCredentials azureCredentials = null;
        
        api.validateAzureCredentialsConfig(azureCredentials);
        
        // TODO: test validations
    }
    
    /**
     * Validates the payload for the &#x60;PUT /azure/credentials/{id}/services&#x60; request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateAzureServicesConfigTest() throws ApiException {
        String id = null;
        AzureMonitoredServicesDto azureMonitoredServicesDto = null;
        
        api.validateAzureServicesConfig(id, azureMonitoredServicesDto);
        
        // TODO: test validations
    }
    
    /**
     * Validates the payload for the &#x60;PUT /azure/credentials/{id}&#x60; request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateConfigurationUpdateTest() throws ApiException {
        String id = null;
        AzureCredentials azureCredentials = null;
        
        api.validateConfigurationUpdate(id, azureCredentials);
        
        // TODO: test validations
    }
    
}
