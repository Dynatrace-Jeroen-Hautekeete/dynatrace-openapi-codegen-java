/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.ApplicationFilter;
import com.dynatrace.apis.configv1.model.ConfigurationMetadataDtoImpl;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Application detection rule.
 */
@ApiModel(description = "Application detection rule.")
@JsonPropertyOrder({
  ApplicationDetectionRuleConfig.JSON_PROPERTY_METADATA,
  ApplicationDetectionRuleConfig.JSON_PROPERTY_ID,
  ApplicationDetectionRuleConfig.JSON_PROPERTY_ORDER,
  ApplicationDetectionRuleConfig.JSON_PROPERTY_APPLICATION_IDENTIFIER,
  ApplicationDetectionRuleConfig.JSON_PROPERTY_FILTER_CONFIG,
  ApplicationDetectionRuleConfig.JSON_PROPERTY_NAME
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class ApplicationDetectionRuleConfig {
  public static final String JSON_PROPERTY_METADATA = "metadata";
  private ConfigurationMetadataDtoImpl metadata;

  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_ORDER = "order";
  private String order;

  public static final String JSON_PROPERTY_APPLICATION_IDENTIFIER = "applicationIdentifier";
  private String applicationIdentifier;

  public static final String JSON_PROPERTY_FILTER_CONFIG = "filterConfig";
  private ApplicationFilter filterConfig;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public ApplicationDetectionRuleConfig() { 
  }

  public ApplicationDetectionRuleConfig metadata(ConfigurationMetadataDtoImpl metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConfigurationMetadataDtoImpl getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(ConfigurationMetadataDtoImpl metadata) {
    this.metadata = metadata;
  }


  public ApplicationDetectionRuleConfig id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of the rule.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "12345678-abcd-1234-abcd-1234567890ab", value = "The ID of the rule.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }


  public ApplicationDetectionRuleConfig order(String order) {
    this.order = order;
    return this;
  }

   /**
   * The order of the rule in the rules list.   The rules are evaluated from top to bottom. The first matching rule applies.
   * @return order
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The order of the rule in the rules list.   The rules are evaluated from top to bottom. The first matching rule applies.")
  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOrder() {
    return order;
  }


  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrder(String order) {
    this.order = order;
  }


  public ApplicationDetectionRuleConfig applicationIdentifier(String applicationIdentifier) {
    this.applicationIdentifier = applicationIdentifier;
    return this;
  }

   /**
   * The Dynatrace entity ID of the application, for example &#x60;APPLICATION-4A3B43&#x60;.    You must use an existing ID. If you need to create a rule for an application that doesn&#39;t exist yet, [create an application first](https://dt-url.net/vt03khh) and then configure detection rules for it.
   * @return applicationIdentifier
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "APPLICATION-123456", required = true, value = "The Dynatrace entity ID of the application, for example `APPLICATION-4A3B43`.    You must use an existing ID. If you need to create a rule for an application that doesn't exist yet, [create an application first](https://dt-url.net/vt03khh) and then configure detection rules for it.")
  @JsonProperty(JSON_PROPERTY_APPLICATION_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getApplicationIdentifier() {
    return applicationIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_APPLICATION_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setApplicationIdentifier(String applicationIdentifier) {
    this.applicationIdentifier = applicationIdentifier;
  }


  public ApplicationDetectionRuleConfig filterConfig(ApplicationFilter filterConfig) {
    this.filterConfig = filterConfig;
    return this;
  }

   /**
   * Get filterConfig
   * @return filterConfig
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_FILTER_CONFIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ApplicationFilter getFilterConfig() {
    return filterConfig;
  }


  @JsonProperty(JSON_PROPERTY_FILTER_CONFIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFilterConfig(ApplicationFilter filterConfig) {
    this.filterConfig = filterConfig;
  }


  public ApplicationDetectionRuleConfig name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The unique name of the Application detection rule.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique name of the Application detection rule.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  /**
   * Return true if this ApplicationDetectionRuleConfig object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationDetectionRuleConfig applicationDetectionRuleConfig = (ApplicationDetectionRuleConfig) o;
    return Objects.equals(this.metadata, applicationDetectionRuleConfig.metadata) &&
        Objects.equals(this.id, applicationDetectionRuleConfig.id) &&
        Objects.equals(this.order, applicationDetectionRuleConfig.order) &&
        Objects.equals(this.applicationIdentifier, applicationDetectionRuleConfig.applicationIdentifier) &&
        Objects.equals(this.filterConfig, applicationDetectionRuleConfig.filterConfig) &&
        Objects.equals(this.name, applicationDetectionRuleConfig.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metadata, id, order, applicationIdentifier, filterConfig, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationDetectionRuleConfig {\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    applicationIdentifier: ").append(toIndentedString(applicationIdentifier)).append("\n");
    sb.append("    filterConfig: ").append(toIndentedString(filterConfig)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

