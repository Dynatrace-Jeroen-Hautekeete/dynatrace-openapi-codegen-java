/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.MobileCustomApdex;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Configuration of an existing mobile or custom application.
 */
@ApiModel(description = "Configuration of an existing mobile or custom application.")
@JsonPropertyOrder({
  MobileCustomAppConfig.JSON_PROPERTY_IDENTIFIER,
  MobileCustomAppConfig.JSON_PROPERTY_NAME,
  MobileCustomAppConfig.JSON_PROPERTY_APPLICATION_TYPE,
  MobileCustomAppConfig.JSON_PROPERTY_APPLICATION_ID,
  MobileCustomAppConfig.JSON_PROPERTY_ICON_TYPE,
  MobileCustomAppConfig.JSON_PROPERTY_COST_CONTROL_USER_SESSION_PERCENTAGE,
  MobileCustomAppConfig.JSON_PROPERTY_APDEX_SETTINGS,
  MobileCustomAppConfig.JSON_PROPERTY_OPT_IN_MODE_ENABLED,
  MobileCustomAppConfig.JSON_PROPERTY_SESSION_REPLAY_ENABLED,
  MobileCustomAppConfig.JSON_PROPERTY_SESSION_REPLAY_ON_CRASH_ENABLED,
  MobileCustomAppConfig.JSON_PROPERTY_BEACON_ENDPOINT_TYPE,
  MobileCustomAppConfig.JSON_PROPERTY_BEACON_ENDPOINT_URL
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class MobileCustomAppConfig {
  public static final String JSON_PROPERTY_IDENTIFIER = "identifier";
  private String identifier;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  /**
   * The type of the application.
   */
  public enum ApplicationTypeEnum {
    CUSTOM_APPLICATION("CUSTOM_APPLICATION"),
    
    MOBILE_APPLICATION("MOBILE_APPLICATION");

    private String value;

    ApplicationTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ApplicationTypeEnum fromValue(String value) {
      for (ApplicationTypeEnum b : ApplicationTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_APPLICATION_TYPE = "applicationType";
  private ApplicationTypeEnum applicationType;

  public static final String JSON_PROPERTY_APPLICATION_ID = "applicationId";
  private String applicationId;

  /**
   * Custom application icon.  Mobile apps always use the mobile device icon, so this icon can only be set for custom apps.
   */
  public enum IconTypeEnum {
    AMAZON_ECHO("AMAZON_ECHO"),
    
    DESKTOP("DESKTOP"),
    
    EMBEDDED("EMBEDDED"),
    
    IOT("IOT"),
    
    MICROSOFT_HOLOLENS("MICROSOFT_HOLOLENS"),
    
    UFO("UFO"),
    
    USERS("USERS");

    private String value;

    IconTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static IconTypeEnum fromValue(String value) {
      for (IconTypeEnum b : IconTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ICON_TYPE = "iconType";
  private IconTypeEnum iconType;

  public static final String JSON_PROPERTY_COST_CONTROL_USER_SESSION_PERCENTAGE = "costControlUserSessionPercentage";
  private Integer costControlUserSessionPercentage;

  public static final String JSON_PROPERTY_APDEX_SETTINGS = "apdexSettings";
  private MobileCustomApdex apdexSettings;

  public static final String JSON_PROPERTY_OPT_IN_MODE_ENABLED = "optInModeEnabled";
  private Boolean optInModeEnabled;

  public static final String JSON_PROPERTY_SESSION_REPLAY_ENABLED = "sessionReplayEnabled";
  private Boolean sessionReplayEnabled;

  public static final String JSON_PROPERTY_SESSION_REPLAY_ON_CRASH_ENABLED = "sessionReplayOnCrashEnabled";
  private Boolean sessionReplayOnCrashEnabled;

  /**
   * The type of the beacon endpoint.
   */
  public enum BeaconEndpointTypeEnum {
    CLUSTER_ACTIVE_GATE("CLUSTER_ACTIVE_GATE"),
    
    ENVIRONMENT_ACTIVE_GATE("ENVIRONMENT_ACTIVE_GATE"),
    
    INSTRUMENTED_WEB_SERVER("INSTRUMENTED_WEB_SERVER");

    private String value;

    BeaconEndpointTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static BeaconEndpointTypeEnum fromValue(String value) {
      for (BeaconEndpointTypeEnum b : BeaconEndpointTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_BEACON_ENDPOINT_TYPE = "beaconEndpointType";
  private BeaconEndpointTypeEnum beaconEndpointType;

  public static final String JSON_PROPERTY_BEACON_ENDPOINT_URL = "beaconEndpointUrl";
  private String beaconEndpointUrl;

  public MobileCustomAppConfig() { 
  }

  @JsonCreator
  public MobileCustomAppConfig(
    @JsonProperty(JSON_PROPERTY_IDENTIFIER) String identifier, 
    @JsonProperty(JSON_PROPERTY_APPLICATION_TYPE) ApplicationTypeEnum applicationType, 
    @JsonProperty(JSON_PROPERTY_APPLICATION_ID) String applicationId
  ) {
  this();
    this.identifier = identifier;
    this.applicationType = applicationType;
    this.applicationId = applicationId;
  }

   /**
   * The Dynatrace entity ID of the application.
   * @return identifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Dynatrace entity ID of the application.")
  @JsonProperty(JSON_PROPERTY_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIdentifier() {
    return identifier;
  }




  public MobileCustomAppConfig name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the application.
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name of the application.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


   /**
   * The type of the application.
   * @return applicationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of the application.")
  @JsonProperty(JSON_PROPERTY_APPLICATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApplicationTypeEnum getApplicationType() {
    return applicationType;
  }




   /**
   * The UUID of the application.  It is used only by OneAgent to send data to Dynatrace.
   * @return applicationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The UUID of the application.  It is used only by OneAgent to send data to Dynatrace.")
  @JsonProperty(JSON_PROPERTY_APPLICATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApplicationId() {
    return applicationId;
  }




  public MobileCustomAppConfig iconType(IconTypeEnum iconType) {
    this.iconType = iconType;
    return this;
  }

   /**
   * Custom application icon.  Mobile apps always use the mobile device icon, so this icon can only be set for custom apps.
   * @return iconType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom application icon.  Mobile apps always use the mobile device icon, so this icon can only be set for custom apps.")
  @JsonProperty(JSON_PROPERTY_ICON_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IconTypeEnum getIconType() {
    return iconType;
  }


  @JsonProperty(JSON_PROPERTY_ICON_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIconType(IconTypeEnum iconType) {
    this.iconType = iconType;
  }


  public MobileCustomAppConfig costControlUserSessionPercentage(Integer costControlUserSessionPercentage) {
    this.costControlUserSessionPercentage = costControlUserSessionPercentage;
    return this;
  }

   /**
   * The percentage of user sessions to be analyzed.
   * minimum: 1
   * maximum: 100
   * @return costControlUserSessionPercentage
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The percentage of user sessions to be analyzed.")
  @JsonProperty(JSON_PROPERTY_COST_CONTROL_USER_SESSION_PERCENTAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCostControlUserSessionPercentage() {
    return costControlUserSessionPercentage;
  }


  @JsonProperty(JSON_PROPERTY_COST_CONTROL_USER_SESSION_PERCENTAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCostControlUserSessionPercentage(Integer costControlUserSessionPercentage) {
    this.costControlUserSessionPercentage = costControlUserSessionPercentage;
  }


  public MobileCustomAppConfig apdexSettings(MobileCustomApdex apdexSettings) {
    this.apdexSettings = apdexSettings;
    return this;
  }

   /**
   * Get apdexSettings
   * @return apdexSettings
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_APDEX_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public MobileCustomApdex getApdexSettings() {
    return apdexSettings;
  }


  @JsonProperty(JSON_PROPERTY_APDEX_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setApdexSettings(MobileCustomApdex apdexSettings) {
    this.apdexSettings = apdexSettings;
  }


  public MobileCustomAppConfig optInModeEnabled(Boolean optInModeEnabled) {
    this.optInModeEnabled = optInModeEnabled;
    return this;
  }

   /**
   * The opt-in mode is enabled (&#x60;true&#x60;) or disabled (&#x60;false&#x60;).  This value is only applicable to mobile and not to custom apps.
   * @return optInModeEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The opt-in mode is enabled (`true`) or disabled (`false`).  This value is only applicable to mobile and not to custom apps.")
  @JsonProperty(JSON_PROPERTY_OPT_IN_MODE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOptInModeEnabled() {
    return optInModeEnabled;
  }


  @JsonProperty(JSON_PROPERTY_OPT_IN_MODE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptInModeEnabled(Boolean optInModeEnabled) {
    this.optInModeEnabled = optInModeEnabled;
  }


  public MobileCustomAppConfig sessionReplayEnabled(Boolean sessionReplayEnabled) {
    this.sessionReplayEnabled = sessionReplayEnabled;
    return this;
  }

   /**
   * The session replay is enabled (&#x60;true&#x60;) or disabled (&#x60;false&#x60;). This value is only applicable to mobile and not to custom apps.
   * @return sessionReplayEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The session replay is enabled (`true`) or disabled (`false`). This value is only applicable to mobile and not to custom apps.")
  @JsonProperty(JSON_PROPERTY_SESSION_REPLAY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSessionReplayEnabled() {
    return sessionReplayEnabled;
  }


  @JsonProperty(JSON_PROPERTY_SESSION_REPLAY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSessionReplayEnabled(Boolean sessionReplayEnabled) {
    this.sessionReplayEnabled = sessionReplayEnabled;
  }


  public MobileCustomAppConfig sessionReplayOnCrashEnabled(Boolean sessionReplayOnCrashEnabled) {
    this.sessionReplayOnCrashEnabled = sessionReplayOnCrashEnabled;
    return this;
  }

   /**
   * **Deprecated**. Please use &#x60;sessionReplayEnabled&#x60; to enable or disable session replay for mobile apps.
   * @return sessionReplayOnCrashEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "**Deprecated**. Please use `sessionReplayEnabled` to enable or disable session replay for mobile apps.")
  @JsonProperty(JSON_PROPERTY_SESSION_REPLAY_ON_CRASH_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSessionReplayOnCrashEnabled() {
    return sessionReplayOnCrashEnabled;
  }


  @JsonProperty(JSON_PROPERTY_SESSION_REPLAY_ON_CRASH_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSessionReplayOnCrashEnabled(Boolean sessionReplayOnCrashEnabled) {
    this.sessionReplayOnCrashEnabled = sessionReplayOnCrashEnabled;
  }


  public MobileCustomAppConfig beaconEndpointType(BeaconEndpointTypeEnum beaconEndpointType) {
    this.beaconEndpointType = beaconEndpointType;
    return this;
  }

   /**
   * The type of the beacon endpoint.
   * @return beaconEndpointType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The type of the beacon endpoint.")
  @JsonProperty(JSON_PROPERTY_BEACON_ENDPOINT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BeaconEndpointTypeEnum getBeaconEndpointType() {
    return beaconEndpointType;
  }


  @JsonProperty(JSON_PROPERTY_BEACON_ENDPOINT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBeaconEndpointType(BeaconEndpointTypeEnum beaconEndpointType) {
    this.beaconEndpointType = beaconEndpointType;
  }


  public MobileCustomAppConfig beaconEndpointUrl(String beaconEndpointUrl) {
    this.beaconEndpointUrl = beaconEndpointUrl;
    return this;
  }

   /**
   * The URL of the beacon endpoint.  Only applicable when the **beaconEndpointType** is set to &#x60;ENVIRONMENT_ACTIVE_GATE&#x60; or &#x60;INSTRUMENTED_WEB_SERVER&#x60;.
   * @return beaconEndpointUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URL of the beacon endpoint.  Only applicable when the **beaconEndpointType** is set to `ENVIRONMENT_ACTIVE_GATE` or `INSTRUMENTED_WEB_SERVER`.")
  @JsonProperty(JSON_PROPERTY_BEACON_ENDPOINT_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBeaconEndpointUrl() {
    return beaconEndpointUrl;
  }


  @JsonProperty(JSON_PROPERTY_BEACON_ENDPOINT_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBeaconEndpointUrl(String beaconEndpointUrl) {
    this.beaconEndpointUrl = beaconEndpointUrl;
  }


  /**
   * Return true if this MobileCustomAppConfig object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MobileCustomAppConfig mobileCustomAppConfig = (MobileCustomAppConfig) o;
    return Objects.equals(this.identifier, mobileCustomAppConfig.identifier) &&
        Objects.equals(this.name, mobileCustomAppConfig.name) &&
        Objects.equals(this.applicationType, mobileCustomAppConfig.applicationType) &&
        Objects.equals(this.applicationId, mobileCustomAppConfig.applicationId) &&
        Objects.equals(this.iconType, mobileCustomAppConfig.iconType) &&
        Objects.equals(this.costControlUserSessionPercentage, mobileCustomAppConfig.costControlUserSessionPercentage) &&
        Objects.equals(this.apdexSettings, mobileCustomAppConfig.apdexSettings) &&
        Objects.equals(this.optInModeEnabled, mobileCustomAppConfig.optInModeEnabled) &&
        Objects.equals(this.sessionReplayEnabled, mobileCustomAppConfig.sessionReplayEnabled) &&
        Objects.equals(this.sessionReplayOnCrashEnabled, mobileCustomAppConfig.sessionReplayOnCrashEnabled) &&
        Objects.equals(this.beaconEndpointType, mobileCustomAppConfig.beaconEndpointType) &&
        Objects.equals(this.beaconEndpointUrl, mobileCustomAppConfig.beaconEndpointUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identifier, name, applicationType, applicationId, iconType, costControlUserSessionPercentage, apdexSettings, optInModeEnabled, sessionReplayEnabled, sessionReplayOnCrashEnabled, beaconEndpointType, beaconEndpointUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MobileCustomAppConfig {\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    applicationType: ").append(toIndentedString(applicationType)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    iconType: ").append(toIndentedString(iconType)).append("\n");
    sb.append("    costControlUserSessionPercentage: ").append(toIndentedString(costControlUserSessionPercentage)).append("\n");
    sb.append("    apdexSettings: ").append(toIndentedString(apdexSettings)).append("\n");
    sb.append("    optInModeEnabled: ").append(toIndentedString(optInModeEnabled)).append("\n");
    sb.append("    sessionReplayEnabled: ").append(toIndentedString(sessionReplayEnabled)).append("\n");
    sb.append("    sessionReplayOnCrashEnabled: ").append(toIndentedString(sessionReplayOnCrashEnabled)).append("\n");
    sb.append("    beaconEndpointType: ").append(toIndentedString(beaconEndpointType)).append("\n");
    sb.append("    beaconEndpointUrl: ").append(toIndentedString(beaconEndpointUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

