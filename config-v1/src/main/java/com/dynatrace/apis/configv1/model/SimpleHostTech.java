/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The value to compare to.
 */
@ApiModel(description = "The value to compare to.")
@JsonPropertyOrder({
  SimpleHostTech.JSON_PROPERTY_TYPE,
  SimpleHostTech.JSON_PROPERTY_VERBATIM_TYPE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class SimpleHostTech {
  /**
   * Predefined technology, if technology is not predefined, then the verbatim type must be set
   */
  public enum TypeEnum {
    APPARMOR("APPARMOR"),
    
    BOSH("BOSH"),
    
    BOSHBPM("BOSHBPM"),
    
    CLOUDFOUNDRY("CLOUDFOUNDRY"),
    
    CONTAINERD("CONTAINERD"),
    
    CRIO("CRIO"),
    
    DIEGO_CELL("DIEGO_CELL"),
    
    DOCKER("DOCKER"),
    
    GARDEN("GARDEN"),
    
    GRSECURITY("GRSECURITY"),
    
    KUBERNETES("KUBERNETES"),
    
    OPENSHIFT("OPENSHIFT"),
    
    OPENSTACK_COMPUTE("OPENSTACK_COMPUTE"),
    
    OPENSTACK_CONTROLLER("OPENSTACK_CONTROLLER"),
    
    SELINUX("SELINUX");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_VERBATIM_TYPE = "verbatimType";
  private String verbatimType;

  public SimpleHostTech() { 
  }

  public SimpleHostTech type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Predefined technology, if technology is not predefined, then the verbatim type must be set
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Predefined technology, if technology is not predefined, then the verbatim type must be set")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public SimpleHostTech verbatimType(String verbatimType) {
    this.verbatimType = verbatimType;
    return this;
  }

   /**
   * Non-predefined technology, use for custom technologies.
   * @return verbatimType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Non-predefined technology, use for custom technologies.")
  @JsonProperty(JSON_PROPERTY_VERBATIM_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVerbatimType() {
    return verbatimType;
  }


  @JsonProperty(JSON_PROPERTY_VERBATIM_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVerbatimType(String verbatimType) {
    this.verbatimType = verbatimType;
  }


  /**
   * Return true if this SimpleHostTech object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimpleHostTech simpleHostTech = (SimpleHostTech) o;
    return Objects.equals(this.type, simpleHostTech.type) &&
        Objects.equals(this.verbatimType, simpleHostTech.verbatimType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, verbatimType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimpleHostTech {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    verbatimType: ").append(toIndentedString(verbatimType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

