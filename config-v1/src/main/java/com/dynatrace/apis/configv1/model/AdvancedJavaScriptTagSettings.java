/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.AdditionalEventHandlers;
import com.dynatrace.apis.configv1.model.EventWrapperSettings;
import com.dynatrace.apis.configv1.model.GlobalEventCaptureSettings;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Advanced JavaScript tag settings.
 */
@ApiModel(description = "Advanced JavaScript tag settings.")
@JsonPropertyOrder({
  AdvancedJavaScriptTagSettings.JSON_PROPERTY_SYNC_BEACON_FIREFOX,
  AdvancedJavaScriptTagSettings.JSON_PROPERTY_SYNC_BEACON_INTERNET_EXPLORER,
  AdvancedJavaScriptTagSettings.JSON_PROPERTY_INSTRUMENT_UNSUPPORTED_AJAX_FRAMEWORKS,
  AdvancedJavaScriptTagSettings.JSON_PROPERTY_SPECIAL_CHARACTERS_TO_ESCAPE,
  AdvancedJavaScriptTagSettings.JSON_PROPERTY_MAX_ACTION_NAME_LENGTH,
  AdvancedJavaScriptTagSettings.JSON_PROPERTY_MAX_ERRORS_TO_CAPTURE,
  AdvancedJavaScriptTagSettings.JSON_PROPERTY_ADDITIONAL_EVENT_HANDLERS,
  AdvancedJavaScriptTagSettings.JSON_PROPERTY_EVENT_WRAPPER_SETTINGS,
  AdvancedJavaScriptTagSettings.JSON_PROPERTY_GLOBAL_EVENT_CAPTURE_SETTINGS,
  AdvancedJavaScriptTagSettings.JSON_PROPERTY_USER_ACTION_NAME_ATTRIBUTE,
  AdvancedJavaScriptTagSettings.JSON_PROPERTY_PROXY_WRAPPER_ENABLED
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class AdvancedJavaScriptTagSettings {
  public static final String JSON_PROPERTY_SYNC_BEACON_FIREFOX = "syncBeaconFirefox";
  private Boolean syncBeaconFirefox;

  public static final String JSON_PROPERTY_SYNC_BEACON_INTERNET_EXPLORER = "syncBeaconInternetExplorer";
  private Boolean syncBeaconInternetExplorer;

  public static final String JSON_PROPERTY_INSTRUMENT_UNSUPPORTED_AJAX_FRAMEWORKS = "instrumentUnsupportedAjaxFrameworks";
  private Boolean instrumentUnsupportedAjaxFrameworks;

  public static final String JSON_PROPERTY_SPECIAL_CHARACTERS_TO_ESCAPE = "specialCharactersToEscape";
  private String specialCharactersToEscape;

  public static final String JSON_PROPERTY_MAX_ACTION_NAME_LENGTH = "maxActionNameLength";
  private Integer maxActionNameLength;

  public static final String JSON_PROPERTY_MAX_ERRORS_TO_CAPTURE = "maxErrorsToCapture";
  private Integer maxErrorsToCapture;

  public static final String JSON_PROPERTY_ADDITIONAL_EVENT_HANDLERS = "additionalEventHandlers";
  private AdditionalEventHandlers additionalEventHandlers;

  public static final String JSON_PROPERTY_EVENT_WRAPPER_SETTINGS = "eventWrapperSettings";
  private EventWrapperSettings eventWrapperSettings;

  public static final String JSON_PROPERTY_GLOBAL_EVENT_CAPTURE_SETTINGS = "globalEventCaptureSettings";
  private GlobalEventCaptureSettings globalEventCaptureSettings;

  public static final String JSON_PROPERTY_USER_ACTION_NAME_ATTRIBUTE = "userActionNameAttribute";
  private String userActionNameAttribute;

  public static final String JSON_PROPERTY_PROXY_WRAPPER_ENABLED = "proxyWrapperEnabled";
  private Boolean proxyWrapperEnabled;

  public AdvancedJavaScriptTagSettings() { 
  }

  public AdvancedJavaScriptTagSettings syncBeaconFirefox(Boolean syncBeaconFirefox) {
    this.syncBeaconFirefox = syncBeaconFirefox;
    return this;
  }

   /**
   * Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled.
   * @return syncBeaconFirefox
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled.")
  @JsonProperty(JSON_PROPERTY_SYNC_BEACON_FIREFOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSyncBeaconFirefox() {
    return syncBeaconFirefox;
  }


  @JsonProperty(JSON_PROPERTY_SYNC_BEACON_FIREFOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSyncBeaconFirefox(Boolean syncBeaconFirefox) {
    this.syncBeaconFirefox = syncBeaconFirefox;
  }


  public AdvancedJavaScriptTagSettings syncBeaconInternetExplorer(Boolean syncBeaconInternetExplorer) {
    this.syncBeaconInternetExplorer = syncBeaconInternetExplorer;
    return this;
  }

   /**
   * Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled.
   * @return syncBeaconInternetExplorer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled.")
  @JsonProperty(JSON_PROPERTY_SYNC_BEACON_INTERNET_EXPLORER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSyncBeaconInternetExplorer() {
    return syncBeaconInternetExplorer;
  }


  @JsonProperty(JSON_PROPERTY_SYNC_BEACON_INTERNET_EXPLORER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSyncBeaconInternetExplorer(Boolean syncBeaconInternetExplorer) {
    this.syncBeaconInternetExplorer = syncBeaconInternetExplorer;
  }


  public AdvancedJavaScriptTagSettings instrumentUnsupportedAjaxFrameworks(Boolean instrumentUnsupportedAjaxFrameworks) {
    this.instrumentUnsupportedAjaxFrameworks = instrumentUnsupportedAjaxFrameworks;
    return this;
  }

   /**
   * Instrumentation of unsupported Ajax frameworks enabled/disabled.
   * @return instrumentUnsupportedAjaxFrameworks
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Instrumentation of unsupported Ajax frameworks enabled/disabled.")
  @JsonProperty(JSON_PROPERTY_INSTRUMENT_UNSUPPORTED_AJAX_FRAMEWORKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getInstrumentUnsupportedAjaxFrameworks() {
    return instrumentUnsupportedAjaxFrameworks;
  }


  @JsonProperty(JSON_PROPERTY_INSTRUMENT_UNSUPPORTED_AJAX_FRAMEWORKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInstrumentUnsupportedAjaxFrameworks(Boolean instrumentUnsupportedAjaxFrameworks) {
    this.instrumentUnsupportedAjaxFrameworks = instrumentUnsupportedAjaxFrameworks;
  }


  public AdvancedJavaScriptTagSettings specialCharactersToEscape(String specialCharactersToEscape) {
    this.specialCharactersToEscape = specialCharactersToEscape;
    return this;
  }

   /**
   * Additional special characters that are to be escaped using non-alphanumeric characters in HTML escape format.
   * @return specialCharactersToEscape
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Additional special characters that are to be escaped using non-alphanumeric characters in HTML escape format.")
  @JsonProperty(JSON_PROPERTY_SPECIAL_CHARACTERS_TO_ESCAPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSpecialCharactersToEscape() {
    return specialCharactersToEscape;
  }


  @JsonProperty(JSON_PROPERTY_SPECIAL_CHARACTERS_TO_ESCAPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSpecialCharactersToEscape(String specialCharactersToEscape) {
    this.specialCharactersToEscape = specialCharactersToEscape;
  }


  public AdvancedJavaScriptTagSettings maxActionNameLength(Integer maxActionNameLength) {
    this.maxActionNameLength = maxActionNameLength;
    return this;
  }

   /**
   * Maximum character length for action names. Valid values range from 5 to 10000.
   * minimum: 5
   * maximum: 10000
   * @return maxActionNameLength
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Maximum character length for action names. Valid values range from 5 to 10000.")
  @JsonProperty(JSON_PROPERTY_MAX_ACTION_NAME_LENGTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getMaxActionNameLength() {
    return maxActionNameLength;
  }


  @JsonProperty(JSON_PROPERTY_MAX_ACTION_NAME_LENGTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMaxActionNameLength(Integer maxActionNameLength) {
    this.maxActionNameLength = maxActionNameLength;
  }


  public AdvancedJavaScriptTagSettings maxErrorsToCapture(Integer maxErrorsToCapture) {
    this.maxErrorsToCapture = maxErrorsToCapture;
    return this;
  }

   /**
   * Maximum number of errors to be captured per page. Valid values range from 0 to 50.
   * minimum: 0
   * maximum: 50
   * @return maxErrorsToCapture
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Maximum number of errors to be captured per page. Valid values range from 0 to 50.")
  @JsonProperty(JSON_PROPERTY_MAX_ERRORS_TO_CAPTURE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getMaxErrorsToCapture() {
    return maxErrorsToCapture;
  }


  @JsonProperty(JSON_PROPERTY_MAX_ERRORS_TO_CAPTURE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMaxErrorsToCapture(Integer maxErrorsToCapture) {
    this.maxErrorsToCapture = maxErrorsToCapture;
  }


  public AdvancedJavaScriptTagSettings additionalEventHandlers(AdditionalEventHandlers additionalEventHandlers) {
    this.additionalEventHandlers = additionalEventHandlers;
    return this;
  }

   /**
   * Get additionalEventHandlers
   * @return additionalEventHandlers
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_EVENT_HANDLERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AdditionalEventHandlers getAdditionalEventHandlers() {
    return additionalEventHandlers;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_EVENT_HANDLERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAdditionalEventHandlers(AdditionalEventHandlers additionalEventHandlers) {
    this.additionalEventHandlers = additionalEventHandlers;
  }


  public AdvancedJavaScriptTagSettings eventWrapperSettings(EventWrapperSettings eventWrapperSettings) {
    this.eventWrapperSettings = eventWrapperSettings;
    return this;
  }

   /**
   * Get eventWrapperSettings
   * @return eventWrapperSettings
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_EVENT_WRAPPER_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EventWrapperSettings getEventWrapperSettings() {
    return eventWrapperSettings;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_WRAPPER_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEventWrapperSettings(EventWrapperSettings eventWrapperSettings) {
    this.eventWrapperSettings = eventWrapperSettings;
  }


  public AdvancedJavaScriptTagSettings globalEventCaptureSettings(GlobalEventCaptureSettings globalEventCaptureSettings) {
    this.globalEventCaptureSettings = globalEventCaptureSettings;
    return this;
  }

   /**
   * Get globalEventCaptureSettings
   * @return globalEventCaptureSettings
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_GLOBAL_EVENT_CAPTURE_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public GlobalEventCaptureSettings getGlobalEventCaptureSettings() {
    return globalEventCaptureSettings;
  }


  @JsonProperty(JSON_PROPERTY_GLOBAL_EVENT_CAPTURE_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGlobalEventCaptureSettings(GlobalEventCaptureSettings globalEventCaptureSettings) {
    this.globalEventCaptureSettings = globalEventCaptureSettings;
  }


  public AdvancedJavaScriptTagSettings userActionNameAttribute(String userActionNameAttribute) {
    this.userActionNameAttribute = userActionNameAttribute;
    return this;
  }

   /**
   * User action name attribute.
   * @return userActionNameAttribute
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User action name attribute.")
  @JsonProperty(JSON_PROPERTY_USER_ACTION_NAME_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserActionNameAttribute() {
    return userActionNameAttribute;
  }


  @JsonProperty(JSON_PROPERTY_USER_ACTION_NAME_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserActionNameAttribute(String userActionNameAttribute) {
    this.userActionNameAttribute = userActionNameAttribute;
  }


  public AdvancedJavaScriptTagSettings proxyWrapperEnabled(Boolean proxyWrapperEnabled) {
    this.proxyWrapperEnabled = proxyWrapperEnabled;
    return this;
  }

   /**
   * Proxy wrapper enabled/disabled.
   * @return proxyWrapperEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Proxy wrapper enabled/disabled.")
  @JsonProperty(JSON_PROPERTY_PROXY_WRAPPER_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getProxyWrapperEnabled() {
    return proxyWrapperEnabled;
  }


  @JsonProperty(JSON_PROPERTY_PROXY_WRAPPER_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProxyWrapperEnabled(Boolean proxyWrapperEnabled) {
    this.proxyWrapperEnabled = proxyWrapperEnabled;
  }


  /**
   * Return true if this AdvancedJavaScriptTagSettings object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdvancedJavaScriptTagSettings advancedJavaScriptTagSettings = (AdvancedJavaScriptTagSettings) o;
    return Objects.equals(this.syncBeaconFirefox, advancedJavaScriptTagSettings.syncBeaconFirefox) &&
        Objects.equals(this.syncBeaconInternetExplorer, advancedJavaScriptTagSettings.syncBeaconInternetExplorer) &&
        Objects.equals(this.instrumentUnsupportedAjaxFrameworks, advancedJavaScriptTagSettings.instrumentUnsupportedAjaxFrameworks) &&
        Objects.equals(this.specialCharactersToEscape, advancedJavaScriptTagSettings.specialCharactersToEscape) &&
        Objects.equals(this.maxActionNameLength, advancedJavaScriptTagSettings.maxActionNameLength) &&
        Objects.equals(this.maxErrorsToCapture, advancedJavaScriptTagSettings.maxErrorsToCapture) &&
        Objects.equals(this.additionalEventHandlers, advancedJavaScriptTagSettings.additionalEventHandlers) &&
        Objects.equals(this.eventWrapperSettings, advancedJavaScriptTagSettings.eventWrapperSettings) &&
        Objects.equals(this.globalEventCaptureSettings, advancedJavaScriptTagSettings.globalEventCaptureSettings) &&
        Objects.equals(this.userActionNameAttribute, advancedJavaScriptTagSettings.userActionNameAttribute) &&
        Objects.equals(this.proxyWrapperEnabled, advancedJavaScriptTagSettings.proxyWrapperEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(syncBeaconFirefox, syncBeaconInternetExplorer, instrumentUnsupportedAjaxFrameworks, specialCharactersToEscape, maxActionNameLength, maxErrorsToCapture, additionalEventHandlers, eventWrapperSettings, globalEventCaptureSettings, userActionNameAttribute, proxyWrapperEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdvancedJavaScriptTagSettings {\n");
    sb.append("    syncBeaconFirefox: ").append(toIndentedString(syncBeaconFirefox)).append("\n");
    sb.append("    syncBeaconInternetExplorer: ").append(toIndentedString(syncBeaconInternetExplorer)).append("\n");
    sb.append("    instrumentUnsupportedAjaxFrameworks: ").append(toIndentedString(instrumentUnsupportedAjaxFrameworks)).append("\n");
    sb.append("    specialCharactersToEscape: ").append(toIndentedString(specialCharactersToEscape)).append("\n");
    sb.append("    maxActionNameLength: ").append(toIndentedString(maxActionNameLength)).append("\n");
    sb.append("    maxErrorsToCapture: ").append(toIndentedString(maxErrorsToCapture)).append("\n");
    sb.append("    additionalEventHandlers: ").append(toIndentedString(additionalEventHandlers)).append("\n");
    sb.append("    eventWrapperSettings: ").append(toIndentedString(eventWrapperSettings)).append("\n");
    sb.append("    globalEventCaptureSettings: ").append(toIndentedString(globalEventCaptureSettings)).append("\n");
    sb.append("    userActionNameAttribute: ").append(toIndentedString(userActionNameAttribute)).append("\n");
    sb.append("    proxyWrapperEnabled: ").append(toIndentedString(proxyWrapperEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

