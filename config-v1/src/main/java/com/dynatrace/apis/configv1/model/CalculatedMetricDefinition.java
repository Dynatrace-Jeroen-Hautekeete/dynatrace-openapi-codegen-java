/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The definition of a calculated service metric.
 */
@ApiModel(description = "The definition of a calculated service metric.")
@JsonPropertyOrder({
  CalculatedMetricDefinition.JSON_PROPERTY_METRIC,
  CalculatedMetricDefinition.JSON_PROPERTY_REQUEST_ATTRIBUTE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class CalculatedMetricDefinition {
  /**
   * The metric to be captured.
   */
  public enum MetricEnum {
    CPU_TIME("CPU_TIME"),
    
    DATABASE_CHILD_CALL_COUNT("DATABASE_CHILD_CALL_COUNT"),
    
    DATABASE_CHILD_CALL_TIME("DATABASE_CHILD_CALL_TIME"),
    
    DISK_IO_TIME("DISK_IO_TIME"),
    
    EXCEPTION_COUNT("EXCEPTION_COUNT"),
    
    FAILED_REQUEST_COUNT("FAILED_REQUEST_COUNT"),
    
    FAILED_REQUEST_COUNT_CLIENT("FAILED_REQUEST_COUNT_CLIENT"),
    
    FAILURE_RATE("FAILURE_RATE"),
    
    FAILURE_RATE_CLIENT("FAILURE_RATE_CLIENT"),
    
    HTTP_4XX_ERROR_COUNT("HTTP_4XX_ERROR_COUNT"),
    
    HTTP_4XX_ERROR_COUNT_CLIENT("HTTP_4XX_ERROR_COUNT_CLIENT"),
    
    HTTP_5XX_ERROR_COUNT("HTTP_5XX_ERROR_COUNT"),
    
    HTTP_5XX_ERROR_COUNT_CLIENT("HTTP_5XX_ERROR_COUNT_CLIENT"),
    
    IO_TIME("IO_TIME"),
    
    LOCK_TIME("LOCK_TIME"),
    
    NETWORK_IO_TIME("NETWORK_IO_TIME"),
    
    NON_DATABASE_CHILD_CALL_COUNT("NON_DATABASE_CHILD_CALL_COUNT"),
    
    NON_DATABASE_CHILD_CALL_TIME("NON_DATABASE_CHILD_CALL_TIME"),
    
    PROCESSING_TIME("PROCESSING_TIME"),
    
    REQUEST_ATTRIBUTE("REQUEST_ATTRIBUTE"),
    
    REQUEST_COUNT("REQUEST_COUNT"),
    
    RESPONSE_TIME("RESPONSE_TIME"),
    
    RESPONSE_TIME_CLIENT("RESPONSE_TIME_CLIENT"),
    
    SUCCESSFUL_REQUEST_COUNT("SUCCESSFUL_REQUEST_COUNT"),
    
    SUCCESSFUL_REQUEST_COUNT_CLIENT("SUCCESSFUL_REQUEST_COUNT_CLIENT"),
    
    WAIT_TIME("WAIT_TIME");

    private String value;

    MetricEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MetricEnum fromValue(String value) {
      for (MetricEnum b : MetricEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_METRIC = "metric";
  private MetricEnum metric;

  public static final String JSON_PROPERTY_REQUEST_ATTRIBUTE = "requestAttribute";
  private String requestAttribute;

  public CalculatedMetricDefinition() { 
  }

  public CalculatedMetricDefinition metric(MetricEnum metric) {
    this.metric = metric;
    return this;
  }

   /**
   * The metric to be captured.
   * @return metric
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The metric to be captured.")
  @JsonProperty(JSON_PROPERTY_METRIC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public MetricEnum getMetric() {
    return metric;
  }


  @JsonProperty(JSON_PROPERTY_METRIC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetric(MetricEnum metric) {
    this.metric = metric;
  }


  public CalculatedMetricDefinition requestAttribute(String requestAttribute) {
    this.requestAttribute = requestAttribute;
    return this;
  }

   /**
   * The request attribute to be captured.    Only applicable when the **metric** parameter is set to &#x60;REQUEST_ATTRIBUTE&#x60;.
   * @return requestAttribute
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The request attribute to be captured.    Only applicable when the **metric** parameter is set to `REQUEST_ATTRIBUTE`.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestAttribute() {
    return requestAttribute;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestAttribute(String requestAttribute) {
    this.requestAttribute = requestAttribute;
  }


  /**
   * Return true if this CalculatedMetricDefinition object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CalculatedMetricDefinition calculatedMetricDefinition = (CalculatedMetricDefinition) o;
    return Objects.equals(this.metric, calculatedMetricDefinition.metric) &&
        Objects.equals(this.requestAttribute, calculatedMetricDefinition.requestAttribute);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metric, requestAttribute);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CalculatedMetricDefinition {\n");
    sb.append("    metric: ").append(toIndentedString(metric)).append("\n");
    sb.append("    requestAttribute: ").append(toIndentedString(requestAttribute)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

