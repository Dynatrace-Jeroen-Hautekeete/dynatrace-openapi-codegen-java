/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.EntityShortRepresentation;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ExtensionConfigurationDto
 */
@JsonPropertyOrder({
  ExtensionConfigurationDto.JSON_PROPERTY_EXTENSION_ID,
  ExtensionConfigurationDto.JSON_PROPERTY_ENABLED,
  ExtensionConfigurationDto.JSON_PROPERTY_USE_GLOBAL,
  ExtensionConfigurationDto.JSON_PROPERTY_PROPERTIES,
  ExtensionConfigurationDto.JSON_PROPERTY_HOST_ID,
  ExtensionConfigurationDto.JSON_PROPERTY_ACTIVE_GATE,
  ExtensionConfigurationDto.JSON_PROPERTY_ENDPOINT_ID,
  ExtensionConfigurationDto.JSON_PROPERTY_ENDPOINT_NAME
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class ExtensionConfigurationDto {
  public static final String JSON_PROPERTY_EXTENSION_ID = "extensionId";
  private String extensionId;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_USE_GLOBAL = "useGlobal";
  private Boolean useGlobal;

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  private Map<String, String> properties = null;

  public static final String JSON_PROPERTY_HOST_ID = "hostId";
  private String hostId;

  public static final String JSON_PROPERTY_ACTIVE_GATE = "activeGate";
  private EntityShortRepresentation activeGate;

  public static final String JSON_PROPERTY_ENDPOINT_ID = "endpointId";
  private String endpointId;

  public static final String JSON_PROPERTY_ENDPOINT_NAME = "endpointName";
  private String endpointName;

  public ExtensionConfigurationDto() { 
  }

  public ExtensionConfigurationDto extensionId(String extensionId) {
    this.extensionId = extensionId;
    return this;
  }

   /**
   * The ID of the extension.
   * @return extensionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the extension.")
  @JsonProperty(JSON_PROPERTY_EXTENSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExtensionId() {
    return extensionId;
  }


  @JsonProperty(JSON_PROPERTY_EXTENSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtensionId(String extensionId) {
    this.extensionId = extensionId;
  }


  public ExtensionConfigurationDto enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * The extension is enabled (&#x60;true&#x60;) or disabled (&#x60;false&#x60;).
   * @return enabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The extension is enabled (`true`) or disabled (`false`).")
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public ExtensionConfigurationDto useGlobal(Boolean useGlobal) {
    this.useGlobal = useGlobal;
    return this;
  }

   /**
   * Allows to skip current configuration and use global one.
   * @return useGlobal
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Allows to skip current configuration and use global one.")
  @JsonProperty(JSON_PROPERTY_USE_GLOBAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getUseGlobal() {
    return useGlobal;
  }


  @JsonProperty(JSON_PROPERTY_USE_GLOBAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUseGlobal(Boolean useGlobal) {
    this.useGlobal = useGlobal;
  }


  public ExtensionConfigurationDto properties(Map<String, String> properties) {
    this.properties = properties;
    return this;
  }

  public ExtensionConfigurationDto putPropertiesItem(String key, String propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * The list of extension parameters.    Each parameter is a key-value pair.
   * @return properties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of extension parameters.    Each parameter is a key-value pair.")
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getProperties() {
    return properties;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperties(Map<String, String> properties) {
    this.properties = properties;
  }


  public ExtensionConfigurationDto hostId(String hostId) {
    this.hostId = hostId;
    return this;
  }

   /**
   * The ID of the host on which the extension runs.
   * @return hostId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the host on which the extension runs.")
  @JsonProperty(JSON_PROPERTY_HOST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHostId() {
    return hostId;
  }


  @JsonProperty(JSON_PROPERTY_HOST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHostId(String hostId) {
    this.hostId = hostId;
  }


  public ExtensionConfigurationDto activeGate(EntityShortRepresentation activeGate) {
    this.activeGate = activeGate;
    return this;
  }

   /**
   * Get activeGate
   * @return activeGate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ACTIVE_GATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityShortRepresentation getActiveGate() {
    return activeGate;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_GATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveGate(EntityShortRepresentation activeGate) {
    this.activeGate = activeGate;
  }


  public ExtensionConfigurationDto endpointId(String endpointId) {
    this.endpointId = endpointId;
    return this;
  }

   /**
   * The ID of the endpoint.
   * @return endpointId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the endpoint.")
  @JsonProperty(JSON_PROPERTY_ENDPOINT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndpointId() {
    return endpointId;
  }


  @JsonProperty(JSON_PROPERTY_ENDPOINT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndpointId(String endpointId) {
    this.endpointId = endpointId;
  }


  public ExtensionConfigurationDto endpointName(String endpointName) {
    this.endpointName = endpointName;
    return this;
  }

   /**
   * The name of the endpoint, displayed in Dynatrace.
   * @return endpointName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the endpoint, displayed in Dynatrace.")
  @JsonProperty(JSON_PROPERTY_ENDPOINT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndpointName() {
    return endpointName;
  }


  @JsonProperty(JSON_PROPERTY_ENDPOINT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndpointName(String endpointName) {
    this.endpointName = endpointName;
  }


  /**
   * Return true if this ExtensionConfigurationDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExtensionConfigurationDto extensionConfigurationDto = (ExtensionConfigurationDto) o;
    return Objects.equals(this.extensionId, extensionConfigurationDto.extensionId) &&
        Objects.equals(this.enabled, extensionConfigurationDto.enabled) &&
        Objects.equals(this.useGlobal, extensionConfigurationDto.useGlobal) &&
        Objects.equals(this.properties, extensionConfigurationDto.properties) &&
        Objects.equals(this.hostId, extensionConfigurationDto.hostId) &&
        Objects.equals(this.activeGate, extensionConfigurationDto.activeGate) &&
        Objects.equals(this.endpointId, extensionConfigurationDto.endpointId) &&
        Objects.equals(this.endpointName, extensionConfigurationDto.endpointName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(extensionId, enabled, useGlobal, properties, hostId, activeGate, endpointId, endpointName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExtensionConfigurationDto {\n");
    sb.append("    extensionId: ").append(toIndentedString(extensionId)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    useGlobal: ").append(toIndentedString(useGlobal)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    hostId: ").append(toIndentedString(hostId)).append("\n");
    sb.append("    activeGate: ").append(toIndentedString(activeGate)).append("\n");
    sb.append("    endpointId: ").append(toIndentedString(endpointId)).append("\n");
    sb.append("    endpointName: ").append(toIndentedString(endpointName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

