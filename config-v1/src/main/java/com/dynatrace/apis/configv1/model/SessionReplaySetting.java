/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Session replay settings
 */
@ApiModel(description = "Session replay settings")
@JsonPropertyOrder({
  SessionReplaySetting.JSON_PROPERTY_ENABLED,
  SessionReplaySetting.JSON_PROPERTY_COST_CONTROL_PERCENTAGE,
  SessionReplaySetting.JSON_PROPERTY_ENABLE_CSS_RESOURCE_CAPTURING,
  SessionReplaySetting.JSON_PROPERTY_CSS_RESOURCE_CAPTURING_EXCLUSION_RULES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class SessionReplaySetting {
  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_COST_CONTROL_PERCENTAGE = "costControlPercentage";
  private Integer costControlPercentage;

  public static final String JSON_PROPERTY_ENABLE_CSS_RESOURCE_CAPTURING = "enableCssResourceCapturing";
  private Boolean enableCssResourceCapturing;

  public static final String JSON_PROPERTY_CSS_RESOURCE_CAPTURING_EXCLUSION_RULES = "cssResourceCapturingExclusionRules";
  private List<String> cssResourceCapturingExclusionRules = null;

  public SessionReplaySetting() { 
  }

  public SessionReplaySetting enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * SessionReplay Enabled.
   * @return enabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "SessionReplay Enabled.")
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public SessionReplaySetting costControlPercentage(Integer costControlPercentage) {
    this.costControlPercentage = costControlPercentage;
    return this;
  }

   /**
   * Session replay sampling rating in percentage.
   * minimum: 0
   * maximum: 100
   * @return costControlPercentage
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Session replay sampling rating in percentage.")
  @JsonProperty(JSON_PROPERTY_COST_CONTROL_PERCENTAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCostControlPercentage() {
    return costControlPercentage;
  }


  @JsonProperty(JSON_PROPERTY_COST_CONTROL_PERCENTAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCostControlPercentage(Integer costControlPercentage) {
    this.costControlPercentage = costControlPercentage;
  }


  public SessionReplaySetting enableCssResourceCapturing(Boolean enableCssResourceCapturing) {
    this.enableCssResourceCapturing = enableCssResourceCapturing;
    return this;
  }

   /**
   * Capture (&#x60;true&#x60;) or don&#39;t capture (&#x60;false&#x60;) CSS resources from the session.
   * @return enableCssResourceCapturing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Capture (`true`) or don't capture (`false`) CSS resources from the session.")
  @JsonProperty(JSON_PROPERTY_ENABLE_CSS_RESOURCE_CAPTURING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnableCssResourceCapturing() {
    return enableCssResourceCapturing;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_CSS_RESOURCE_CAPTURING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableCssResourceCapturing(Boolean enableCssResourceCapturing) {
    this.enableCssResourceCapturing = enableCssResourceCapturing;
  }


  public SessionReplaySetting cssResourceCapturingExclusionRules(List<String> cssResourceCapturingExclusionRules) {
    this.cssResourceCapturingExclusionRules = cssResourceCapturingExclusionRules;
    return this;
  }

  public SessionReplaySetting addCssResourceCapturingExclusionRulesItem(String cssResourceCapturingExclusionRulesItem) {
    if (this.cssResourceCapturingExclusionRules == null) {
      this.cssResourceCapturingExclusionRules = new ArrayList<>();
    }
    this.cssResourceCapturingExclusionRules.add(cssResourceCapturingExclusionRulesItem);
    return this;
  }

   /**
   * A list of URLs to be excluded from CSS resource capturing.
   * @return cssResourceCapturingExclusionRules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of URLs to be excluded from CSS resource capturing.")
  @JsonProperty(JSON_PROPERTY_CSS_RESOURCE_CAPTURING_EXCLUSION_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getCssResourceCapturingExclusionRules() {
    return cssResourceCapturingExclusionRules;
  }


  @JsonProperty(JSON_PROPERTY_CSS_RESOURCE_CAPTURING_EXCLUSION_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCssResourceCapturingExclusionRules(List<String> cssResourceCapturingExclusionRules) {
    this.cssResourceCapturingExclusionRules = cssResourceCapturingExclusionRules;
  }


  /**
   * Return true if this SessionReplaySetting object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SessionReplaySetting sessionReplaySetting = (SessionReplaySetting) o;
    return Objects.equals(this.enabled, sessionReplaySetting.enabled) &&
        Objects.equals(this.costControlPercentage, sessionReplaySetting.costControlPercentage) &&
        Objects.equals(this.enableCssResourceCapturing, sessionReplaySetting.enableCssResourceCapturing) &&
        Objects.equals(this.cssResourceCapturingExclusionRules, sessionReplaySetting.cssResourceCapturingExclusionRules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, costControlPercentage, enableCssResourceCapturing, cssResourceCapturingExclusionRules);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SessionReplaySetting {\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    costControlPercentage: ").append(toIndentedString(costControlPercentage)).append("\n");
    sb.append("    enableCssResourceCapturing: ").append(toIndentedString(enableCssResourceCapturing)).append("\n");
    sb.append("    cssResourceCapturingExclusionRules: ").append(toIndentedString(cssResourceCapturingExclusionRules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

