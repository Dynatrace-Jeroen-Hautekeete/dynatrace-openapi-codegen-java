/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.AlertingEventTypeFilter;
import com.dynatrace.apis.configv1.model.AlertingProfileSeverityRule;
import com.dynatrace.apis.configv1.model.ConfigurationMetadata;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Configuration of an alerting profile.
 */
@ApiModel(description = "Configuration of an alerting profile.")
@JsonPropertyOrder({
  AlertingProfile.JSON_PROPERTY_METADATA,
  AlertingProfile.JSON_PROPERTY_ID,
  AlertingProfile.JSON_PROPERTY_DISPLAY_NAME,
  AlertingProfile.JSON_PROPERTY_RULES,
  AlertingProfile.JSON_PROPERTY_MZ_ID,
  AlertingProfile.JSON_PROPERTY_EVENT_TYPE_FILTERS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class AlertingProfile {
  public static final String JSON_PROPERTY_METADATA = "metadata";
  private ConfigurationMetadata metadata;

  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_RULES = "rules";
  private List<AlertingProfileSeverityRule> rules = null;

  public static final String JSON_PROPERTY_MZ_ID = "mzId";
  private String mzId;

  public static final String JSON_PROPERTY_EVENT_TYPE_FILTERS = "eventTypeFilters";
  private List<AlertingEventTypeFilter> eventTypeFilters = null;

  public AlertingProfile() { 
  }

  public AlertingProfile metadata(ConfigurationMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConfigurationMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(ConfigurationMetadata metadata) {
    this.metadata = metadata;
  }


  public AlertingProfile id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of the alerting profile.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "12345678-abcd-1234-abcd-1234567890ab", value = "The ID of the alerting profile.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }


  public AlertingProfile displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * The name of the alerting profile, displayed in the UI.
   * @return displayName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name of the alerting profile, displayed in the UI.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public AlertingProfile rules(List<AlertingProfileSeverityRule> rules) {
    this.rules = rules;
    return this;
  }

  public AlertingProfile addRulesItem(AlertingProfileSeverityRule rulesItem) {
    if (this.rules == null) {
      this.rules = new ArrayList<>();
    }
    this.rules.add(rulesItem);
    return this;
  }

   /**
   * A list of severity rules.    The rules are evaluated from top to bottom. The first matching rule applies and further evaluation stops.   If you specify both severity rule and event filter, the AND logic applies.
   * @return rules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of severity rules.    The rules are evaluated from top to bottom. The first matching rule applies and further evaluation stops.   If you specify both severity rule and event filter, the AND logic applies.")
  @JsonProperty(JSON_PROPERTY_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AlertingProfileSeverityRule> getRules() {
    return rules;
  }


  @JsonProperty(JSON_PROPERTY_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRules(List<AlertingProfileSeverityRule> rules) {
    this.rules = rules;
  }


  public AlertingProfile mzId(String mzId) {
    this.mzId = mzId;
    return this;
  }

   /**
   * The ID of the management zone to which the alerting profile applies.
   * @return mzId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the management zone to which the alerting profile applies.")
  @JsonProperty(JSON_PROPERTY_MZ_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMzId() {
    return mzId;
  }


  @JsonProperty(JSON_PROPERTY_MZ_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMzId(String mzId) {
    this.mzId = mzId;
  }


  public AlertingProfile eventTypeFilters(List<AlertingEventTypeFilter> eventTypeFilters) {
    this.eventTypeFilters = eventTypeFilters;
    return this;
  }

  public AlertingProfile addEventTypeFiltersItem(AlertingEventTypeFilter eventTypeFiltersItem) {
    if (this.eventTypeFilters == null) {
      this.eventTypeFilters = new ArrayList<>();
    }
    this.eventTypeFilters.add(eventTypeFiltersItem);
    return this;
  }

   /**
   * The list of event filters.   For all filters that are *negated* inside of these event filters, that is all \&quot;Predefined\&quot; as well as \&quot;Custom\&quot; (Title and/or Description) ones the AND logic applies. For all *non-negated* ones the OR logic applies. Between these two groups, negated and non-negated, the AND logic applies.   If you specify both severity rule and event filter, the AND logic applies.
   * @return eventTypeFilters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of event filters.   For all filters that are *negated* inside of these event filters, that is all \"Predefined\" as well as \"Custom\" (Title and/or Description) ones the AND logic applies. For all *non-negated* ones the OR logic applies. Between these two groups, negated and non-negated, the AND logic applies.   If you specify both severity rule and event filter, the AND logic applies.")
  @JsonProperty(JSON_PROPERTY_EVENT_TYPE_FILTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AlertingEventTypeFilter> getEventTypeFilters() {
    return eventTypeFilters;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_TYPE_FILTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventTypeFilters(List<AlertingEventTypeFilter> eventTypeFilters) {
    this.eventTypeFilters = eventTypeFilters;
  }


  /**
   * Return true if this AlertingProfile object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlertingProfile alertingProfile = (AlertingProfile) o;
    return Objects.equals(this.metadata, alertingProfile.metadata) &&
        Objects.equals(this.id, alertingProfile.id) &&
        Objects.equals(this.displayName, alertingProfile.displayName) &&
        Objects.equals(this.rules, alertingProfile.rules) &&
        Objects.equals(this.mzId, alertingProfile.mzId) &&
        Objects.equals(this.eventTypeFilters, alertingProfile.eventTypeFilters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metadata, id, displayName, rules, mzId, eventTypeFilters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlertingProfile {\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("    mzId: ").append(toIndentedString(mzId)).append("\n");
    sb.append("    eventTypeFilters: ").append(toIndentedString(eventTypeFilters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

