/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * AssignedEntitiesWithMetricTileAllOf
 */
@JsonPropertyOrder({
  AssignedEntitiesWithMetricTileAllOf.JSON_PROPERTY_ASSIGNED_ENTITIES,
  AssignedEntitiesWithMetricTileAllOf.JSON_PROPERTY_METRIC
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class AssignedEntitiesWithMetricTileAllOf {
  public static final String JSON_PROPERTY_ASSIGNED_ENTITIES = "assignedEntities";
  private List<String> assignedEntities = null;

  public static final String JSON_PROPERTY_METRIC = "metric";
  private String metric;

  public AssignedEntitiesWithMetricTileAllOf() { 
  }

  public AssignedEntitiesWithMetricTileAllOf assignedEntities(List<String> assignedEntities) {
    this.assignedEntities = assignedEntities;
    return this;
  }

  public AssignedEntitiesWithMetricTileAllOf addAssignedEntitiesItem(String assignedEntitiesItem) {
    if (this.assignedEntities == null) {
      this.assignedEntities = new ArrayList<>();
    }
    this.assignedEntities.add(assignedEntitiesItem);
    return this;
  }

   /**
   * The list of Dynatrace entities, assigned to the tile.
   * @return assignedEntities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of Dynatrace entities, assigned to the tile.")
  @JsonProperty(JSON_PROPERTY_ASSIGNED_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getAssignedEntities() {
    return assignedEntities;
  }


  @JsonProperty(JSON_PROPERTY_ASSIGNED_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssignedEntities(List<String> assignedEntities) {
    this.assignedEntities = assignedEntities;
  }


  public AssignedEntitiesWithMetricTileAllOf metric(String metric) {
    this.metric = metric;
    return this;
  }

   /**
   * The metric assigned to the tile.
   * @return metric
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The metric assigned to the tile.")
  @JsonProperty(JSON_PROPERTY_METRIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMetric() {
    return metric;
  }


  @JsonProperty(JSON_PROPERTY_METRIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetric(String metric) {
    this.metric = metric;
  }


  /**
   * Return true if this AssignedEntitiesWithMetricTile_allOf object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssignedEntitiesWithMetricTileAllOf assignedEntitiesWithMetricTileAllOf = (AssignedEntitiesWithMetricTileAllOf) o;
    return Objects.equals(this.assignedEntities, assignedEntitiesWithMetricTileAllOf.assignedEntities) &&
        Objects.equals(this.metric, assignedEntitiesWithMetricTileAllOf.metric);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assignedEntities, metric);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssignedEntitiesWithMetricTileAllOf {\n");
    sb.append("    assignedEntities: ").append(toIndentedString(assignedEntities)).append("\n");
    sb.append("    metric: ").append(toIndentedString(metric)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

