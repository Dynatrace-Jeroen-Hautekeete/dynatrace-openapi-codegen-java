/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.ConfigurationMetadata;
import com.dynatrace.apis.configv1.model.DroppedPacketsDetectionConfig;
import com.dynatrace.apis.configv1.model.EsxiHighCpuSaturationConfig;
import com.dynatrace.apis.configv1.model.EsxiHighMemoryDetectionConfig;
import com.dynatrace.apis.configv1.model.GuestCPULimitReachedConfig;
import com.dynatrace.apis.configv1.model.LowDatastoreSpaceDetectionConfig;
import com.dynatrace.apis.configv1.model.OverloadedStorageDetectionConfig;
import com.dynatrace.apis.configv1.model.SlowPhysicalStorageDetectionConfig;
import com.dynatrace.apis.configv1.model.UndersizedStorageDetectionConfig;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The configuration of the anomaly detection for VMware.
 */
@ApiModel(description = "The configuration of the anomaly detection for VMware.")
@JsonPropertyOrder({
  VMwareAnomalyDetectionConfig.JSON_PROPERTY_METADATA,
  VMwareAnomalyDetectionConfig.JSON_PROPERTY_ESXI_HIGH_CPU_SATURATION,
  VMwareAnomalyDetectionConfig.JSON_PROPERTY_GUEST_CPU_LIMIT_REACHED,
  VMwareAnomalyDetectionConfig.JSON_PROPERTY_ESXI_HIGH_MEMORY_DETECTION,
  VMwareAnomalyDetectionConfig.JSON_PROPERTY_OVERLOADED_STORAGE_DETECTION,
  VMwareAnomalyDetectionConfig.JSON_PROPERTY_UNDERSIZED_STORAGE_DETECTION,
  VMwareAnomalyDetectionConfig.JSON_PROPERTY_SLOW_PHYSICAL_STORAGE_DETECTION,
  VMwareAnomalyDetectionConfig.JSON_PROPERTY_DROPPED_PACKETS_DETECTION,
  VMwareAnomalyDetectionConfig.JSON_PROPERTY_LOW_DATASTORE_SPACE_DETECTION
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class VMwareAnomalyDetectionConfig {
  public static final String JSON_PROPERTY_METADATA = "metadata";
  private ConfigurationMetadata metadata;

  public static final String JSON_PROPERTY_ESXI_HIGH_CPU_SATURATION = "esxiHighCpuSaturation";
  private EsxiHighCpuSaturationConfig esxiHighCpuSaturation;

  public static final String JSON_PROPERTY_GUEST_CPU_LIMIT_REACHED = "guestCpuLimitReached";
  private GuestCPULimitReachedConfig guestCpuLimitReached;

  public static final String JSON_PROPERTY_ESXI_HIGH_MEMORY_DETECTION = "esxiHighMemoryDetection";
  private EsxiHighMemoryDetectionConfig esxiHighMemoryDetection;

  public static final String JSON_PROPERTY_OVERLOADED_STORAGE_DETECTION = "overloadedStorageDetection";
  private OverloadedStorageDetectionConfig overloadedStorageDetection;

  public static final String JSON_PROPERTY_UNDERSIZED_STORAGE_DETECTION = "undersizedStorageDetection";
  private UndersizedStorageDetectionConfig undersizedStorageDetection;

  public static final String JSON_PROPERTY_SLOW_PHYSICAL_STORAGE_DETECTION = "slowPhysicalStorageDetection";
  private SlowPhysicalStorageDetectionConfig slowPhysicalStorageDetection;

  public static final String JSON_PROPERTY_DROPPED_PACKETS_DETECTION = "droppedPacketsDetection";
  private DroppedPacketsDetectionConfig droppedPacketsDetection;

  public static final String JSON_PROPERTY_LOW_DATASTORE_SPACE_DETECTION = "lowDatastoreSpaceDetection";
  private LowDatastoreSpaceDetectionConfig lowDatastoreSpaceDetection;

  public VMwareAnomalyDetectionConfig() { 
  }

  public VMwareAnomalyDetectionConfig metadata(ConfigurationMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConfigurationMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(ConfigurationMetadata metadata) {
    this.metadata = metadata;
  }


  public VMwareAnomalyDetectionConfig esxiHighCpuSaturation(EsxiHighCpuSaturationConfig esxiHighCpuSaturation) {
    this.esxiHighCpuSaturation = esxiHighCpuSaturation;
    return this;
  }

   /**
   * Get esxiHighCpuSaturation
   * @return esxiHighCpuSaturation
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ESXI_HIGH_CPU_SATURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EsxiHighCpuSaturationConfig getEsxiHighCpuSaturation() {
    return esxiHighCpuSaturation;
  }


  @JsonProperty(JSON_PROPERTY_ESXI_HIGH_CPU_SATURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEsxiHighCpuSaturation(EsxiHighCpuSaturationConfig esxiHighCpuSaturation) {
    this.esxiHighCpuSaturation = esxiHighCpuSaturation;
  }


  public VMwareAnomalyDetectionConfig guestCpuLimitReached(GuestCPULimitReachedConfig guestCpuLimitReached) {
    this.guestCpuLimitReached = guestCpuLimitReached;
    return this;
  }

   /**
   * Get guestCpuLimitReached
   * @return guestCpuLimitReached
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_GUEST_CPU_LIMIT_REACHED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GuestCPULimitReachedConfig getGuestCpuLimitReached() {
    return guestCpuLimitReached;
  }


  @JsonProperty(JSON_PROPERTY_GUEST_CPU_LIMIT_REACHED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGuestCpuLimitReached(GuestCPULimitReachedConfig guestCpuLimitReached) {
    this.guestCpuLimitReached = guestCpuLimitReached;
  }


  public VMwareAnomalyDetectionConfig esxiHighMemoryDetection(EsxiHighMemoryDetectionConfig esxiHighMemoryDetection) {
    this.esxiHighMemoryDetection = esxiHighMemoryDetection;
    return this;
  }

   /**
   * Get esxiHighMemoryDetection
   * @return esxiHighMemoryDetection
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ESXI_HIGH_MEMORY_DETECTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EsxiHighMemoryDetectionConfig getEsxiHighMemoryDetection() {
    return esxiHighMemoryDetection;
  }


  @JsonProperty(JSON_PROPERTY_ESXI_HIGH_MEMORY_DETECTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEsxiHighMemoryDetection(EsxiHighMemoryDetectionConfig esxiHighMemoryDetection) {
    this.esxiHighMemoryDetection = esxiHighMemoryDetection;
  }


  public VMwareAnomalyDetectionConfig overloadedStorageDetection(OverloadedStorageDetectionConfig overloadedStorageDetection) {
    this.overloadedStorageDetection = overloadedStorageDetection;
    return this;
  }

   /**
   * Get overloadedStorageDetection
   * @return overloadedStorageDetection
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_OVERLOADED_STORAGE_DETECTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OverloadedStorageDetectionConfig getOverloadedStorageDetection() {
    return overloadedStorageDetection;
  }


  @JsonProperty(JSON_PROPERTY_OVERLOADED_STORAGE_DETECTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOverloadedStorageDetection(OverloadedStorageDetectionConfig overloadedStorageDetection) {
    this.overloadedStorageDetection = overloadedStorageDetection;
  }


  public VMwareAnomalyDetectionConfig undersizedStorageDetection(UndersizedStorageDetectionConfig undersizedStorageDetection) {
    this.undersizedStorageDetection = undersizedStorageDetection;
    return this;
  }

   /**
   * Get undersizedStorageDetection
   * @return undersizedStorageDetection
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_UNDERSIZED_STORAGE_DETECTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UndersizedStorageDetectionConfig getUndersizedStorageDetection() {
    return undersizedStorageDetection;
  }


  @JsonProperty(JSON_PROPERTY_UNDERSIZED_STORAGE_DETECTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUndersizedStorageDetection(UndersizedStorageDetectionConfig undersizedStorageDetection) {
    this.undersizedStorageDetection = undersizedStorageDetection;
  }


  public VMwareAnomalyDetectionConfig slowPhysicalStorageDetection(SlowPhysicalStorageDetectionConfig slowPhysicalStorageDetection) {
    this.slowPhysicalStorageDetection = slowPhysicalStorageDetection;
    return this;
  }

   /**
   * Get slowPhysicalStorageDetection
   * @return slowPhysicalStorageDetection
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SLOW_PHYSICAL_STORAGE_DETECTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SlowPhysicalStorageDetectionConfig getSlowPhysicalStorageDetection() {
    return slowPhysicalStorageDetection;
  }


  @JsonProperty(JSON_PROPERTY_SLOW_PHYSICAL_STORAGE_DETECTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSlowPhysicalStorageDetection(SlowPhysicalStorageDetectionConfig slowPhysicalStorageDetection) {
    this.slowPhysicalStorageDetection = slowPhysicalStorageDetection;
  }


  public VMwareAnomalyDetectionConfig droppedPacketsDetection(DroppedPacketsDetectionConfig droppedPacketsDetection) {
    this.droppedPacketsDetection = droppedPacketsDetection;
    return this;
  }

   /**
   * Get droppedPacketsDetection
   * @return droppedPacketsDetection
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DROPPED_PACKETS_DETECTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DroppedPacketsDetectionConfig getDroppedPacketsDetection() {
    return droppedPacketsDetection;
  }


  @JsonProperty(JSON_PROPERTY_DROPPED_PACKETS_DETECTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDroppedPacketsDetection(DroppedPacketsDetectionConfig droppedPacketsDetection) {
    this.droppedPacketsDetection = droppedPacketsDetection;
  }


  public VMwareAnomalyDetectionConfig lowDatastoreSpaceDetection(LowDatastoreSpaceDetectionConfig lowDatastoreSpaceDetection) {
    this.lowDatastoreSpaceDetection = lowDatastoreSpaceDetection;
    return this;
  }

   /**
   * Get lowDatastoreSpaceDetection
   * @return lowDatastoreSpaceDetection
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LOW_DATASTORE_SPACE_DETECTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LowDatastoreSpaceDetectionConfig getLowDatastoreSpaceDetection() {
    return lowDatastoreSpaceDetection;
  }


  @JsonProperty(JSON_PROPERTY_LOW_DATASTORE_SPACE_DETECTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLowDatastoreSpaceDetection(LowDatastoreSpaceDetectionConfig lowDatastoreSpaceDetection) {
    this.lowDatastoreSpaceDetection = lowDatastoreSpaceDetection;
  }


  /**
   * Return true if this VMwareAnomalyDetectionConfig object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VMwareAnomalyDetectionConfig vmwareAnomalyDetectionConfig = (VMwareAnomalyDetectionConfig) o;
    return Objects.equals(this.metadata, vmwareAnomalyDetectionConfig.metadata) &&
        Objects.equals(this.esxiHighCpuSaturation, vmwareAnomalyDetectionConfig.esxiHighCpuSaturation) &&
        Objects.equals(this.guestCpuLimitReached, vmwareAnomalyDetectionConfig.guestCpuLimitReached) &&
        Objects.equals(this.esxiHighMemoryDetection, vmwareAnomalyDetectionConfig.esxiHighMemoryDetection) &&
        Objects.equals(this.overloadedStorageDetection, vmwareAnomalyDetectionConfig.overloadedStorageDetection) &&
        Objects.equals(this.undersizedStorageDetection, vmwareAnomalyDetectionConfig.undersizedStorageDetection) &&
        Objects.equals(this.slowPhysicalStorageDetection, vmwareAnomalyDetectionConfig.slowPhysicalStorageDetection) &&
        Objects.equals(this.droppedPacketsDetection, vmwareAnomalyDetectionConfig.droppedPacketsDetection) &&
        Objects.equals(this.lowDatastoreSpaceDetection, vmwareAnomalyDetectionConfig.lowDatastoreSpaceDetection);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metadata, esxiHighCpuSaturation, guestCpuLimitReached, esxiHighMemoryDetection, overloadedStorageDetection, undersizedStorageDetection, slowPhysicalStorageDetection, droppedPacketsDetection, lowDatastoreSpaceDetection);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VMwareAnomalyDetectionConfig {\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    esxiHighCpuSaturation: ").append(toIndentedString(esxiHighCpuSaturation)).append("\n");
    sb.append("    guestCpuLimitReached: ").append(toIndentedString(guestCpuLimitReached)).append("\n");
    sb.append("    esxiHighMemoryDetection: ").append(toIndentedString(esxiHighMemoryDetection)).append("\n");
    sb.append("    overloadedStorageDetection: ").append(toIndentedString(overloadedStorageDetection)).append("\n");
    sb.append("    undersizedStorageDetection: ").append(toIndentedString(undersizedStorageDetection)).append("\n");
    sb.append("    slowPhysicalStorageDetection: ").append(toIndentedString(slowPhysicalStorageDetection)).append("\n");
    sb.append("    droppedPacketsDetection: ").append(toIndentedString(droppedPacketsDetection)).append("\n");
    sb.append("    lowDatastoreSpaceDetection: ").append(toIndentedString(lowDatastoreSpaceDetection)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

