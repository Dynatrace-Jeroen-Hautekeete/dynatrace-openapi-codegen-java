/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.EntityRuleEngineCondition;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The rule of the management zone usage. It defines how the management zone applies.   Each rule is evaluated independently of all other rules.
 */
@ApiModel(description = "The rule of the management zone usage. It defines how the management zone applies.   Each rule is evaluated independently of all other rules.")
@JsonPropertyOrder({
  MzRule.JSON_PROPERTY_TYPE,
  MzRule.JSON_PROPERTY_ENABLED,
  MzRule.JSON_PROPERTY_PROPAGATION_TYPES,
  MzRule.JSON_PROPERTY_CONDITIONS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class MzRule {
  /**
   * The type of Dynatrace entities the management zone can be applied to.
   */
  public enum TypeEnum {
    APPMON_SERVER("APPMON_SERVER"),
    
    APPMON_SYSTEM_PROFILE("APPMON_SYSTEM_PROFILE"),
    
    AWS_ACCOUNT("AWS_ACCOUNT"),
    
    AWS_APPLICATION_LOAD_BALANCER("AWS_APPLICATION_LOAD_BALANCER"),
    
    AWS_AUTO_SCALING_GROUP("AWS_AUTO_SCALING_GROUP"),
    
    AWS_CLASSIC_LOAD_BALANCER("AWS_CLASSIC_LOAD_BALANCER"),
    
    AWS_NETWORK_LOAD_BALANCER("AWS_NETWORK_LOAD_BALANCER"),
    
    AWS_RELATIONAL_DATABASE_SERVICE("AWS_RELATIONAL_DATABASE_SERVICE"),
    
    AZURE("AZURE"),
    
    BROWSER_MONITOR("BROWSER_MONITOR"),
    
    CLOUD_APPLICATION("CLOUD_APPLICATION"),
    
    CLOUD_APPLICATION_NAMESPACE("CLOUD_APPLICATION_NAMESPACE"),
    
    CLOUD_FOUNDRY_FOUNDATION("CLOUD_FOUNDRY_FOUNDATION"),
    
    CUSTOM_APPLICATION("CUSTOM_APPLICATION"),
    
    CUSTOM_DEVICE("CUSTOM_DEVICE"),
    
    CUSTOM_DEVICE_GROUP("CUSTOM_DEVICE_GROUP"),
    
    DATA_CENTER_SERVICE("DATA_CENTER_SERVICE"),
    
    ENTERPRISE_APPLICATION("ENTERPRISE_APPLICATION"),
    
    ESXI_HOST("ESXI_HOST"),
    
    EXTERNAL_MONITOR("EXTERNAL_MONITOR"),
    
    HOST("HOST"),
    
    HOST_GROUP("HOST_GROUP"),
    
    HTTP_MONITOR("HTTP_MONITOR"),
    
    KUBERNETES_CLUSTER("KUBERNETES_CLUSTER"),
    
    KUBERNETES_SERVICE("KUBERNETES_SERVICE"),
    
    MOBILE_APPLICATION("MOBILE_APPLICATION"),
    
    OPENSTACK_ACCOUNT("OPENSTACK_ACCOUNT"),
    
    PROCESS_GROUP("PROCESS_GROUP"),
    
    QUEUE("QUEUE"),
    
    SERVICE("SERVICE"),
    
    WEB_APPLICATION("WEB_APPLICATION");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  /**
   * Gets or Sets propagationTypes
   */
  public enum PropagationTypesEnum {
    AZURE_TO_PG("AZURE_TO_PG"),
    
    AZURE_TO_SERVICE("AZURE_TO_SERVICE"),
    
    CUSTOM_DEVICE_GROUP_TO_CUSTOM_DEVICE("CUSTOM_DEVICE_GROUP_TO_CUSTOM_DEVICE"),
    
    HOST_TO_PROCESS_GROUP_INSTANCE("HOST_TO_PROCESS_GROUP_INSTANCE"),
    
    PROCESS_GROUP_TO_HOST("PROCESS_GROUP_TO_HOST"),
    
    PROCESS_GROUP_TO_SERVICE("PROCESS_GROUP_TO_SERVICE"),
    
    SERVICE_TO_HOST_LIKE("SERVICE_TO_HOST_LIKE"),
    
    SERVICE_TO_PROCESS_GROUP_LIKE("SERVICE_TO_PROCESS_GROUP_LIKE");

    private String value;

    PropagationTypesEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PropagationTypesEnum fromValue(String value) {
      for (PropagationTypesEnum b : PropagationTypesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PROPAGATION_TYPES = "propagationTypes";
  private List<PropagationTypesEnum> propagationTypes = null;

  public static final String JSON_PROPERTY_CONDITIONS = "conditions";
  private List<EntityRuleEngineCondition> conditions = new ArrayList<>();

  public MzRule() { 
  }

  public MzRule type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The type of Dynatrace entities the management zone can be applied to.
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The type of Dynatrace entities the management zone can be applied to.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public MzRule enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * The rule is enabled (&#x60;true&#x60;) or disabled (&#x60;false&#x60;).
   * @return enabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The rule is enabled (`true`) or disabled (`false`).")
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public MzRule propagationTypes(List<PropagationTypesEnum> propagationTypes) {
    this.propagationTypes = propagationTypes;
    return this;
  }

  public MzRule addPropagationTypesItem(PropagationTypesEnum propagationTypesItem) {
    if (this.propagationTypes == null) {
      this.propagationTypes = new ArrayList<>();
    }
    this.propagationTypes.add(propagationTypesItem);
    return this;
  }

   /**
   * How to apply the management zone to underlying entities:   * &#x60;SERVICE_TO_HOST_LIKE&#x60;: Apply to underlying hosts of matching services.  * &#x60;SERVICE_TO_PROCESS_GROUP_LIKE&#x60;: Apply to underlying process groups of matching services.  * &#x60;PROCESS_GROUP_TO_HOST&#x60;: Apply to underlying hosts of matching process groups.  * &#x60;PROCESS_GROUP_TO_SERVICE&#x60;: Apply to all services provided by matching process groups.  * &#x60;HOST_TO_PROCESS_GROUP_INSTANCE&#x60;: Apply to processes running on matching hosts.  * &#x60;CUSTOM_DEVICE_GROUP_TO_CUSTOM_DEVICE&#x60;: Apply to custom devices in matching custom device groups.  * &#x60;AZURE_TO_PG&#x60;: Apply to process groups connected to matching Azure entities.  * &#x60;AZURE_TO_SERVICE&#x60;: Apply to services provided by matching Azure entities.
   * @return propagationTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "How to apply the management zone to underlying entities:   * `SERVICE_TO_HOST_LIKE`: Apply to underlying hosts of matching services.  * `SERVICE_TO_PROCESS_GROUP_LIKE`: Apply to underlying process groups of matching services.  * `PROCESS_GROUP_TO_HOST`: Apply to underlying hosts of matching process groups.  * `PROCESS_GROUP_TO_SERVICE`: Apply to all services provided by matching process groups.  * `HOST_TO_PROCESS_GROUP_INSTANCE`: Apply to processes running on matching hosts.  * `CUSTOM_DEVICE_GROUP_TO_CUSTOM_DEVICE`: Apply to custom devices in matching custom device groups.  * `AZURE_TO_PG`: Apply to process groups connected to matching Azure entities.  * `AZURE_TO_SERVICE`: Apply to services provided by matching Azure entities.")
  @JsonProperty(JSON_PROPERTY_PROPAGATION_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PropagationTypesEnum> getPropagationTypes() {
    return propagationTypes;
  }


  @JsonProperty(JSON_PROPERTY_PROPAGATION_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPropagationTypes(List<PropagationTypesEnum> propagationTypes) {
    this.propagationTypes = propagationTypes;
  }


  public MzRule conditions(List<EntityRuleEngineCondition> conditions) {
    this.conditions = conditions;
    return this;
  }

  public MzRule addConditionsItem(EntityRuleEngineCondition conditionsItem) {
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * A list of matching rules for the management zone.   The management zone applies only if **all** conditions are fulfilled.
   * @return conditions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A list of matching rules for the management zone.   The management zone applies only if **all** conditions are fulfilled.")
  @JsonProperty(JSON_PROPERTY_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<EntityRuleEngineCondition> getConditions() {
    return conditions;
  }


  @JsonProperty(JSON_PROPERTY_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConditions(List<EntityRuleEngineCondition> conditions) {
    this.conditions = conditions;
  }


  /**
   * Return true if this MzRule object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MzRule mzRule = (MzRule) o;
    return Objects.equals(this.type, mzRule.type) &&
        Objects.equals(this.enabled, mzRule.enabled) &&
        Objects.equals(this.propagationTypes, mzRule.propagationTypes) &&
        Objects.equals(this.conditions, mzRule.conditions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, enabled, propagationTypes, conditions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MzRule {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    propagationTypes: ").append(toIndentedString(propagationTypes)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

