/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.ContextRootTransformation;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The contribution to the service ID calculation from the detected context root.    The context root is the first segment of the request URL after server name. For example, in the &#x60;www.dynatrace.com/support/help/dynatrace-api/&#x60; URL the context root is &#x60;support&#x60;.   You have two options:  * Keep a part of the detected URL. Specify the number of segments to be kept in the **segmentsToCopyFromUrlPath** field.  * Dynamically transform the detected URL. Specify the transformation parameters in the **transformations** field.   You can use one or both options. If you use both, the transformation applies to the modified URL.
 */
@ApiModel(description = "The contribution to the service ID calculation from the detected context root.    The context root is the first segment of the request URL after server name. For example, in the `www.dynatrace.com/support/help/dynatrace-api/` URL the context root is `support`.   You have two options:  * Keep a part of the detected URL. Specify the number of segments to be kept in the **segmentsToCopyFromUrlPath** field.  * Dynamically transform the detected URL. Specify the transformation parameters in the **transformations** field.   You can use one or both options. If you use both, the transformation applies to the modified URL.")
@JsonPropertyOrder({
  ContextRoot.JSON_PROPERTY_TRANSFORMATIONS,
  ContextRoot.JSON_PROPERTY_SEGMENTS_TO_COPY_FROM_URL_PATH
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class ContextRoot {
  public static final String JSON_PROPERTY_TRANSFORMATIONS = "transformations";
  private List<ContextRootTransformation> transformations = null;

  public static final String JSON_PROPERTY_SEGMENTS_TO_COPY_FROM_URL_PATH = "segmentsToCopyFromUrlPath";
  private Integer segmentsToCopyFromUrlPath;

  public ContextRoot() { 
  }

  public ContextRoot transformations(List<ContextRootTransformation> transformations) {
    this.transformations = transformations;
    return this;
  }

  public ContextRoot addTransformationsItem(ContextRootTransformation transformationsItem) {
    if (this.transformations == null) {
      this.transformations = new ArrayList<>();
    }
    this.transformations.add(transformationsItem);
    return this;
  }

   /**
   * Transformations to be applied to the detected value.
   * @return transformations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Transformations to be applied to the detected value.")
  @JsonProperty(JSON_PROPERTY_TRANSFORMATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ContextRootTransformation> getTransformations() {
    return transformations;
  }


  @JsonProperty(JSON_PROPERTY_TRANSFORMATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransformations(List<ContextRootTransformation> transformations) {
    this.transformations = transformations;
  }


  public ContextRoot segmentsToCopyFromUrlPath(Integer segmentsToCopyFromUrlPath) {
    this.segmentsToCopyFromUrlPath = segmentsToCopyFromUrlPath;
    return this;
  }

   /**
   * The number of segments of the URL to be kept.   The URL is divided by slashes (&#x60;/&#x60;), the indexing starts with 1 at context root.   For example, if you specify &#x60;2&#x60; for the &#x60;www.dynatrace.com/support/help/dynatrace-api/&#x60; URL, the value of &#x60;support/help&#x60; is used.
   * @return segmentsToCopyFromUrlPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of segments of the URL to be kept.   The URL is divided by slashes (`/`), the indexing starts with 1 at context root.   For example, if you specify `2` for the `www.dynatrace.com/support/help/dynatrace-api/` URL, the value of `support/help` is used.")
  @JsonProperty(JSON_PROPERTY_SEGMENTS_TO_COPY_FROM_URL_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSegmentsToCopyFromUrlPath() {
    return segmentsToCopyFromUrlPath;
  }


  @JsonProperty(JSON_PROPERTY_SEGMENTS_TO_COPY_FROM_URL_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSegmentsToCopyFromUrlPath(Integer segmentsToCopyFromUrlPath) {
    this.segmentsToCopyFromUrlPath = segmentsToCopyFromUrlPath;
  }


  /**
   * Return true if this ContextRoot object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContextRoot contextRoot = (ContextRoot) o;
    return Objects.equals(this.transformations, contextRoot.transformations) &&
        Objects.equals(this.segmentsToCopyFromUrlPath, contextRoot.segmentsToCopyFromUrlPath);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transformations, segmentsToCopyFromUrlPath);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContextRoot {\n");
    sb.append("    transformations: ").append(toIndentedString(transformations)).append("\n");
    sb.append("    segmentsToCopyFromUrlPath: ").append(toIndentedString(segmentsToCopyFromUrlPath)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

