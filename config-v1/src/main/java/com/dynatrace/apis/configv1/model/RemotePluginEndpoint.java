/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.EntityShortRepresentation;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Configuration of a plugin endpoint.
 */
@ApiModel(description = "Configuration of a plugin endpoint.")
@JsonPropertyOrder({
  RemotePluginEndpoint.JSON_PROPERTY_ID,
  RemotePluginEndpoint.JSON_PROPERTY_PLUGIN_ID,
  RemotePluginEndpoint.JSON_PROPERTY_NAME,
  RemotePluginEndpoint.JSON_PROPERTY_ENABLED,
  RemotePluginEndpoint.JSON_PROPERTY_PROPERTIES,
  RemotePluginEndpoint.JSON_PROPERTY_ACTIVE_GATE_PLUGIN_MODULE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class RemotePluginEndpoint {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_PLUGIN_ID = "pluginId";
  private String pluginId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  private Map<String, String> properties = null;

  public static final String JSON_PROPERTY_ACTIVE_GATE_PLUGIN_MODULE = "activeGatePluginModule";
  private EntityShortRepresentation activeGatePluginModule;

  public RemotePluginEndpoint() { 
  }

  public RemotePluginEndpoint id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of the endpoint.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the endpoint.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public RemotePluginEndpoint pluginId(String pluginId) {
    this.pluginId = pluginId;
    return this;
  }

   /**
   * The ID of the plugin to which the endpoint belongs.
   * @return pluginId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the plugin to which the endpoint belongs.")
  @JsonProperty(JSON_PROPERTY_PLUGIN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPluginId() {
    return pluginId;
  }


  @JsonProperty(JSON_PROPERTY_PLUGIN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPluginId(String pluginId) {
    this.pluginId = pluginId;
  }


  public RemotePluginEndpoint name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the endpoint, displayed in Dynatrace.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the endpoint, displayed in Dynatrace.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public RemotePluginEndpoint enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * The endpoint is enabled (&#x60;true&#x60;) or disabled (&#x60;false&#x60;).
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The endpoint is enabled (`true`) or disabled (`false`).")
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public RemotePluginEndpoint properties(Map<String, String> properties) {
    this.properties = properties;
    return this;
  }

  public RemotePluginEndpoint putPropertiesItem(String key, String propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * The list of endpoint parameters.    Each parameter is a property-value pair.
   * @return properties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of endpoint parameters.    Each parameter is a property-value pair.")
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getProperties() {
    return properties;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperties(Map<String, String> properties) {
    this.properties = properties;
  }


  public RemotePluginEndpoint activeGatePluginModule(EntityShortRepresentation activeGatePluginModule) {
    this.activeGatePluginModule = activeGatePluginModule;
    return this;
  }

   /**
   * Get activeGatePluginModule
   * @return activeGatePluginModule
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ACTIVE_GATE_PLUGIN_MODULE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EntityShortRepresentation getActiveGatePluginModule() {
    return activeGatePluginModule;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_GATE_PLUGIN_MODULE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setActiveGatePluginModule(EntityShortRepresentation activeGatePluginModule) {
    this.activeGatePluginModule = activeGatePluginModule;
  }


  /**
   * Return true if this RemotePluginEndpoint object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RemotePluginEndpoint remotePluginEndpoint = (RemotePluginEndpoint) o;
    return Objects.equals(this.id, remotePluginEndpoint.id) &&
        Objects.equals(this.pluginId, remotePluginEndpoint.pluginId) &&
        Objects.equals(this.name, remotePluginEndpoint.name) &&
        Objects.equals(this.enabled, remotePluginEndpoint.enabled) &&
        Objects.equals(this.properties, remotePluginEndpoint.properties) &&
        Objects.equals(this.activeGatePluginModule, remotePluginEndpoint.activeGatePluginModule);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, pluginId, name, enabled, properties, activeGatePluginModule);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RemotePluginEndpoint {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    pluginId: ").append(toIndentedString(pluginId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    activeGatePluginModule: ").append(toIndentedString(activeGatePluginModule)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

