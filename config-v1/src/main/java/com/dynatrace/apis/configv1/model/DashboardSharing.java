/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.DashboardAnonymousAccess;
import com.dynatrace.apis.configv1.model.DashboardSharePermissions;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Sharing configuration of the dashboard.
 */
@ApiModel(description = "Sharing configuration of the dashboard.")
@JsonPropertyOrder({
  DashboardSharing.JSON_PROPERTY_PUBLIC_ACCESS,
  DashboardSharing.JSON_PROPERTY_PRESET,
  DashboardSharing.JSON_PROPERTY_PERMISSIONS,
  DashboardSharing.JSON_PROPERTY_ID,
  DashboardSharing.JSON_PROPERTY_ENABLED
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class DashboardSharing {
  public static final String JSON_PROPERTY_PUBLIC_ACCESS = "publicAccess";
  private DashboardAnonymousAccess publicAccess;

  public static final String JSON_PROPERTY_PRESET = "preset";
  private Boolean preset;

  public static final String JSON_PROPERTY_PERMISSIONS = "permissions";
  private List<DashboardSharePermissions> permissions = new ArrayList<>();

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public DashboardSharing() { 
  }

  public DashboardSharing publicAccess(DashboardAnonymousAccess publicAccess) {
    this.publicAccess = publicAccess;
    return this;
  }

   /**
   * Get publicAccess
   * @return publicAccess
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PUBLIC_ACCESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DashboardAnonymousAccess getPublicAccess() {
    return publicAccess;
  }


  @JsonProperty(JSON_PROPERTY_PUBLIC_ACCESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPublicAccess(DashboardAnonymousAccess publicAccess) {
    this.publicAccess = publicAccess;
  }


  public DashboardSharing preset(Boolean preset) {
    this.preset = preset;
    return this;
  }

   /**
   * If &#x60;true&#x60; the dashboard will be marked as preset.
   * @return preset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If `true` the dashboard will be marked as preset.")
  @JsonProperty(JSON_PROPERTY_PRESET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPreset() {
    return preset;
  }


  @JsonProperty(JSON_PROPERTY_PRESET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreset(Boolean preset) {
    this.preset = preset;
  }


  public DashboardSharing permissions(List<DashboardSharePermissions> permissions) {
    this.permissions = permissions;
    return this;
  }

  public DashboardSharing addPermissionsItem(DashboardSharePermissions permissionsItem) {
    this.permissions.add(permissionsItem);
    return this;
  }

   /**
   * A list of permissions to access the dashboard.
   * @return permissions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A list of permissions to access the dashboard.")
  @JsonProperty(JSON_PROPERTY_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<DashboardSharePermissions> getPermissions() {
    return permissions;
  }


  @JsonProperty(JSON_PROPERTY_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPermissions(List<DashboardSharePermissions> permissions) {
    this.permissions = permissions;
  }


  public DashboardSharing id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The Dynatrace entity ID of the dashboard.
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The Dynatrace entity ID of the dashboard.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public DashboardSharing enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * The dashboard is shared (&#x60;true&#x60;) or private (&#x60;false&#x60;).
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The dashboard is shared (`true`) or private (`false`).")
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  /**
   * Return true if this DashboardSharing object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DashboardSharing dashboardSharing = (DashboardSharing) o;
    return Objects.equals(this.publicAccess, dashboardSharing.publicAccess) &&
        Objects.equals(this.preset, dashboardSharing.preset) &&
        Objects.equals(this.permissions, dashboardSharing.permissions) &&
        Objects.equals(this.id, dashboardSharing.id) &&
        Objects.equals(this.enabled, dashboardSharing.enabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(publicAccess, preset, permissions, id, enabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DashboardSharing {\n");
    sb.append("    publicAccess: ").append(toIndentedString(publicAccess)).append("\n");
    sb.append("    preset: ").append(toIndentedString(preset)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

