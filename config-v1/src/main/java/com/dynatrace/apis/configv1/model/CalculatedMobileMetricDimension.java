/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Dimension of the calculated mobile metric.
 */
@ApiModel(description = "Dimension of the calculated mobile metric.")
@JsonPropertyOrder({
  CalculatedMobileMetricDimension.JSON_PROPERTY_TOP_X,
  CalculatedMobileMetricDimension.JSON_PROPERTY_DIMENSION
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class CalculatedMobileMetricDimension {
  public static final String JSON_PROPERTY_TOP_X = "topX";
  private Integer topX;

  /**
   * The dimension of the metric.
   */
  public enum DimensionEnum {
    APP_VERSION("APP_VERSION"),
    
    DEVICE("DEVICE"),
    
    ERROR_CONTEXT("ERROR_CONTEXT"),
    
    GEOLOCATION("GEOLOCATION"),
    
    MANUFACTURER("MANUFACTURER"),
    
    OS("OS");

    private String value;

    DimensionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DimensionEnum fromValue(String value) {
      for (DimensionEnum b : DimensionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DIMENSION = "dimension";
  private DimensionEnum dimension;

  public CalculatedMobileMetricDimension() { 
  }

  public CalculatedMobileMetricDimension topX(Integer topX) {
    this.topX = topX;
    return this;
  }

   /**
   * The number of top values to be calculated.
   * minimum: 1
   * maximum: 200
   * @return topX
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The number of top values to be calculated.")
  @JsonProperty(JSON_PROPERTY_TOP_X)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getTopX() {
    return topX;
  }


  @JsonProperty(JSON_PROPERTY_TOP_X)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTopX(Integer topX) {
    this.topX = topX;
  }


  public CalculatedMobileMetricDimension dimension(DimensionEnum dimension) {
    this.dimension = dimension;
    return this;
  }

   /**
   * The dimension of the metric.
   * @return dimension
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The dimension of the metric.")
  @JsonProperty(JSON_PROPERTY_DIMENSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DimensionEnum getDimension() {
    return dimension;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDimension(DimensionEnum dimension) {
    this.dimension = dimension;
  }


  /**
   * Return true if this CalculatedMobileMetricDimension object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CalculatedMobileMetricDimension calculatedMobileMetricDimension = (CalculatedMobileMetricDimension) o;
    return Objects.equals(this.topX, calculatedMobileMetricDimension.topX) &&
        Objects.equals(this.dimension, calculatedMobileMetricDimension.dimension);
  }

  @Override
  public int hashCode() {
    return Objects.hash(topX, dimension);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CalculatedMobileMetricDimension {\n");
    sb.append("    topX: ").append(toIndentedString(topX)).append("\n");
    sb.append("    dimension: ").append(toIndentedString(dimension)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

