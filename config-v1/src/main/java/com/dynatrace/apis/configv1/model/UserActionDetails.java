/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Configuration of a user action-based conversion goal.
 */
@ApiModel(description = "Configuration of a user action-based conversion goal.")
@JsonPropertyOrder({
  UserActionDetails.JSON_PROPERTY_VALUE,
  UserActionDetails.JSON_PROPERTY_CASE_SENSITIVE,
  UserActionDetails.JSON_PROPERTY_MATCH_TYPE,
  UserActionDetails.JSON_PROPERTY_MATCH_ENTITY,
  UserActionDetails.JSON_PROPERTY_ACTION_TYPE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class UserActionDetails {
  public static final String JSON_PROPERTY_VALUE = "value";
  private String value;

  public static final String JSON_PROPERTY_CASE_SENSITIVE = "caseSensitive";
  private Boolean caseSensitive;

  /**
   * The operator of the match.
   */
  public enum MatchTypeEnum {
    BEGINS("Begins"),
    
    CONTAINS("Contains"),
    
    ENDS("Ends");

    private String value;

    MatchTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MatchTypeEnum fromValue(String value) {
      for (MatchTypeEnum b : MatchTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_MATCH_TYPE = "matchType";
  private MatchTypeEnum matchType;

  /**
   * The type of the entity to which the rule applies.
   */
  public enum MatchEntityEnum {
    ACTIONNAME("ActionName"),
    
    CSSSELECTOR("CssSelector"),
    
    JAVASCRIPTVARIABLE("JavaScriptVariable"),
    
    METATAG("MetaTag"),
    
    PAGEPATH("PagePath"),
    
    PAGETITLE("PageTitle"),
    
    PAGEURL("PageUrl"),
    
    URLANCHOR("UrlAnchor"),
    
    XHRURL("XhrUrl");

    private String value;

    MatchEntityEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MatchEntityEnum fromValue(String value) {
      for (MatchEntityEnum b : MatchEntityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_MATCH_ENTITY = "matchEntity";
  private MatchEntityEnum matchEntity;

  /**
   * Type of the action to which the rule applies.
   */
  public enum ActionTypeEnum {
    CUSTOM("Custom"),
    
    LOAD("Load"),
    
    XHR("Xhr");

    private String value;

    ActionTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ActionTypeEnum fromValue(String value) {
      for (ActionTypeEnum b : ActionTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ACTION_TYPE = "actionType";
  private ActionTypeEnum actionType;

  public UserActionDetails() { 
  }

  public UserActionDetails value(String value) {
    this.value = value;
    return this;
  }

   /**
   * The value to be matched to hit the conversion goal.
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value to be matched to hit the conversion goal.")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(String value) {
    this.value = value;
  }


  public UserActionDetails caseSensitive(Boolean caseSensitive) {
    this.caseSensitive = caseSensitive;
    return this;
  }

   /**
   * The match is case-sensitive (&#x60;true&#x60;) or (&#x60;false&#x60;).
   * @return caseSensitive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The match is case-sensitive (`true`) or (`false`).")
  @JsonProperty(JSON_PROPERTY_CASE_SENSITIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCaseSensitive() {
    return caseSensitive;
  }


  @JsonProperty(JSON_PROPERTY_CASE_SENSITIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCaseSensitive(Boolean caseSensitive) {
    this.caseSensitive = caseSensitive;
  }


  public UserActionDetails matchType(MatchTypeEnum matchType) {
    this.matchType = matchType;
    return this;
  }

   /**
   * The operator of the match.
   * @return matchType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The operator of the match.")
  @JsonProperty(JSON_PROPERTY_MATCH_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MatchTypeEnum getMatchType() {
    return matchType;
  }


  @JsonProperty(JSON_PROPERTY_MATCH_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMatchType(MatchTypeEnum matchType) {
    this.matchType = matchType;
  }


  public UserActionDetails matchEntity(MatchEntityEnum matchEntity) {
    this.matchEntity = matchEntity;
    return this;
  }

   /**
   * The type of the entity to which the rule applies.
   * @return matchEntity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of the entity to which the rule applies.")
  @JsonProperty(JSON_PROPERTY_MATCH_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MatchEntityEnum getMatchEntity() {
    return matchEntity;
  }


  @JsonProperty(JSON_PROPERTY_MATCH_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMatchEntity(MatchEntityEnum matchEntity) {
    this.matchEntity = matchEntity;
  }


  public UserActionDetails actionType(ActionTypeEnum actionType) {
    this.actionType = actionType;
    return this;
  }

   /**
   * Type of the action to which the rule applies.
   * @return actionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type of the action to which the rule applies.")
  @JsonProperty(JSON_PROPERTY_ACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ActionTypeEnum getActionType() {
    return actionType;
  }


  @JsonProperty(JSON_PROPERTY_ACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActionType(ActionTypeEnum actionType) {
    this.actionType = actionType;
  }


  /**
   * Return true if this UserActionDetails object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserActionDetails userActionDetails = (UserActionDetails) o;
    return Objects.equals(this.value, userActionDetails.value) &&
        Objects.equals(this.caseSensitive, userActionDetails.caseSensitive) &&
        Objects.equals(this.matchType, userActionDetails.matchType) &&
        Objects.equals(this.matchEntity, userActionDetails.matchEntity) &&
        Objects.equals(this.actionType, userActionDetails.actionType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(value, caseSensitive, matchType, matchEntity, actionType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserActionDetails {\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    caseSensitive: ").append(toIndentedString(caseSensitive)).append("\n");
    sb.append("    matchType: ").append(toIndentedString(matchType)).append("\n");
    sb.append("    matchEntity: ").append(toIndentedString(matchEntity)).append("\n");
    sb.append("    actionType: ").append(toIndentedString(actionType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

