/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The credentials for the role-based authentication.
 */
@ApiModel(description = "The credentials for the role-based authentication.")
@JsonPropertyOrder({
  RoleBasedAuthentication.JSON_PROPERTY_IAM_ROLE,
  RoleBasedAuthentication.JSON_PROPERTY_ACCOUNT_ID,
  RoleBasedAuthentication.JSON_PROPERTY_EXTERNAL_ID
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class RoleBasedAuthentication {
  public static final String JSON_PROPERTY_IAM_ROLE = "iamRole";
  private String iamRole;

  public static final String JSON_PROPERTY_ACCOUNT_ID = "accountId";
  private String accountId;

  public static final String JSON_PROPERTY_EXTERNAL_ID = "externalId";
  private String externalId;

  public RoleBasedAuthentication() { 
  }

  @JsonCreator
  public RoleBasedAuthentication(
    @JsonProperty(JSON_PROPERTY_EXTERNAL_ID) String externalId
  ) {
  this();
    this.externalId = externalId;
  }

  public RoleBasedAuthentication iamRole(String iamRole) {
    this.iamRole = iamRole;
    return this;
  }

   /**
   * The IAM role to be used by Dynatrace to get monitoring data.
   * @return iamRole
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The IAM role to be used by Dynatrace to get monitoring data.")
  @JsonProperty(JSON_PROPERTY_IAM_ROLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIamRole() {
    return iamRole;
  }


  @JsonProperty(JSON_PROPERTY_IAM_ROLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIamRole(String iamRole) {
    this.iamRole = iamRole;
  }


  public RoleBasedAuthentication accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * The ID of the Amazon account.
   * @return accountId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The ID of the Amazon account.")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAccountId() {
    return accountId;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


   /**
   * The external ID token for setting an IAM role.    You can obtain it with the &#x60;GET /aws/iamExternalId&#x60; request.
   * @return externalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The external ID token for setting an IAM role.    You can obtain it with the `GET /aws/iamExternalId` request.")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalId() {
    return externalId;
  }




  /**
   * Return true if this RoleBasedAuthentication object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoleBasedAuthentication roleBasedAuthentication = (RoleBasedAuthentication) o;
    return Objects.equals(this.iamRole, roleBasedAuthentication.iamRole) &&
        Objects.equals(this.accountId, roleBasedAuthentication.accountId) &&
        Objects.equals(this.externalId, roleBasedAuthentication.externalId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(iamRole, accountId, externalId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoleBasedAuthentication {\n");
    sb.append("    iamRole: ").append(toIndentedString(iamRole)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

