/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * y Axes configuration
 */
@ApiModel(description = "y Axes configuration")
@JsonPropertyOrder({
  YAxis.JSON_PROPERTY_QUERY_IDS,
  YAxis.JSON_PROPERTY_DEFAULT_AXIS,
  YAxis.JSON_PROPERTY_POSITION,
  YAxis.JSON_PROPERTY_MIN,
  YAxis.JSON_PROPERTY_MAX,
  YAxis.JSON_PROPERTY_DISPLAY_NAME,
  YAxis.JSON_PROPERTY_VISIBLE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class YAxis {
  public static final String JSON_PROPERTY_QUERY_IDS = "queryIds";
  private List<String> queryIds = null;

  public static final String JSON_PROPERTY_DEFAULT_AXIS = "defaultAxis";
  private Boolean defaultAxis;

  /**
   * Gets or Sets position
   */
  public enum PositionEnum {
    LEFT("LEFT"),
    
    RIGHT("RIGHT");

    private String value;

    PositionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PositionEnum fromValue(String value) {
      for (PositionEnum b : PositionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_POSITION = "position";
  private PositionEnum position;

  public static final String JSON_PROPERTY_MIN = "min";
  private String min;

  public static final String JSON_PROPERTY_MAX = "max";
  private String max;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_VISIBLE = "visible";
  private Boolean visible;

  public YAxis() { 
  }

  public YAxis queryIds(List<String> queryIds) {
    this.queryIds = queryIds;
    return this;
  }

  public YAxis addQueryIdsItem(String queryIdsItem) {
    if (this.queryIds == null) {
      this.queryIds = new ArrayList<>();
    }
    this.queryIds.add(queryIdsItem);
    return this;
  }

   /**
   * Get queryIds
   * @return queryIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_QUERY_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getQueryIds() {
    return queryIds;
  }


  @JsonProperty(JSON_PROPERTY_QUERY_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQueryIds(List<String> queryIds) {
    this.queryIds = queryIds;
  }


  public YAxis defaultAxis(Boolean defaultAxis) {
    this.defaultAxis = defaultAxis;
    return this;
  }

   /**
   * Get defaultAxis
   * @return defaultAxis
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DEFAULT_AXIS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDefaultAxis() {
    return defaultAxis;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_AXIS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultAxis(Boolean defaultAxis) {
    this.defaultAxis = defaultAxis;
  }


  public YAxis position(PositionEnum position) {
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PositionEnum getPosition() {
    return position;
  }


  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPosition(PositionEnum position) {
    this.position = position;
  }


  public YAxis min(String min) {
    this.min = min;
    return this;
  }

   /**
   * Get min
   * @return min
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMin() {
    return min;
  }


  @JsonProperty(JSON_PROPERTY_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMin(String min) {
    this.min = min;
  }


  public YAxis max(String max) {
    this.max = max;
    return this;
  }

   /**
   * Get max
   * @return max
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMax() {
    return max;
  }


  @JsonProperty(JSON_PROPERTY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMax(String max) {
    this.max = max;
  }


  public YAxis displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public YAxis visible(Boolean visible) {
    this.visible = visible;
    return this;
  }

   /**
   * Get visible
   * @return visible
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VISIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getVisible() {
    return visible;
  }


  @JsonProperty(JSON_PROPERTY_VISIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisible(Boolean visible) {
    this.visible = visible;
  }


  /**
   * Return true if this YAxis object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    YAxis yaxis = (YAxis) o;
    return Objects.equals(this.queryIds, yaxis.queryIds) &&
        Objects.equals(this.defaultAxis, yaxis.defaultAxis) &&
        Objects.equals(this.position, yaxis.position) &&
        Objects.equals(this.min, yaxis.min) &&
        Objects.equals(this.max, yaxis.max) &&
        Objects.equals(this.displayName, yaxis.displayName) &&
        Objects.equals(this.visible, yaxis.visible);
  }

  @Override
  public int hashCode() {
    return Objects.hash(queryIds, defaultAxis, position, min, max, displayName, visible);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class YAxis {\n");
    sb.append("    queryIds: ").append(toIndentedString(queryIds)).append("\n");
    sb.append("    defaultAxis: ").append(toIndentedString(defaultAxis)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    min: ").append(toIndentedString(min)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

