/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.CalculatedMetricDefinition;
import com.dynatrace.apis.configv1.model.Condition;
import com.dynatrace.apis.configv1.model.ConfigurationMetadata;
import com.dynatrace.apis.configv1.model.DimensionDefinition;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Descriptor of a calculated service metric.
 */
@ApiModel(description = "Descriptor of a calculated service metric.")
@JsonPropertyOrder({
  CalculatedServiceMetric.JSON_PROPERTY_METADATA,
  CalculatedServiceMetric.JSON_PROPERTY_TSM_METRIC_KEY,
  CalculatedServiceMetric.JSON_PROPERTY_NAME,
  CalculatedServiceMetric.JSON_PROPERTY_ENABLED,
  CalculatedServiceMetric.JSON_PROPERTY_IGNORE_MUTED_REQUESTS,
  CalculatedServiceMetric.JSON_PROPERTY_METRIC_DEFINITION,
  CalculatedServiceMetric.JSON_PROPERTY_UNIT,
  CalculatedServiceMetric.JSON_PROPERTY_UNIT_DISPLAY_NAME,
  CalculatedServiceMetric.JSON_PROPERTY_ENTITY_ID,
  CalculatedServiceMetric.JSON_PROPERTY_MANAGEMENT_ZONES,
  CalculatedServiceMetric.JSON_PROPERTY_CONDITIONS,
  CalculatedServiceMetric.JSON_PROPERTY_DIMENSION_DEFINITION
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class CalculatedServiceMetric {
  public static final String JSON_PROPERTY_METADATA = "metadata";
  private ConfigurationMetadata metadata;

  public static final String JSON_PROPERTY_TSM_METRIC_KEY = "tsmMetricKey";
  private String tsmMetricKey;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_IGNORE_MUTED_REQUESTS = "ignoreMutedRequests";
  private Boolean ignoreMutedRequests;

  public static final String JSON_PROPERTY_METRIC_DEFINITION = "metricDefinition";
  private CalculatedMetricDefinition metricDefinition;

  /**
   * The unit of the metric.
   */
  public enum UnitEnum {
    BILLION("BILLION"),
    
    BIT("BIT"),
    
    BIT_PER_HOUR("BIT_PER_HOUR"),
    
    BIT_PER_MINUTE("BIT_PER_MINUTE"),
    
    BIT_PER_SECOND("BIT_PER_SECOND"),
    
    BYTE("BYTE"),
    
    BYTE_PER_HOUR("BYTE_PER_HOUR"),
    
    BYTE_PER_MINUTE("BYTE_PER_MINUTE"),
    
    BYTE_PER_SECOND("BYTE_PER_SECOND"),
    
    CORES("CORES"),
    
    COUNT("COUNT"),
    
    DAY("DAY"),
    
    DECIBEL_MILLI_WATT("DECIBEL_MILLI_WATT"),
    
    GIBI_BYTE("GIBI_BYTE"),
    
    GIGA("GIGA"),
    
    GIGA_BYTE("GIGA_BYTE"),
    
    HOUR("HOUR"),
    
    KIBI_BYTE("KIBI_BYTE"),
    
    KIBI_BYTE_PER_HOUR("KIBI_BYTE_PER_HOUR"),
    
    KIBI_BYTE_PER_MINUTE("KIBI_BYTE_PER_MINUTE"),
    
    KIBI_BYTE_PER_SECOND("KIBI_BYTE_PER_SECOND"),
    
    KILO("KILO"),
    
    KILO_BYTE("KILO_BYTE"),
    
    KILO_BYTE_PER_HOUR("KILO_BYTE_PER_HOUR"),
    
    KILO_BYTE_PER_MINUTE("KILO_BYTE_PER_MINUTE"),
    
    KILO_BYTE_PER_SECOND("KILO_BYTE_PER_SECOND"),
    
    KILO_METRE_PER_HOUR("KILO_METRE_PER_HOUR"),
    
    MEBI_BYTE("MEBI_BYTE"),
    
    MEBI_BYTE_PER_HOUR("MEBI_BYTE_PER_HOUR"),
    
    MEBI_BYTE_PER_MINUTE("MEBI_BYTE_PER_MINUTE"),
    
    MEBI_BYTE_PER_SECOND("MEBI_BYTE_PER_SECOND"),
    
    MEGA("MEGA"),
    
    MEGA_BYTE("MEGA_BYTE"),
    
    MEGA_BYTE_PER_HOUR("MEGA_BYTE_PER_HOUR"),
    
    MEGA_BYTE_PER_MINUTE("MEGA_BYTE_PER_MINUTE"),
    
    MEGA_BYTE_PER_SECOND("MEGA_BYTE_PER_SECOND"),
    
    METRE_PER_HOUR("METRE_PER_HOUR"),
    
    METRE_PER_SECOND("METRE_PER_SECOND"),
    
    MICRO_SECOND("MICRO_SECOND"),
    
    MILLION("MILLION"),
    
    MILLI_CORES("MILLI_CORES"),
    
    MILLI_SECOND("MILLI_SECOND"),
    
    MILLI_SECOND_PER_MINUTE("MILLI_SECOND_PER_MINUTE"),
    
    MINUTE("MINUTE"),
    
    MONTH("MONTH"),
    
    MSU("MSU"),
    
    NANO_SECOND("NANO_SECOND"),
    
    NANO_SECOND_PER_MINUTE("NANO_SECOND_PER_MINUTE"),
    
    NOT_APPLICABLE("NOT_APPLICABLE"),
    
    PERCENT("PERCENT"),
    
    PER_HOUR("PER_HOUR"),
    
    PER_MINUTE("PER_MINUTE"),
    
    PER_SECOND("PER_SECOND"),
    
    PIXEL("PIXEL"),
    
    PROMILLE("PROMILLE"),
    
    RATIO("RATIO"),
    
    SECOND("SECOND"),
    
    STATE("STATE"),
    
    UNSPECIFIED("UNSPECIFIED"),
    
    WEEK("WEEK"),
    
    YEAR("YEAR");

    private String value;

    UnitEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static UnitEnum fromValue(String value) {
      for (UnitEnum b : UnitEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_UNIT = "unit";
  private UnitEnum unit;

  public static final String JSON_PROPERTY_UNIT_DISPLAY_NAME = "unitDisplayName";
  private String unitDisplayName;

  public static final String JSON_PROPERTY_ENTITY_ID = "entityId";
  private String entityId;

  public static final String JSON_PROPERTY_MANAGEMENT_ZONES = "managementZones";
  private List<String> managementZones = null;

  public static final String JSON_PROPERTY_CONDITIONS = "conditions";
  private List<Condition> conditions = null;

  public static final String JSON_PROPERTY_DIMENSION_DEFINITION = "dimensionDefinition";
  private DimensionDefinition dimensionDefinition;

  public CalculatedServiceMetric() { 
  }

  public CalculatedServiceMetric metadata(ConfigurationMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConfigurationMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(ConfigurationMetadata metadata) {
    this.metadata = metadata;
  }


  public CalculatedServiceMetric tsmMetricKey(String tsmMetricKey) {
    this.tsmMetricKey = tsmMetricKey;
    return this;
  }

   /**
   * The key of the calculated service metric.
   * @return tsmMetricKey
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The key of the calculated service metric.")
  @JsonProperty(JSON_PROPERTY_TSM_METRIC_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTsmMetricKey() {
    return tsmMetricKey;
  }


  @JsonProperty(JSON_PROPERTY_TSM_METRIC_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTsmMetricKey(String tsmMetricKey) {
    this.tsmMetricKey = tsmMetricKey;
  }


  public CalculatedServiceMetric name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The displayed name of the metric.
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The displayed name of the metric.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public CalculatedServiceMetric enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * The metric is enabled (&#x60;true&#x60;) or disabled (&#x60;false&#x60;).
   * @return enabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The metric is enabled (`true`) or disabled (`false`).")
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public CalculatedServiceMetric ignoreMutedRequests(Boolean ignoreMutedRequests) {
    this.ignoreMutedRequests = ignoreMutedRequests;
    return this;
  }

   /**
   * Metric should (&#x60;true&#x60;) or not (&#x60;false&#x60;) ignore muted requests.
   * @return ignoreMutedRequests
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Metric should (`true`) or not (`false`) ignore muted requests.")
  @JsonProperty(JSON_PROPERTY_IGNORE_MUTED_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIgnoreMutedRequests() {
    return ignoreMutedRequests;
  }


  @JsonProperty(JSON_PROPERTY_IGNORE_MUTED_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIgnoreMutedRequests(Boolean ignoreMutedRequests) {
    this.ignoreMutedRequests = ignoreMutedRequests;
  }


  public CalculatedServiceMetric metricDefinition(CalculatedMetricDefinition metricDefinition) {
    this.metricDefinition = metricDefinition;
    return this;
  }

   /**
   * Get metricDefinition
   * @return metricDefinition
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_METRIC_DEFINITION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CalculatedMetricDefinition getMetricDefinition() {
    return metricDefinition;
  }


  @JsonProperty(JSON_PROPERTY_METRIC_DEFINITION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetricDefinition(CalculatedMetricDefinition metricDefinition) {
    this.metricDefinition = metricDefinition;
  }


  public CalculatedServiceMetric unit(UnitEnum unit) {
    this.unit = unit;
    return this;
  }

   /**
   * The unit of the metric.
   * @return unit
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The unit of the metric.")
  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UnitEnum getUnit() {
    return unit;
  }


  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUnit(UnitEnum unit) {
    this.unit = unit;
  }


  public CalculatedServiceMetric unitDisplayName(String unitDisplayName) {
    this.unitDisplayName = unitDisplayName;
    return this;
  }

   /**
   * The display name of the metric&#39;s unit.    Only applicable when the **unit** parameter is set to &#x60;UNSPECIFIED&#x60;.
   * @return unitDisplayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The display name of the metric's unit.    Only applicable when the **unit** parameter is set to `UNSPECIFIED`.")
  @JsonProperty(JSON_PROPERTY_UNIT_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUnitDisplayName() {
    return unitDisplayName;
  }


  @JsonProperty(JSON_PROPERTY_UNIT_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnitDisplayName(String unitDisplayName) {
    this.unitDisplayName = unitDisplayName;
  }


  public CalculatedServiceMetric entityId(String entityId) {
    this.entityId = entityId;
    return this;
  }

   /**
   * Restricts the metric usage to the specified service.    This field is mutually exclusive with the **managementZones** field.
   * @return entityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Restricts the metric usage to the specified service.    This field is mutually exclusive with the **managementZones** field.")
  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEntityId() {
    return entityId;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }


  public CalculatedServiceMetric managementZones(List<String> managementZones) {
    this.managementZones = managementZones;
    return this;
  }

  public CalculatedServiceMetric addManagementZonesItem(String managementZonesItem) {
    if (this.managementZones == null) {
      this.managementZones = new ArrayList<>();
    }
    this.managementZones.add(managementZonesItem);
    return this;
  }

   /**
   * Restricts the metric usage to specified management zones.    This field is mutually exclusive with the **entityId** field.
   * @return managementZones
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Restricts the metric usage to specified management zones.    This field is mutually exclusive with the **entityId** field.")
  @JsonProperty(JSON_PROPERTY_MANAGEMENT_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getManagementZones() {
    return managementZones;
  }


  @JsonProperty(JSON_PROPERTY_MANAGEMENT_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManagementZones(List<String> managementZones) {
    this.managementZones = managementZones;
  }


  public CalculatedServiceMetric conditions(List<Condition> conditions) {
    this.conditions = conditions;
    return this;
  }

  public CalculatedServiceMetric addConditionsItem(Condition conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * The set of conditions for the metric usage.    **All** the specified conditions must be fulfilled to use the metric.
   * @return conditions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The set of conditions for the metric usage.    **All** the specified conditions must be fulfilled to use the metric.")
  @JsonProperty(JSON_PROPERTY_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Condition> getConditions() {
    return conditions;
  }


  @JsonProperty(JSON_PROPERTY_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConditions(List<Condition> conditions) {
    this.conditions = conditions;
  }


  public CalculatedServiceMetric dimensionDefinition(DimensionDefinition dimensionDefinition) {
    this.dimensionDefinition = dimensionDefinition;
    return this;
  }

   /**
   * Get dimensionDefinition
   * @return dimensionDefinition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DIMENSION_DEFINITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DimensionDefinition getDimensionDefinition() {
    return dimensionDefinition;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSION_DEFINITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensionDefinition(DimensionDefinition dimensionDefinition) {
    this.dimensionDefinition = dimensionDefinition;
  }


  /**
   * Return true if this CalculatedServiceMetric object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CalculatedServiceMetric calculatedServiceMetric = (CalculatedServiceMetric) o;
    return Objects.equals(this.metadata, calculatedServiceMetric.metadata) &&
        Objects.equals(this.tsmMetricKey, calculatedServiceMetric.tsmMetricKey) &&
        Objects.equals(this.name, calculatedServiceMetric.name) &&
        Objects.equals(this.enabled, calculatedServiceMetric.enabled) &&
        Objects.equals(this.ignoreMutedRequests, calculatedServiceMetric.ignoreMutedRequests) &&
        Objects.equals(this.metricDefinition, calculatedServiceMetric.metricDefinition) &&
        Objects.equals(this.unit, calculatedServiceMetric.unit) &&
        Objects.equals(this.unitDisplayName, calculatedServiceMetric.unitDisplayName) &&
        Objects.equals(this.entityId, calculatedServiceMetric.entityId) &&
        Objects.equals(this.managementZones, calculatedServiceMetric.managementZones) &&
        Objects.equals(this.conditions, calculatedServiceMetric.conditions) &&
        Objects.equals(this.dimensionDefinition, calculatedServiceMetric.dimensionDefinition);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metadata, tsmMetricKey, name, enabled, ignoreMutedRequests, metricDefinition, unit, unitDisplayName, entityId, managementZones, conditions, dimensionDefinition);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CalculatedServiceMetric {\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    tsmMetricKey: ").append(toIndentedString(tsmMetricKey)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    ignoreMutedRequests: ").append(toIndentedString(ignoreMutedRequests)).append("\n");
    sb.append("    metricDefinition: ").append(toIndentedString(metricDefinition)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    unitDisplayName: ").append(toIndentedString(unitDisplayName)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    managementZones: ").append(toIndentedString(managementZones)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    dimensionDefinition: ").append(toIndentedString(dimensionDefinition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

