/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.LinkedHashSet;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Configuration of a report subscription.
 */
@ApiModel(description = "Configuration of a report subscription.")
@JsonPropertyOrder({
  ReportSubscriptions.JSON_PROPERTY_SCHEDULE,
  ReportSubscriptions.JSON_PROPERTY_RECIPIENTS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class ReportSubscriptions {
  /**
   * The schedule of the subscription.    * Weekly subscribers receive the report every Monday at midnight.   * Monthly subscribers receive the report on the first Monday of the month at midnight.
   */
  public enum ScheduleEnum {
    MONTH("MONTH"),
    
    WEEK("WEEK");

    private String value;

    ScheduleEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ScheduleEnum fromValue(String value) {
      for (ScheduleEnum b : ScheduleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SCHEDULE = "schedule";
  private ScheduleEnum schedule;

  public static final String JSON_PROPERTY_RECIPIENTS = "recipients";
  private Set<String> recipients = new LinkedHashSet<>();

  public ReportSubscriptions() { 
  }

  public ReportSubscriptions schedule(ScheduleEnum schedule) {
    this.schedule = schedule;
    return this;
  }

   /**
   * The schedule of the subscription.    * Weekly subscribers receive the report every Monday at midnight.   * Monthly subscribers receive the report on the first Monday of the month at midnight.
   * @return schedule
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The schedule of the subscription.    * Weekly subscribers receive the report every Monday at midnight.   * Monthly subscribers receive the report on the first Monday of the month at midnight.")
  @JsonProperty(JSON_PROPERTY_SCHEDULE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ScheduleEnum getSchedule() {
    return schedule;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSchedule(ScheduleEnum schedule) {
    this.schedule = schedule;
  }


  public ReportSubscriptions recipients(Set<String> recipients) {
    this.recipients = recipients;
    return this;
  }

  public ReportSubscriptions addRecipientsItem(String recipientsItem) {
    this.recipients.add(recipientsItem);
    return this;
  }

   /**
   * A list of the recipients.   You can specify email addresses or Dynatrace user IDs here.
   * @return recipients
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A list of the recipients.   You can specify email addresses or Dynatrace user IDs here.")
  @JsonProperty(JSON_PROPERTY_RECIPIENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<String> getRecipients() {
    return recipients;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_RECIPIENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRecipients(Set<String> recipients) {
    this.recipients = recipients;
  }


  /**
   * Return true if this ReportSubscriptions object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportSubscriptions reportSubscriptions = (ReportSubscriptions) o;
    return Objects.equals(this.schedule, reportSubscriptions.schedule) &&
        Objects.equals(this.recipients, reportSubscriptions.recipients);
  }

  @Override
  public int hashCode() {
    return Objects.hash(schedule, recipients);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportSubscriptions {\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    recipients: ").append(toIndentedString(recipients)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

