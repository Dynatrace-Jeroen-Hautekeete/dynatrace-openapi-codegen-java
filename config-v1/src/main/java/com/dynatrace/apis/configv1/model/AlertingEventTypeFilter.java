/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.AlertingCustomEventFilter;
import com.dynatrace.apis.configv1.model.AlertingPredefinedEventFilter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Configuration of the event filter for the alerting profile.   You have two mutually exclusive options:  * Select an event type from the list of the predefined events. Specify it in the **predefinedEventFilter** field.  * Set a rule for custom events. Specify it in the **customEventFilter** field.
 */
@ApiModel(description = "Configuration of the event filter for the alerting profile.   You have two mutually exclusive options:  * Select an event type from the list of the predefined events. Specify it in the **predefinedEventFilter** field.  * Set a rule for custom events. Specify it in the **customEventFilter** field.")
@JsonPropertyOrder({
  AlertingEventTypeFilter.JSON_PROPERTY_PREDEFINED_EVENT_FILTER,
  AlertingEventTypeFilter.JSON_PROPERTY_CUSTOM_EVENT_FILTER
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class AlertingEventTypeFilter {
  public static final String JSON_PROPERTY_PREDEFINED_EVENT_FILTER = "predefinedEventFilter";
  private AlertingPredefinedEventFilter predefinedEventFilter;

  public static final String JSON_PROPERTY_CUSTOM_EVENT_FILTER = "customEventFilter";
  private AlertingCustomEventFilter customEventFilter;

  public AlertingEventTypeFilter() { 
  }

  public AlertingEventTypeFilter predefinedEventFilter(AlertingPredefinedEventFilter predefinedEventFilter) {
    this.predefinedEventFilter = predefinedEventFilter;
    return this;
  }

   /**
   * Get predefinedEventFilter
   * @return predefinedEventFilter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PREDEFINED_EVENT_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AlertingPredefinedEventFilter getPredefinedEventFilter() {
    return predefinedEventFilter;
  }


  @JsonProperty(JSON_PROPERTY_PREDEFINED_EVENT_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPredefinedEventFilter(AlertingPredefinedEventFilter predefinedEventFilter) {
    this.predefinedEventFilter = predefinedEventFilter;
  }


  public AlertingEventTypeFilter customEventFilter(AlertingCustomEventFilter customEventFilter) {
    this.customEventFilter = customEventFilter;
    return this;
  }

   /**
   * Get customEventFilter
   * @return customEventFilter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CUSTOM_EVENT_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AlertingCustomEventFilter getCustomEventFilter() {
    return customEventFilter;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_EVENT_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomEventFilter(AlertingCustomEventFilter customEventFilter) {
    this.customEventFilter = customEventFilter;
  }


  /**
   * Return true if this AlertingEventTypeFilter object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlertingEventTypeFilter alertingEventTypeFilter = (AlertingEventTypeFilter) o;
    return Objects.equals(this.predefinedEventFilter, alertingEventTypeFilter.predefinedEventFilter) &&
        Objects.equals(this.customEventFilter, alertingEventTypeFilter.customEventFilter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(predefinedEventFilter, customEventFilter);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlertingEventTypeFilter {\n");
    sb.append("    predefinedEventFilter: ").append(toIndentedString(predefinedEventFilter)).append("\n");
    sb.append("    customEventFilter: ").append(toIndentedString(customEventFilter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

