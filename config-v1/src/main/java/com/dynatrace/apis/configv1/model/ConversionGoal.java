/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.DestinationDetails;
import com.dynatrace.apis.configv1.model.UserActionDetails;
import com.dynatrace.apis.configv1.model.VisitDurationDetails;
import com.dynatrace.apis.configv1.model.VisitNumActionDetails;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * A conversion goal of the application.
 */
@ApiModel(description = "A conversion goal of the application.")
@JsonPropertyOrder({
  ConversionGoal.JSON_PROPERTY_NAME,
  ConversionGoal.JSON_PROPERTY_ID,
  ConversionGoal.JSON_PROPERTY_TYPE,
  ConversionGoal.JSON_PROPERTY_DESTINATION_DETAILS,
  ConversionGoal.JSON_PROPERTY_USER_ACTION_DETAILS,
  ConversionGoal.JSON_PROPERTY_VISIT_DURATION_DETAILS,
  ConversionGoal.JSON_PROPERTY_VISIT_NUM_ACTION_DETAILS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class ConversionGoal {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  /**
   * The type of the conversion goal.
   */
  public enum TypeEnum {
    DESTINATION("Destination"),
    
    USERACTION("UserAction"),
    
    VISITDURATION("VisitDuration"),
    
    VISITNUMACTIONS("VisitNumActions");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_DESTINATION_DETAILS = "destinationDetails";
  private DestinationDetails destinationDetails;

  public static final String JSON_PROPERTY_USER_ACTION_DETAILS = "userActionDetails";
  private UserActionDetails userActionDetails;

  public static final String JSON_PROPERTY_VISIT_DURATION_DETAILS = "visitDurationDetails";
  private VisitDurationDetails visitDurationDetails;

  public static final String JSON_PROPERTY_VISIT_NUM_ACTION_DETAILS = "visitNumActionDetails";
  private VisitNumActionDetails visitNumActionDetails;

  public ConversionGoal() { 
  }

  public ConversionGoal name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the conversion goal.
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name of the conversion goal.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public ConversionGoal id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of conversion goal.    Omit it while creating a new conversion goal.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of conversion goal.    Omit it while creating a new conversion goal.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public ConversionGoal type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The type of the conversion goal.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of the conversion goal.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public ConversionGoal destinationDetails(DestinationDetails destinationDetails) {
    this.destinationDetails = destinationDetails;
    return this;
  }

   /**
   * Get destinationDetails
   * @return destinationDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DESTINATION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DestinationDetails getDestinationDetails() {
    return destinationDetails;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDestinationDetails(DestinationDetails destinationDetails) {
    this.destinationDetails = destinationDetails;
  }


  public ConversionGoal userActionDetails(UserActionDetails userActionDetails) {
    this.userActionDetails = userActionDetails;
    return this;
  }

   /**
   * Get userActionDetails
   * @return userActionDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_USER_ACTION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UserActionDetails getUserActionDetails() {
    return userActionDetails;
  }


  @JsonProperty(JSON_PROPERTY_USER_ACTION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserActionDetails(UserActionDetails userActionDetails) {
    this.userActionDetails = userActionDetails;
  }


  public ConversionGoal visitDurationDetails(VisitDurationDetails visitDurationDetails) {
    this.visitDurationDetails = visitDurationDetails;
    return this;
  }

   /**
   * Get visitDurationDetails
   * @return visitDurationDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VISIT_DURATION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VisitDurationDetails getVisitDurationDetails() {
    return visitDurationDetails;
  }


  @JsonProperty(JSON_PROPERTY_VISIT_DURATION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisitDurationDetails(VisitDurationDetails visitDurationDetails) {
    this.visitDurationDetails = visitDurationDetails;
  }


  public ConversionGoal visitNumActionDetails(VisitNumActionDetails visitNumActionDetails) {
    this.visitNumActionDetails = visitNumActionDetails;
    return this;
  }

   /**
   * Get visitNumActionDetails
   * @return visitNumActionDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VISIT_NUM_ACTION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VisitNumActionDetails getVisitNumActionDetails() {
    return visitNumActionDetails;
  }


  @JsonProperty(JSON_PROPERTY_VISIT_NUM_ACTION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisitNumActionDetails(VisitNumActionDetails visitNumActionDetails) {
    this.visitNumActionDetails = visitNumActionDetails;
  }


  /**
   * Return true if this ConversionGoal object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversionGoal conversionGoal = (ConversionGoal) o;
    return Objects.equals(this.name, conversionGoal.name) &&
        Objects.equals(this.id, conversionGoal.id) &&
        Objects.equals(this.type, conversionGoal.type) &&
        Objects.equals(this.destinationDetails, conversionGoal.destinationDetails) &&
        Objects.equals(this.userActionDetails, conversionGoal.userActionDetails) &&
        Objects.equals(this.visitDurationDetails, conversionGoal.visitDurationDetails) &&
        Objects.equals(this.visitNumActionDetails, conversionGoal.visitNumActionDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, id, type, destinationDetails, userActionDetails, visitDurationDetails, visitNumActionDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversionGoal {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    destinationDetails: ").append(toIndentedString(destinationDetails)).append("\n");
    sb.append("    userActionDetails: ").append(toIndentedString(userActionDetails)).append("\n");
    sb.append("    visitDurationDetails: ").append(toIndentedString(visitDurationDetails)).append("\n");
    sb.append("    visitNumActionDetails: ").append(toIndentedString(visitNumActionDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

