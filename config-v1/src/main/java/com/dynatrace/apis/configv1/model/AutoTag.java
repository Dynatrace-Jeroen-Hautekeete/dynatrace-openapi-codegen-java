/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.AutoTagRule;
import com.dynatrace.apis.configv1.model.ConfigurationMetadata;
import com.dynatrace.apis.configv1.model.EntitySelectorBasedAutoTagRule;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Configuration of an auto-tag. It defines the conditions of tag usage and the tag value.
 */
@ApiModel(description = "Configuration of an auto-tag. It defines the conditions of tag usage and the tag value.")
@JsonPropertyOrder({
  AutoTag.JSON_PROPERTY_METADATA,
  AutoTag.JSON_PROPERTY_ID,
  AutoTag.JSON_PROPERTY_NAME,
  AutoTag.JSON_PROPERTY_DESCRIPTION,
  AutoTag.JSON_PROPERTY_RULES,
  AutoTag.JSON_PROPERTY_ENTITY_SELECTOR_BASED_RULES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class AutoTag {
  public static final String JSON_PROPERTY_METADATA = "metadata";
  private ConfigurationMetadata metadata;

  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_RULES = "rules";
  private List<AutoTagRule> rules = null;

  public static final String JSON_PROPERTY_ENTITY_SELECTOR_BASED_RULES = "entitySelectorBasedRules";
  private List<EntitySelectorBasedAutoTagRule> entitySelectorBasedRules = null;

  public AutoTag() { 
  }

  public AutoTag metadata(ConfigurationMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConfigurationMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(ConfigurationMetadata metadata) {
    this.metadata = metadata;
  }


  public AutoTag id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of the auto-tag.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "12345678-abcd-1234-abcd-1234567890ab", value = "The ID of the auto-tag.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }


  public AutoTag name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the auto-tag, which is applied to entities.   Additionally you can specify a **valueFormat** in the tag rule. In that case the tag is used in the &#x60;name:valueFormat&#x60; format.   For example you can extend the &#x60;Infrastructure&#x60; tag to &#x60;Infrastructure:Windows&#x60; and &#x60;Infrastructure:Linux&#x60;.
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name of the auto-tag, which is applied to entities.   Additionally you can specify a **valueFormat** in the tag rule. In that case the tag is used in the `name:valueFormat` format.   For example you can extend the `Infrastructure` tag to `Infrastructure:Windows` and `Infrastructure:Linux`.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public AutoTag description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description of the auto-tag.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of the auto-tag.")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public AutoTag rules(List<AutoTagRule> rules) {
    this.rules = rules;
    return this;
  }

  public AutoTag addRulesItem(AutoTagRule rulesItem) {
    if (this.rules == null) {
      this.rules = new ArrayList<>();
    }
    this.rules.add(rulesItem);
    return this;
  }

   /**
   * The list of rules for tag usage.   When there are multiple rules, the OR logic applies.
   * @return rules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of rules for tag usage.   When there are multiple rules, the OR logic applies.")
  @JsonProperty(JSON_PROPERTY_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AutoTagRule> getRules() {
    return rules;
  }


  @JsonProperty(JSON_PROPERTY_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRules(List<AutoTagRule> rules) {
    this.rules = rules;
  }


  public AutoTag entitySelectorBasedRules(List<EntitySelectorBasedAutoTagRule> entitySelectorBasedRules) {
    this.entitySelectorBasedRules = entitySelectorBasedRules;
    return this;
  }

  public AutoTag addEntitySelectorBasedRulesItem(EntitySelectorBasedAutoTagRule entitySelectorBasedRulesItem) {
    if (this.entitySelectorBasedRules == null) {
      this.entitySelectorBasedRules = new ArrayList<>();
    }
    this.entitySelectorBasedRules.add(entitySelectorBasedRulesItem);
    return this;
  }

   /**
   * A list of entity-selector based rules for auto tagging usage.  If several rules are specified, the **OR** logic applies.
   * @return entitySelectorBasedRules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of entity-selector based rules for auto tagging usage.  If several rules are specified, the **OR** logic applies.")
  @JsonProperty(JSON_PROPERTY_ENTITY_SELECTOR_BASED_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EntitySelectorBasedAutoTagRule> getEntitySelectorBasedRules() {
    return entitySelectorBasedRules;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_SELECTOR_BASED_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntitySelectorBasedRules(List<EntitySelectorBasedAutoTagRule> entitySelectorBasedRules) {
    this.entitySelectorBasedRules = entitySelectorBasedRules;
  }


  /**
   * Return true if this AutoTag object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoTag autoTag = (AutoTag) o;
    return Objects.equals(this.metadata, autoTag.metadata) &&
        Objects.equals(this.id, autoTag.id) &&
        Objects.equals(this.name, autoTag.name) &&
        Objects.equals(this.description, autoTag.description) &&
        Objects.equals(this.rules, autoTag.rules) &&
        Objects.equals(this.entitySelectorBasedRules, autoTag.entitySelectorBasedRules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metadata, id, name, description, rules, entitySelectorBasedRules);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoTag {\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("    entitySelectorBasedRules: ").append(toIndentedString(entitySelectorBasedRules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

