/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.ConfigurationMetadata;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Global configuration for data privacy and security.
 */
@ApiModel(description = "Global configuration for data privacy and security.")
@JsonPropertyOrder({
  DataPrivacyAndSecurity.JSON_PROPERTY_METADATA,
  DataPrivacyAndSecurity.JSON_PROPERTY_MASK_IP_ADDRESSES_AND_GPS_COORDINATES,
  DataPrivacyAndSecurity.JSON_PROPERTY_MASK_USER_ACTION_NAMES,
  DataPrivacyAndSecurity.JSON_PROPERTY_MASK_PERSONAL_DATA_IN_URIS,
  DataPrivacyAndSecurity.JSON_PROPERTY_LOG_AUDIT_EVENTS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class DataPrivacyAndSecurity {
  public static final String JSON_PROPERTY_METADATA = "metadata";
  private ConfigurationMetadata metadata;

  public static final String JSON_PROPERTY_MASK_IP_ADDRESSES_AND_GPS_COORDINATES = "maskIpAddressesAndGpsCoordinates";
  private Boolean maskIpAddressesAndGpsCoordinates;

  public static final String JSON_PROPERTY_MASK_USER_ACTION_NAMES = "maskUserActionNames";
  private Boolean maskUserActionNames;

  public static final String JSON_PROPERTY_MASK_PERSONAL_DATA_IN_URIS = "maskPersonalDataInUris";
  private Boolean maskPersonalDataInUris;

  public static final String JSON_PROPERTY_LOG_AUDIT_EVENTS = "logAuditEvents";
  private Boolean logAuditEvents;

  public DataPrivacyAndSecurity() { 
  }

  public DataPrivacyAndSecurity metadata(ConfigurationMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConfigurationMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(ConfigurationMetadata metadata) {
    this.metadata = metadata;
  }


  public DataPrivacyAndSecurity maskIpAddressesAndGpsCoordinates(Boolean maskIpAddressesAndGpsCoordinates) {
    this.maskIpAddressesAndGpsCoordinates = maskIpAddressesAndGpsCoordinates;
    return this;
  }

   /**
   * Masking of IP addresses and GPS coordinates is enabled (&#x60;true&#x60;) or disabled (&#x60;false&#x60;).
   * @return maskIpAddressesAndGpsCoordinates
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Masking of IP addresses and GPS coordinates is enabled (`true`) or disabled (`false`).")
  @JsonProperty(JSON_PROPERTY_MASK_IP_ADDRESSES_AND_GPS_COORDINATES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getMaskIpAddressesAndGpsCoordinates() {
    return maskIpAddressesAndGpsCoordinates;
  }


  @JsonProperty(JSON_PROPERTY_MASK_IP_ADDRESSES_AND_GPS_COORDINATES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMaskIpAddressesAndGpsCoordinates(Boolean maskIpAddressesAndGpsCoordinates) {
    this.maskIpAddressesAndGpsCoordinates = maskIpAddressesAndGpsCoordinates;
  }


  public DataPrivacyAndSecurity maskUserActionNames(Boolean maskUserActionNames) {
    this.maskUserActionNames = maskUserActionNames;
    return this;
  }

   /**
   * Masking of user action names is enabled (&#x60;true&#x60;) or disabled (&#x60;false&#x60;).   This masking is available only for web applications.
   * @return maskUserActionNames
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Masking of user action names is enabled (`true`) or disabled (`false`).   This masking is available only for web applications.")
  @JsonProperty(JSON_PROPERTY_MASK_USER_ACTION_NAMES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getMaskUserActionNames() {
    return maskUserActionNames;
  }


  @JsonProperty(JSON_PROPERTY_MASK_USER_ACTION_NAMES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMaskUserActionNames(Boolean maskUserActionNames) {
    this.maskUserActionNames = maskUserActionNames;
  }


  public DataPrivacyAndSecurity maskPersonalDataInUris(Boolean maskPersonalDataInUris) {
    this.maskPersonalDataInUris = maskPersonalDataInUris;
    return this;
  }

   /**
   * Masking of personal data in URIs is enabled (&#x60;true&#x60;) or disabled (&#x60;false&#x60;).
   * @return maskPersonalDataInUris
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Masking of personal data in URIs is enabled (`true`) or disabled (`false`).")
  @JsonProperty(JSON_PROPERTY_MASK_PERSONAL_DATA_IN_URIS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getMaskPersonalDataInUris() {
    return maskPersonalDataInUris;
  }


  @JsonProperty(JSON_PROPERTY_MASK_PERSONAL_DATA_IN_URIS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMaskPersonalDataInUris(Boolean maskPersonalDataInUris) {
    this.maskPersonalDataInUris = maskPersonalDataInUris;
  }


  public DataPrivacyAndSecurity logAuditEvents(Boolean logAuditEvents) {
    this.logAuditEvents = logAuditEvents;
    return this;
  }

   /**
   * The audit logging is enabled (&#x60;true&#x60;) or disabled (&#x60;false&#x60;).
   * @return logAuditEvents
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The audit logging is enabled (`true`) or disabled (`false`).")
  @JsonProperty(JSON_PROPERTY_LOG_AUDIT_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLogAuditEvents() {
    return logAuditEvents;
  }


  @JsonProperty(JSON_PROPERTY_LOG_AUDIT_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogAuditEvents(Boolean logAuditEvents) {
    this.logAuditEvents = logAuditEvents;
  }


  /**
   * Return true if this DataPrivacyAndSecurity object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataPrivacyAndSecurity dataPrivacyAndSecurity = (DataPrivacyAndSecurity) o;
    return Objects.equals(this.metadata, dataPrivacyAndSecurity.metadata) &&
        Objects.equals(this.maskIpAddressesAndGpsCoordinates, dataPrivacyAndSecurity.maskIpAddressesAndGpsCoordinates) &&
        Objects.equals(this.maskUserActionNames, dataPrivacyAndSecurity.maskUserActionNames) &&
        Objects.equals(this.maskPersonalDataInUris, dataPrivacyAndSecurity.maskPersonalDataInUris) &&
        Objects.equals(this.logAuditEvents, dataPrivacyAndSecurity.logAuditEvents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metadata, maskIpAddressesAndGpsCoordinates, maskUserActionNames, maskPersonalDataInUris, logAuditEvents);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataPrivacyAndSecurity {\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    maskIpAddressesAndGpsCoordinates: ").append(toIndentedString(maskIpAddressesAndGpsCoordinates)).append("\n");
    sb.append("    maskUserActionNames: ").append(toIndentedString(maskUserActionNames)).append("\n");
    sb.append("    maskPersonalDataInUris: ").append(toIndentedString(maskPersonalDataInUris)).append("\n");
    sb.append("    logAuditEvents: ").append(toIndentedString(logAuditEvents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

