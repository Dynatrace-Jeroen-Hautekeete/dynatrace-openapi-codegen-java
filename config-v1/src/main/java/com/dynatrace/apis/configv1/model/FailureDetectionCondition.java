/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.FdcPredicate;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The condition of the failure detection rule.
 */
@ApiModel(description = "The condition of the failure detection rule.")
@JsonPropertyOrder({
  FailureDetectionCondition.JSON_PROPERTY_ATTRIBUTE,
  FailureDetectionCondition.JSON_PROPERTY_PREDICATE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class FailureDetectionCondition {
  /**
   * The attribute to be checked.
   */
  public enum AttributeEnum {
    PG_NAME("PG_NAME"),
    
    PG_TAG("PG_TAG"),
    
    SERVICE_MANAGEMENT_ZONES("SERVICE_MANAGEMENT_ZONES"),
    
    SERVICE_NAME("SERVICE_NAME"),
    
    SERVICE_SERVICE_TYPE("SERVICE_SERVICE_TYPE"),
    
    SERVICE_TAG("SERVICE_TAG");

    private String value;

    AttributeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AttributeEnum fromValue(String value) {
      for (AttributeEnum b : AttributeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ATTRIBUTE = "attribute";
  private AttributeEnum attribute;

  public static final String JSON_PROPERTY_PREDICATE = "predicate";
  private FdcPredicate predicate;

  public FailureDetectionCondition() { 
  }

  public FailureDetectionCondition attribute(AttributeEnum attribute) {
    this.attribute = attribute;
    return this;
  }

   /**
   * The attribute to be checked.
   * @return attribute
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The attribute to be checked.")
  @JsonProperty(JSON_PROPERTY_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AttributeEnum getAttribute() {
    return attribute;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttribute(AttributeEnum attribute) {
    this.attribute = attribute;
  }


  public FailureDetectionCondition predicate(FdcPredicate predicate) {
    this.predicate = predicate;
    return this;
  }

   /**
   * Get predicate
   * @return predicate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PREDICATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FdcPredicate getPredicate() {
    return predicate;
  }


  @JsonProperty(JSON_PROPERTY_PREDICATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPredicate(FdcPredicate predicate) {
    this.predicate = predicate;
  }


  /**
   * Return true if this FailureDetectionCondition object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FailureDetectionCondition failureDetectionCondition = (FailureDetectionCondition) o;
    return Objects.equals(this.attribute, failureDetectionCondition.attribute) &&
        Objects.equals(this.predicate, failureDetectionCondition.predicate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attribute, predicate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FailureDetectionCondition {\n");
    sb.append("    attribute: ").append(toIndentedString(attribute)).append("\n");
    sb.append("    predicate: ").append(toIndentedString(predicate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

