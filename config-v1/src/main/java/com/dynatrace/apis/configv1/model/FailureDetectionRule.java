/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.FailureDetectionCondition;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Configuration of the failure detection rule.
 */
@ApiModel(description = "Configuration of the failure detection rule.")
@JsonPropertyOrder({
  FailureDetectionRule.JSON_PROPERTY_ID,
  FailureDetectionRule.JSON_PROPERTY_NAME,
  FailureDetectionRule.JSON_PROPERTY_DESCRIPTION,
  FailureDetectionRule.JSON_PROPERTY_ENABLED,
  FailureDetectionRule.JSON_PROPERTY_FDP_ID,
  FailureDetectionRule.JSON_PROPERTY_CONDITIONS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class FailureDetectionRule {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_FDP_ID = "fdpId";
  private String fdpId;

  public static final String JSON_PROPERTY_CONDITIONS = "conditions";
  private List<FailureDetectionCondition> conditions = new ArrayList<>();

  public FailureDetectionRule() { 
  }

  public FailureDetectionRule id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of the rule.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the rule.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public FailureDetectionRule name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The display name of the rule.   The length of the name is limited to 150 characters.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The display name of the rule.   The length of the name is limited to 150 characters.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public FailureDetectionRule description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A short description of the rule.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A short description of the rule.")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public FailureDetectionRule enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * The rule is enabled (&#x60;true&#x60;) or disabled (&#x60;false&#x60;).
   * @return enabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The rule is enabled (`true`) or disabled (`false`).")
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public FailureDetectionRule fdpId(String fdpId) {
    this.fdpId = fdpId;
    return this;
  }

   /**
   * The failure detection parameter (FDP) set of the rule.   Specify the ID of the set here. The FDP set must exist at the time of rule creation.
   * @return fdpId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The failure detection parameter (FDP) set of the rule.   Specify the ID of the set here. The FDP set must exist at the time of rule creation.")
  @JsonProperty(JSON_PROPERTY_FDP_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFdpId() {
    return fdpId;
  }


  @JsonProperty(JSON_PROPERTY_FDP_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFdpId(String fdpId) {
    this.fdpId = fdpId;
  }


  public FailureDetectionRule conditions(List<FailureDetectionCondition> conditions) {
    this.conditions = conditions;
    return this;
  }

  public FailureDetectionRule addConditionsItem(FailureDetectionCondition conditionsItem) {
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * A list of conditions of the rule.   The rule applies when **all** conditions are fulfilled.
   * @return conditions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A list of conditions of the rule.   The rule applies when **all** conditions are fulfilled.")
  @JsonProperty(JSON_PROPERTY_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<FailureDetectionCondition> getConditions() {
    return conditions;
  }


  @JsonProperty(JSON_PROPERTY_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConditions(List<FailureDetectionCondition> conditions) {
    this.conditions = conditions;
  }


  /**
   * Return true if this FailureDetectionRule object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FailureDetectionRule failureDetectionRule = (FailureDetectionRule) o;
    return Objects.equals(this.id, failureDetectionRule.id) &&
        Objects.equals(this.name, failureDetectionRule.name) &&
        Objects.equals(this.description, failureDetectionRule.description) &&
        Objects.equals(this.enabled, failureDetectionRule.enabled) &&
        Objects.equals(this.fdpId, failureDetectionRule.fdpId) &&
        Objects.equals(this.conditions, failureDetectionRule.conditions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, enabled, fdpId, conditions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FailureDetectionRule {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    fdpId: ").append(toIndentedString(fdpId)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

