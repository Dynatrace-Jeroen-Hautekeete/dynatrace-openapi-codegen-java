/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.TagFilter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.LinkedHashSet;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Configuration of the tag filtering of the alerting profile.
 */
@ApiModel(description = "Configuration of the tag filtering of the alerting profile.")
@JsonPropertyOrder({
  AlertingProfileTagFilter.JSON_PROPERTY_INCLUDE_MODE,
  AlertingProfileTagFilter.JSON_PROPERTY_TAG_FILTERS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class AlertingProfileTagFilter {
  /**
   * The filtering mode:  * &#x60;INCLUDE_ANY&#x60;: The rule applies to monitored entities that have at least one of the specified tags. You can specify up to 100 tags.  * &#x60;INCLUDE_ALL&#x60;: The rule applies to monitored entities that have **all** of the specified tags. You can specify up to 10 tags.  * &#x60;NONE&#x60;: The rule applies to all monitored entities.
   */
  public enum IncludeModeEnum {
    INCLUDE_ALL("INCLUDE_ALL"),
    
    INCLUDE_ANY("INCLUDE_ANY"),
    
    NONE("NONE");

    private String value;

    IncludeModeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static IncludeModeEnum fromValue(String value) {
      for (IncludeModeEnum b : IncludeModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_INCLUDE_MODE = "includeMode";
  private IncludeModeEnum includeMode;

  public static final String JSON_PROPERTY_TAG_FILTERS = "tagFilters";
  private Set<TagFilter> tagFilters = null;

  public AlertingProfileTagFilter() { 
  }

  public AlertingProfileTagFilter includeMode(IncludeModeEnum includeMode) {
    this.includeMode = includeMode;
    return this;
  }

   /**
   * The filtering mode:  * &#x60;INCLUDE_ANY&#x60;: The rule applies to monitored entities that have at least one of the specified tags. You can specify up to 100 tags.  * &#x60;INCLUDE_ALL&#x60;: The rule applies to monitored entities that have **all** of the specified tags. You can specify up to 10 tags.  * &#x60;NONE&#x60;: The rule applies to all monitored entities.
   * @return includeMode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The filtering mode:  * `INCLUDE_ANY`: The rule applies to monitored entities that have at least one of the specified tags. You can specify up to 100 tags.  * `INCLUDE_ALL`: The rule applies to monitored entities that have **all** of the specified tags. You can specify up to 10 tags.  * `NONE`: The rule applies to all monitored entities.")
  @JsonProperty(JSON_PROPERTY_INCLUDE_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public IncludeModeEnum getIncludeMode() {
    return includeMode;
  }


  @JsonProperty(JSON_PROPERTY_INCLUDE_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIncludeMode(IncludeModeEnum includeMode) {
    this.includeMode = includeMode;
  }


  public AlertingProfileTagFilter tagFilters(Set<TagFilter> tagFilters) {
    this.tagFilters = tagFilters;
    return this;
  }

  public AlertingProfileTagFilter addTagFiltersItem(TagFilter tagFiltersItem) {
    if (this.tagFilters == null) {
      this.tagFilters = new LinkedHashSet<>();
    }
    this.tagFilters.add(tagFiltersItem);
    return this;
  }

   /**
   * A list of required tags.
   * @return tagFilters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of required tags.")
  @JsonProperty(JSON_PROPERTY_TAG_FILTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<TagFilter> getTagFilters() {
    return tagFilters;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_TAG_FILTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTagFilters(Set<TagFilter> tagFilters) {
    this.tagFilters = tagFilters;
  }


  /**
   * Return true if this AlertingProfileTagFilter object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlertingProfileTagFilter alertingProfileTagFilter = (AlertingProfileTagFilter) o;
    return Objects.equals(this.includeMode, alertingProfileTagFilter.includeMode) &&
        Objects.equals(this.tagFilters, alertingProfileTagFilter.tagFilters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(includeMode, tagFilters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlertingProfileTagFilter {\n");
    sb.append("    includeMode: ").append(toIndentedString(includeMode)).append("\n");
    sb.append("    tagFilters: ").append(toIndentedString(tagFilters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

