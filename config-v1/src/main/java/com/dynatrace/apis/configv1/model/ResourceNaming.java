/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.ConfigurationMetadata;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The resource naming rule.
 */
@ApiModel(description = "The resource naming rule.")
@JsonPropertyOrder({
  ResourceNaming.JSON_PROPERTY_METADATA,
  ResourceNaming.JSON_PROPERTY_IMAGE,
  ResourceNaming.JSON_PROPERTY_BINARY
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class ResourceNaming {
  public static final String JSON_PROPERTY_METADATA = "metadata";
  private ConfigurationMetadata metadata;

  public static final String JSON_PROPERTY_IMAGE = "image";
  private List<String> image = new ArrayList<>();

  public static final String JSON_PROPERTY_BINARY = "binary";
  private List<String> binary = new ArrayList<>();

  public ResourceNaming() { 
  }

  public ResourceNaming metadata(ConfigurationMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConfigurationMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(ConfigurationMetadata metadata) {
    this.metadata = metadata;
  }


  public ResourceNaming image(List<String> image) {
    this.image = image;
    return this;
  }

  public ResourceNaming addImageItem(String imageItem) {
    this.image.add(imageItem);
    return this;
  }

   /**
   * The list of image extensions that will be renamed to &#x60;Image&#x60;.
   * @return image
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The list of image extensions that will be renamed to `Image`.")
  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getImage() {
    return image;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setImage(List<String> image) {
    this.image = image;
  }


  public ResourceNaming binary(List<String> binary) {
    this.binary = binary;
    return this;
  }

  public ResourceNaming addBinaryItem(String binaryItem) {
    this.binary.add(binaryItem);
    return this;
  }

   /**
   * The list of binary extensions that will be renamed to &#x60;Binary&#x60;.
   * @return binary
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The list of binary extensions that will be renamed to `Binary`.")
  @JsonProperty(JSON_PROPERTY_BINARY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getBinary() {
    return binary;
  }


  @JsonProperty(JSON_PROPERTY_BINARY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBinary(List<String> binary) {
    this.binary = binary;
  }


  /**
   * Return true if this ResourceNaming object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceNaming resourceNaming = (ResourceNaming) o;
    return Objects.equals(this.metadata, resourceNaming.metadata) &&
        Objects.equals(this.image, resourceNaming.image) &&
        Objects.equals(this.binary, resourceNaming.binary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metadata, image, binary);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceNaming {\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    binary: ").append(toIndentedString(binary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

