/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Settings for resource timings capture.
 */
@ApiModel(description = "Settings for resource timings capture.")
@JsonPropertyOrder({
  ResourceTimingSettings.JSON_PROPERTY_W3C_RESOURCE_TIMINGS,
  ResourceTimingSettings.JSON_PROPERTY_NON_W3C_RESOURCE_TIMINGS,
  ResourceTimingSettings.JSON_PROPERTY_NON_W3C_RESOURCE_TIMINGS_INSTRUMENTATION_DELAY,
  ResourceTimingSettings.JSON_PROPERTY_RESOURCE_TIMING_CAPTURE_TYPE,
  ResourceTimingSettings.JSON_PROPERTY_RESOURCE_TIMINGS_DOMAIN_LIMIT
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class ResourceTimingSettings {
  public static final String JSON_PROPERTY_W3C_RESOURCE_TIMINGS = "w3cResourceTimings";
  private Boolean w3cResourceTimings;

  public static final String JSON_PROPERTY_NON_W3C_RESOURCE_TIMINGS = "nonW3cResourceTimings";
  private Boolean nonW3cResourceTimings;

  public static final String JSON_PROPERTY_NON_W3C_RESOURCE_TIMINGS_INSTRUMENTATION_DELAY = "nonW3cResourceTimingsInstrumentationDelay";
  private Integer nonW3cResourceTimingsInstrumentationDelay;

  /**
   * Defines how detailed resource timings are captured.  Only effective if **w3cResourceTimings** or **nonW3cResourceTimings** is enabled.
   */
  public enum ResourceTimingCaptureTypeEnum {
    ALL_SUMMARIES("CAPTURE_ALL_SUMMARIES"),
    
    FULL_DETAILS("CAPTURE_FULL_DETAILS"),
    
    LIMITED_SUMMARIES("CAPTURE_LIMITED_SUMMARIES");

    private String value;

    ResourceTimingCaptureTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ResourceTimingCaptureTypeEnum fromValue(String value) {
      for (ResourceTimingCaptureTypeEnum b : ResourceTimingCaptureTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RESOURCE_TIMING_CAPTURE_TYPE = "resourceTimingCaptureType";
  private ResourceTimingCaptureTypeEnum resourceTimingCaptureType;

  public static final String JSON_PROPERTY_RESOURCE_TIMINGS_DOMAIN_LIMIT = "resourceTimingsDomainLimit";
  private Integer resourceTimingsDomainLimit;

  public ResourceTimingSettings() { 
  }

  public ResourceTimingSettings w3cResourceTimings(Boolean w3cResourceTimings) {
    this.w3cResourceTimings = w3cResourceTimings;
    return this;
  }

   /**
   * W3C resource timings for third party/CDN enabled/disabled.
   * @return w3cResourceTimings
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "W3C resource timings for third party/CDN enabled/disabled.")
  @JsonProperty(JSON_PROPERTY_W3C_RESOURCE_TIMINGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getW3cResourceTimings() {
    return w3cResourceTimings;
  }


  @JsonProperty(JSON_PROPERTY_W3C_RESOURCE_TIMINGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setW3cResourceTimings(Boolean w3cResourceTimings) {
    this.w3cResourceTimings = w3cResourceTimings;
  }


  public ResourceTimingSettings nonW3cResourceTimings(Boolean nonW3cResourceTimings) {
    this.nonW3cResourceTimings = nonW3cResourceTimings;
    return this;
  }

   /**
   * Timing for JavaScript files and images on non-W3C supported browsers enabled/disabled.
   * @return nonW3cResourceTimings
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Timing for JavaScript files and images on non-W3C supported browsers enabled/disabled.")
  @JsonProperty(JSON_PROPERTY_NON_W3C_RESOURCE_TIMINGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getNonW3cResourceTimings() {
    return nonW3cResourceTimings;
  }


  @JsonProperty(JSON_PROPERTY_NON_W3C_RESOURCE_TIMINGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNonW3cResourceTimings(Boolean nonW3cResourceTimings) {
    this.nonW3cResourceTimings = nonW3cResourceTimings;
  }


  public ResourceTimingSettings nonW3cResourceTimingsInstrumentationDelay(Integer nonW3cResourceTimingsInstrumentationDelay) {
    this.nonW3cResourceTimingsInstrumentationDelay = nonW3cResourceTimingsInstrumentationDelay;
    return this;
  }

   /**
   * Instrumentation delay for monitoring resource and image resource impact in browsers that don&#39;t offer W3C resource timings.   Valid values range from 0 to 9999.  Only effective if **nonW3cResourceTimings** is enabled.
   * minimum: 0
   * maximum: 9999
   * @return nonW3cResourceTimingsInstrumentationDelay
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Instrumentation delay for monitoring resource and image resource impact in browsers that don't offer W3C resource timings.   Valid values range from 0 to 9999.  Only effective if **nonW3cResourceTimings** is enabled.")
  @JsonProperty(JSON_PROPERTY_NON_W3C_RESOURCE_TIMINGS_INSTRUMENTATION_DELAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getNonW3cResourceTimingsInstrumentationDelay() {
    return nonW3cResourceTimingsInstrumentationDelay;
  }


  @JsonProperty(JSON_PROPERTY_NON_W3C_RESOURCE_TIMINGS_INSTRUMENTATION_DELAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNonW3cResourceTimingsInstrumentationDelay(Integer nonW3cResourceTimingsInstrumentationDelay) {
    this.nonW3cResourceTimingsInstrumentationDelay = nonW3cResourceTimingsInstrumentationDelay;
  }


  public ResourceTimingSettings resourceTimingCaptureType(ResourceTimingCaptureTypeEnum resourceTimingCaptureType) {
    this.resourceTimingCaptureType = resourceTimingCaptureType;
    return this;
  }

   /**
   * Defines how detailed resource timings are captured.  Only effective if **w3cResourceTimings** or **nonW3cResourceTimings** is enabled.
   * @return resourceTimingCaptureType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines how detailed resource timings are captured.  Only effective if **w3cResourceTimings** or **nonW3cResourceTimings** is enabled.")
  @JsonProperty(JSON_PROPERTY_RESOURCE_TIMING_CAPTURE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ResourceTimingCaptureTypeEnum getResourceTimingCaptureType() {
    return resourceTimingCaptureType;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE_TIMING_CAPTURE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResourceTimingCaptureType(ResourceTimingCaptureTypeEnum resourceTimingCaptureType) {
    this.resourceTimingCaptureType = resourceTimingCaptureType;
  }


  public ResourceTimingSettings resourceTimingsDomainLimit(Integer resourceTimingsDomainLimit) {
    this.resourceTimingsDomainLimit = resourceTimingsDomainLimit;
    return this;
  }

   /**
   * Limits the number of domains for which W3C resource timings are captured.  Only effective if **resourceTimingCaptureType** is &#x60;CAPTURE_LIMITED_SUMMARIES&#x60;.
   * @return resourceTimingsDomainLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Limits the number of domains for which W3C resource timings are captured.  Only effective if **resourceTimingCaptureType** is `CAPTURE_LIMITED_SUMMARIES`.")
  @JsonProperty(JSON_PROPERTY_RESOURCE_TIMINGS_DOMAIN_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getResourceTimingsDomainLimit() {
    return resourceTimingsDomainLimit;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE_TIMINGS_DOMAIN_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResourceTimingsDomainLimit(Integer resourceTimingsDomainLimit) {
    this.resourceTimingsDomainLimit = resourceTimingsDomainLimit;
  }


  /**
   * Return true if this ResourceTimingSettings object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceTimingSettings resourceTimingSettings = (ResourceTimingSettings) o;
    return Objects.equals(this.w3cResourceTimings, resourceTimingSettings.w3cResourceTimings) &&
        Objects.equals(this.nonW3cResourceTimings, resourceTimingSettings.nonW3cResourceTimings) &&
        Objects.equals(this.nonW3cResourceTimingsInstrumentationDelay, resourceTimingSettings.nonW3cResourceTimingsInstrumentationDelay) &&
        Objects.equals(this.resourceTimingCaptureType, resourceTimingSettings.resourceTimingCaptureType) &&
        Objects.equals(this.resourceTimingsDomainLimit, resourceTimingSettings.resourceTimingsDomainLimit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(w3cResourceTimings, nonW3cResourceTimings, nonW3cResourceTimingsInstrumentationDelay, resourceTimingCaptureType, resourceTimingsDomainLimit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceTimingSettings {\n");
    sb.append("    w3cResourceTimings: ").append(toIndentedString(w3cResourceTimings)).append("\n");
    sb.append("    nonW3cResourceTimings: ").append(toIndentedString(nonW3cResourceTimings)).append("\n");
    sb.append("    nonW3cResourceTimingsInstrumentationDelay: ").append(toIndentedString(nonW3cResourceTimingsInstrumentationDelay)).append("\n");
    sb.append("    resourceTimingCaptureType: ").append(toIndentedString(resourceTimingCaptureType)).append("\n");
    sb.append("    resourceTimingsDomainLimit: ").append(toIndentedString(resourceTimingsDomainLimit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

