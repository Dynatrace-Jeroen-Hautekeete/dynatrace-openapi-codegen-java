/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.SessionReplayContentMaskingSettings;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Data privacy settings for Session Replay.
 */
@ApiModel(description = "Data privacy settings for Session Replay.")
@JsonPropertyOrder({
  SessionReplayDataPrivacySettings.JSON_PROPERTY_OPT_IN_MODE_ENABLED,
  SessionReplayDataPrivacySettings.JSON_PROPERTY_URL_EXCLUSION_RULES,
  SessionReplayDataPrivacySettings.JSON_PROPERTY_CONTENT_MASKING_SETTINGS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class SessionReplayDataPrivacySettings {
  public static final String JSON_PROPERTY_OPT_IN_MODE_ENABLED = "optInModeEnabled";
  private Boolean optInModeEnabled;

  public static final String JSON_PROPERTY_URL_EXCLUSION_RULES = "urlExclusionRules";
  private List<String> urlExclusionRules = null;

  public static final String JSON_PROPERTY_CONTENT_MASKING_SETTINGS = "contentMaskingSettings";
  private SessionReplayContentMaskingSettings contentMaskingSettings;

  public SessionReplayDataPrivacySettings() { 
  }

  public SessionReplayDataPrivacySettings optInModeEnabled(Boolean optInModeEnabled) {
    this.optInModeEnabled = optInModeEnabled;
    return this;
  }

   /**
   * If &#x60;true&#x60;, session recording is disabled until JavaScriptAPI &#x60;dtrum.enableSessionReplay()&#x60; is called.
   * @return optInModeEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If `true`, session recording is disabled until JavaScriptAPI `dtrum.enableSessionReplay()` is called.")
  @JsonProperty(JSON_PROPERTY_OPT_IN_MODE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOptInModeEnabled() {
    return optInModeEnabled;
  }


  @JsonProperty(JSON_PROPERTY_OPT_IN_MODE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptInModeEnabled(Boolean optInModeEnabled) {
    this.optInModeEnabled = optInModeEnabled;
  }


  public SessionReplayDataPrivacySettings urlExclusionRules(List<String> urlExclusionRules) {
    this.urlExclusionRules = urlExclusionRules;
    return this;
  }

  public SessionReplayDataPrivacySettings addUrlExclusionRulesItem(String urlExclusionRulesItem) {
    if (this.urlExclusionRules == null) {
      this.urlExclusionRules = new ArrayList<>();
    }
    this.urlExclusionRules.add(urlExclusionRulesItem);
    return this;
  }

   /**
   * A list of URLs to be excluded from recording.
   * @return urlExclusionRules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of URLs to be excluded from recording.")
  @JsonProperty(JSON_PROPERTY_URL_EXCLUSION_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getUrlExclusionRules() {
    return urlExclusionRules;
  }


  @JsonProperty(JSON_PROPERTY_URL_EXCLUSION_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrlExclusionRules(List<String> urlExclusionRules) {
    this.urlExclusionRules = urlExclusionRules;
  }


  public SessionReplayDataPrivacySettings contentMaskingSettings(SessionReplayContentMaskingSettings contentMaskingSettings) {
    this.contentMaskingSettings = contentMaskingSettings;
    return this;
  }

   /**
   * Get contentMaskingSettings
   * @return contentMaskingSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONTENT_MASKING_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SessionReplayContentMaskingSettings getContentMaskingSettings() {
    return contentMaskingSettings;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT_MASKING_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContentMaskingSettings(SessionReplayContentMaskingSettings contentMaskingSettings) {
    this.contentMaskingSettings = contentMaskingSettings;
  }


  /**
   * Return true if this SessionReplayDataPrivacySettings object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SessionReplayDataPrivacySettings sessionReplayDataPrivacySettings = (SessionReplayDataPrivacySettings) o;
    return Objects.equals(this.optInModeEnabled, sessionReplayDataPrivacySettings.optInModeEnabled) &&
        Objects.equals(this.urlExclusionRules, sessionReplayDataPrivacySettings.urlExclusionRules) &&
        Objects.equals(this.contentMaskingSettings, sessionReplayDataPrivacySettings.contentMaskingSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(optInModeEnabled, urlExclusionRules, contentMaskingSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SessionReplayDataPrivacySettings {\n");
    sb.append("    optInModeEnabled: ").append(toIndentedString(optInModeEnabled)).append("\n");
    sb.append("    urlExclusionRules: ").append(toIndentedString(urlExclusionRules)).append("\n");
    sb.append("    contentMaskingSettings: ").append(toIndentedString(contentMaskingSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

