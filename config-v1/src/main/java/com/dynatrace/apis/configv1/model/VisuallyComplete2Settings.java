/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Settings for VisuallyComplete2
 */
@ApiModel(description = "Settings for VisuallyComplete2")
@JsonPropertyOrder({
  VisuallyComplete2Settings.JSON_PROPERTY_EXCLUDE_URL_REGEX,
  VisuallyComplete2Settings.JSON_PROPERTY_IGNORED_MUTATIONS_LIST,
  VisuallyComplete2Settings.JSON_PROPERTY_MUTATION_TIMEOUT,
  VisuallyComplete2Settings.JSON_PROPERTY_INACTIVITY_TIMEOUT,
  VisuallyComplete2Settings.JSON_PROPERTY_THRESHOLD
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class VisuallyComplete2Settings {
  public static final String JSON_PROPERTY_EXCLUDE_URL_REGEX = "excludeUrlRegex";
  private String excludeUrlRegex;

  public static final String JSON_PROPERTY_IGNORED_MUTATIONS_LIST = "ignoredMutationsList";
  private String ignoredMutationsList;

  public static final String JSON_PROPERTY_MUTATION_TIMEOUT = "mutationTimeout";
  private Integer mutationTimeout;

  public static final String JSON_PROPERTY_INACTIVITY_TIMEOUT = "inactivityTimeout";
  private Integer inactivityTimeout;

  public static final String JSON_PROPERTY_THRESHOLD = "threshold";
  private Integer threshold;

  public VisuallyComplete2Settings() { 
  }

  public VisuallyComplete2Settings excludeUrlRegex(String excludeUrlRegex) {
    this.excludeUrlRegex = excludeUrlRegex;
    return this;
  }

   /**
   * A RegularExpression used to exclude images and iframes from being detected by the VC module.
   * @return excludeUrlRegex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A RegularExpression used to exclude images and iframes from being detected by the VC module.")
  @JsonProperty(JSON_PROPERTY_EXCLUDE_URL_REGEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExcludeUrlRegex() {
    return excludeUrlRegex;
  }


  @JsonProperty(JSON_PROPERTY_EXCLUDE_URL_REGEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExcludeUrlRegex(String excludeUrlRegex) {
    this.excludeUrlRegex = excludeUrlRegex;
  }


  public VisuallyComplete2Settings ignoredMutationsList(String ignoredMutationsList) {
    this.ignoredMutationsList = ignoredMutationsList;
    return this;
  }

   /**
   * Query selector for mutation nodes to ignore in VC and SI calculation
   * @return ignoredMutationsList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Query selector for mutation nodes to ignore in VC and SI calculation")
  @JsonProperty(JSON_PROPERTY_IGNORED_MUTATIONS_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIgnoredMutationsList() {
    return ignoredMutationsList;
  }


  @JsonProperty(JSON_PROPERTY_IGNORED_MUTATIONS_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIgnoredMutationsList(String ignoredMutationsList) {
    this.ignoredMutationsList = ignoredMutationsList;
  }


  public VisuallyComplete2Settings mutationTimeout(Integer mutationTimeout) {
    this.mutationTimeout = mutationTimeout;
    return this;
  }

   /**
   * Determines the time in ms VC waits after an action closes to start calculation. Defaults to 50.
   * minimum: 0
   * maximum: 5000
   * @return mutationTimeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Determines the time in ms VC waits after an action closes to start calculation. Defaults to 50.")
  @JsonProperty(JSON_PROPERTY_MUTATION_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMutationTimeout() {
    return mutationTimeout;
  }


  @JsonProperty(JSON_PROPERTY_MUTATION_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMutationTimeout(Integer mutationTimeout) {
    this.mutationTimeout = mutationTimeout;
  }


  public VisuallyComplete2Settings inactivityTimeout(Integer inactivityTimeout) {
    this.inactivityTimeout = inactivityTimeout;
    return this;
  }

   /**
   * The time in ms the VC module waits for no mutations happening on the page after the load action. Defaults to 1000.
   * minimum: 0
   * maximum: 30000
   * @return inactivityTimeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time in ms the VC module waits for no mutations happening on the page after the load action. Defaults to 1000.")
  @JsonProperty(JSON_PROPERTY_INACTIVITY_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getInactivityTimeout() {
    return inactivityTimeout;
  }


  @JsonProperty(JSON_PROPERTY_INACTIVITY_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInactivityTimeout(Integer inactivityTimeout) {
    this.inactivityTimeout = inactivityTimeout;
  }


  public VisuallyComplete2Settings threshold(Integer threshold) {
    this.threshold = threshold;
    return this;
  }

   /**
   * Minimum visible area in pixels of elements to be counted towards VC and SI. Defaults to 50.
   * minimum: 0
   * maximum: 10000
   * @return threshold
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimum visible area in pixels of elements to be counted towards VC and SI. Defaults to 50.")
  @JsonProperty(JSON_PROPERTY_THRESHOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getThreshold() {
    return threshold;
  }


  @JsonProperty(JSON_PROPERTY_THRESHOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setThreshold(Integer threshold) {
    this.threshold = threshold;
  }


  /**
   * Return true if this VisuallyComplete2Settings object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VisuallyComplete2Settings visuallyComplete2Settings = (VisuallyComplete2Settings) o;
    return Objects.equals(this.excludeUrlRegex, visuallyComplete2Settings.excludeUrlRegex) &&
        Objects.equals(this.ignoredMutationsList, visuallyComplete2Settings.ignoredMutationsList) &&
        Objects.equals(this.mutationTimeout, visuallyComplete2Settings.mutationTimeout) &&
        Objects.equals(this.inactivityTimeout, visuallyComplete2Settings.inactivityTimeout) &&
        Objects.equals(this.threshold, visuallyComplete2Settings.threshold);
  }

  @Override
  public int hashCode() {
    return Objects.hash(excludeUrlRegex, ignoredMutationsList, mutationTimeout, inactivityTimeout, threshold);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VisuallyComplete2Settings {\n");
    sb.append("    excludeUrlRegex: ").append(toIndentedString(excludeUrlRegex)).append("\n");
    sb.append("    ignoredMutationsList: ").append(toIndentedString(ignoredMutationsList)).append("\n");
    sb.append("    mutationTimeout: ").append(toIndentedString(mutationTimeout)).append("\n");
    sb.append("    inactivityTimeout: ").append(toIndentedString(inactivityTimeout)).append("\n");
    sb.append("    threshold: ").append(toIndentedString(threshold)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

