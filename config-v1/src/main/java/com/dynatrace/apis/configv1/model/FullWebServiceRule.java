/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.ApplicationId;
import com.dynatrace.apis.configv1.model.ConditionsFullWebServiceAttributeTypeDto;
import com.dynatrace.apis.configv1.model.ConfigurationMetadata;
import com.dynatrace.apis.configv1.model.ContextRoot;
import com.dynatrace.apis.configv1.model.ServerName;
import com.dynatrace.apis.configv1.model.WebServiceName;
import com.dynatrace.apis.configv1.model.WebServiceNameSpace;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The service detection rule of the &#x60;FULL_WEB_SERVICE&#x60; type.   If you have a condition with the **attributeType** set to &#x60;FRAMEWORK&#x60;, the **values** field from **compareOperations** is limited to the following possible values:    * &#x60;AXIS&#x60;   * &#x60;CXF&#x60;   * &#x60;HESSIAN&#x60;   * &#x60;JAX_WS_RI&#x60;   * &#x60;JBOSS&#x60;   * &#x60;JERSEY&#x60;   * &#x60;PROGRESS&#x60;   * &#x60;RESTEASY&#x60;   * &#x60;RESTLET&#x60;   * &#x60;SPRING&#x60;   * &#x60;TIBCO&#x60;   * &#x60;WEBLOGIC&#x60;   * &#x60;WEBMETHODS&#x60;   * &#x60;WEBSPHERE&#x60;   * &#x60;WINK&#x60;
 */
@ApiModel(description = "The service detection rule of the `FULL_WEB_SERVICE` type.   If you have a condition with the **attributeType** set to `FRAMEWORK`, the **values** field from **compareOperations** is limited to the following possible values:    * `AXIS`   * `CXF`   * `HESSIAN`   * `JAX_WS_RI`   * `JBOSS`   * `JERSEY`   * `PROGRESS`   * `RESTEASY`   * `RESTLET`   * `SPRING`   * `TIBCO`   * `WEBLOGIC`   * `WEBMETHODS`   * `WEBSPHERE`   * `WINK`")
@JsonPropertyOrder({
  FullWebServiceRule.JSON_PROPERTY_TYPE,
  FullWebServiceRule.JSON_PROPERTY_METADATA,
  FullWebServiceRule.JSON_PROPERTY_MANAGEMENT_ZONES,
  FullWebServiceRule.JSON_PROPERTY_ID,
  FullWebServiceRule.JSON_PROPERTY_ORDER,
  FullWebServiceRule.JSON_PROPERTY_NAME,
  FullWebServiceRule.JSON_PROPERTY_DESCRIPTION,
  FullWebServiceRule.JSON_PROPERTY_ENABLED,
  FullWebServiceRule.JSON_PROPERTY_CONDITIONS,
  FullWebServiceRule.JSON_PROPERTY_DETECT_AS_WEB_REQUEST_SERVICE,
  FullWebServiceRule.JSON_PROPERTY_WEB_SERVICE_NAME,
  FullWebServiceRule.JSON_PROPERTY_WEB_SERVICE_NAME_SPACE,
  FullWebServiceRule.JSON_PROPERTY_APPLICATION_ID,
  FullWebServiceRule.JSON_PROPERTY_CONTEXT_ROOT,
  FullWebServiceRule.JSON_PROPERTY_SERVER_NAME
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class FullWebServiceRule {
  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private ConfigurationMetadata metadata;

  public static final String JSON_PROPERTY_MANAGEMENT_ZONES = "managementZones";
  private List<String> managementZones = null;

  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_ORDER = "order";
  private String order;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_CONDITIONS = "conditions";
  private List<ConditionsFullWebServiceAttributeTypeDto> conditions = null;

  public static final String JSON_PROPERTY_DETECT_AS_WEB_REQUEST_SERVICE = "detectAsWebRequestService";
  private Boolean detectAsWebRequestService;

  public static final String JSON_PROPERTY_WEB_SERVICE_NAME = "webServiceName";
  private WebServiceName webServiceName;

  public static final String JSON_PROPERTY_WEB_SERVICE_NAME_SPACE = "webServiceNameSpace";
  private WebServiceNameSpace webServiceNameSpace;

  public static final String JSON_PROPERTY_APPLICATION_ID = "applicationId";
  private ApplicationId applicationId;

  public static final String JSON_PROPERTY_CONTEXT_ROOT = "contextRoot";
  private ContextRoot contextRoot;

  public static final String JSON_PROPERTY_SERVER_NAME = "serverName";
  private ServerName serverName;

  public FullWebServiceRule() { 
  }

  public FullWebServiceRule type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The type of the service detection rule.
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The type of the service detection rule.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  public FullWebServiceRule metadata(ConfigurationMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConfigurationMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(ConfigurationMetadata metadata) {
    this.metadata = metadata;
  }


  public FullWebServiceRule managementZones(List<String> managementZones) {
    this.managementZones = managementZones;
    return this;
  }

  public FullWebServiceRule addManagementZonesItem(String managementZonesItem) {
    if (this.managementZones == null) {
      this.managementZones = new ArrayList<>();
    }
    this.managementZones.add(managementZonesItem);
    return this;
  }

   /**
   * The management zone (specified by the ID) of the process group for which this service detection rule should be created.    You can specify only 1 management zone here.
   * @return managementZones
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The management zone (specified by the ID) of the process group for which this service detection rule should be created.    You can specify only 1 management zone here.")
  @JsonProperty(JSON_PROPERTY_MANAGEMENT_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getManagementZones() {
    return managementZones;
  }


  @JsonProperty(JSON_PROPERTY_MANAGEMENT_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManagementZones(List<String> managementZones) {
    this.managementZones = managementZones;
  }


  public FullWebServiceRule id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of the service detection rule.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the service detection rule.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }


  public FullWebServiceRule order(String order) {
    this.order = order;
    return this;
  }

   /**
   * The order of the rule in the rules list.    The rules are evaluated from top to bottom. The first matching rule applies.
   * @return order
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The order of the rule in the rules list.    The rules are evaluated from top to bottom. The first matching rule applies.")
  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOrder() {
    return order;
  }


  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrder(String order) {
    this.order = order;
  }


  public FullWebServiceRule name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the rule.
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name of the rule.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public FullWebServiceRule description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A short description of the rule.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A short description of the rule.")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public FullWebServiceRule enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * The rule is enabled(&#x60;true&#x60;) or disabled (&#x60;false&#x60;).
   * @return enabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The rule is enabled(`true`) or disabled (`false`).")
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public FullWebServiceRule conditions(List<ConditionsFullWebServiceAttributeTypeDto> conditions) {
    this.conditions = conditions;
    return this;
  }

  public FullWebServiceRule addConditionsItem(ConditionsFullWebServiceAttributeTypeDto conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * A list of conditions of the rule.   If several conditions are specified, the AND logic applies.
   * @return conditions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of conditions of the rule.   If several conditions are specified, the AND logic applies.")
  @JsonProperty(JSON_PROPERTY_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ConditionsFullWebServiceAttributeTypeDto> getConditions() {
    return conditions;
  }


  @JsonProperty(JSON_PROPERTY_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConditions(List<ConditionsFullWebServiceAttributeTypeDto> conditions) {
    this.conditions = conditions;
  }


  public FullWebServiceRule detectAsWebRequestService(Boolean detectAsWebRequestService) {
    this.detectAsWebRequestService = detectAsWebRequestService;
    return this;
  }

   /**
   * Detect the matching requests as full web services (&#x60;false&#x60;) or web request services (&#x60;true&#x60;).   Setting this field to &#x60;true&#x60; prevents detecting of matching requests as full web services. A web request service is created instead. If you need to further modify the resulting web request service, you need to create a separate rule of the &#x60;FULL_WEB_REQUEST&#x60; type.   Default is &#x60;false&#x60;, detecting matching requests as full web services.
   * @return detectAsWebRequestService
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Detect the matching requests as full web services (`false`) or web request services (`true`).   Setting this field to `true` prevents detecting of matching requests as full web services. A web request service is created instead. If you need to further modify the resulting web request service, you need to create a separate rule of the `FULL_WEB_REQUEST` type.   Default is `false`, detecting matching requests as full web services.")
  @JsonProperty(JSON_PROPERTY_DETECT_AS_WEB_REQUEST_SERVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDetectAsWebRequestService() {
    return detectAsWebRequestService;
  }


  @JsonProperty(JSON_PROPERTY_DETECT_AS_WEB_REQUEST_SERVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetectAsWebRequestService(Boolean detectAsWebRequestService) {
    this.detectAsWebRequestService = detectAsWebRequestService;
  }


  public FullWebServiceRule webServiceName(WebServiceName webServiceName) {
    this.webServiceName = webServiceName;
    return this;
  }

   /**
   * Get webServiceName
   * @return webServiceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WEB_SERVICE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public WebServiceName getWebServiceName() {
    return webServiceName;
  }


  @JsonProperty(JSON_PROPERTY_WEB_SERVICE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebServiceName(WebServiceName webServiceName) {
    this.webServiceName = webServiceName;
  }


  public FullWebServiceRule webServiceNameSpace(WebServiceNameSpace webServiceNameSpace) {
    this.webServiceNameSpace = webServiceNameSpace;
    return this;
  }

   /**
   * Get webServiceNameSpace
   * @return webServiceNameSpace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WEB_SERVICE_NAME_SPACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public WebServiceNameSpace getWebServiceNameSpace() {
    return webServiceNameSpace;
  }


  @JsonProperty(JSON_PROPERTY_WEB_SERVICE_NAME_SPACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebServiceNameSpace(WebServiceNameSpace webServiceNameSpace) {
    this.webServiceNameSpace = webServiceNameSpace;
  }


  public FullWebServiceRule applicationId(ApplicationId applicationId) {
    this.applicationId = applicationId;
    return this;
  }

   /**
   * Get applicationId
   * @return applicationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_APPLICATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApplicationId getApplicationId() {
    return applicationId;
  }


  @JsonProperty(JSON_PROPERTY_APPLICATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplicationId(ApplicationId applicationId) {
    this.applicationId = applicationId;
  }


  public FullWebServiceRule contextRoot(ContextRoot contextRoot) {
    this.contextRoot = contextRoot;
    return this;
  }

   /**
   * Get contextRoot
   * @return contextRoot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONTEXT_ROOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ContextRoot getContextRoot() {
    return contextRoot;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ROOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextRoot(ContextRoot contextRoot) {
    this.contextRoot = contextRoot;
  }


  public FullWebServiceRule serverName(ServerName serverName) {
    this.serverName = serverName;
    return this;
  }

   /**
   * Get serverName
   * @return serverName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SERVER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServerName getServerName() {
    return serverName;
  }


  @JsonProperty(JSON_PROPERTY_SERVER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServerName(ServerName serverName) {
    this.serverName = serverName;
  }


  /**
   * Return true if this FullWebServiceRule object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FullWebServiceRule fullWebServiceRule = (FullWebServiceRule) o;
    return Objects.equals(this.type, fullWebServiceRule.type) &&
        Objects.equals(this.metadata, fullWebServiceRule.metadata) &&
        Objects.equals(this.managementZones, fullWebServiceRule.managementZones) &&
        Objects.equals(this.id, fullWebServiceRule.id) &&
        Objects.equals(this.order, fullWebServiceRule.order) &&
        Objects.equals(this.name, fullWebServiceRule.name) &&
        Objects.equals(this.description, fullWebServiceRule.description) &&
        Objects.equals(this.enabled, fullWebServiceRule.enabled) &&
        Objects.equals(this.conditions, fullWebServiceRule.conditions) &&
        Objects.equals(this.detectAsWebRequestService, fullWebServiceRule.detectAsWebRequestService) &&
        Objects.equals(this.webServiceName, fullWebServiceRule.webServiceName) &&
        Objects.equals(this.webServiceNameSpace, fullWebServiceRule.webServiceNameSpace) &&
        Objects.equals(this.applicationId, fullWebServiceRule.applicationId) &&
        Objects.equals(this.contextRoot, fullWebServiceRule.contextRoot) &&
        Objects.equals(this.serverName, fullWebServiceRule.serverName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, metadata, managementZones, id, order, name, description, enabled, conditions, detectAsWebRequestService, webServiceName, webServiceNameSpace, applicationId, contextRoot, serverName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FullWebServiceRule {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    managementZones: ").append(toIndentedString(managementZones)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    detectAsWebRequestService: ").append(toIndentedString(detectAsWebRequestService)).append("\n");
    sb.append("    webServiceName: ").append(toIndentedString(webServiceName)).append("\n");
    sb.append("    webServiceNameSpace: ").append(toIndentedString(webServiceNameSpace)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    contextRoot: ").append(toIndentedString(contextRoot)).append("\n");
    sb.append("    serverName: ").append(toIndentedString(serverName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

