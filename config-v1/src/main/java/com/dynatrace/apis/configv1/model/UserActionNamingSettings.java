/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.UserActionNamingPlaceholder;
import com.dynatrace.apis.configv1.model.UserActionNamingRule;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The settings of user action naming.
 */
@ApiModel(description = "The settings of user action naming.")
@JsonPropertyOrder({
  UserActionNamingSettings.JSON_PROPERTY_PLACEHOLDERS,
  UserActionNamingSettings.JSON_PROPERTY_LOAD_ACTION_NAMING_RULES,
  UserActionNamingSettings.JSON_PROPERTY_XHR_ACTION_NAMING_RULES,
  UserActionNamingSettings.JSON_PROPERTY_CUSTOM_ACTION_NAMING_RULES,
  UserActionNamingSettings.JSON_PROPERTY_IGNORE_CASE,
  UserActionNamingSettings.JSON_PROPERTY_USE_FIRST_DETECTED_LOAD_ACTION,
  UserActionNamingSettings.JSON_PROPERTY_SPLIT_USER_ACTIONS_BY_DOMAIN,
  UserActionNamingSettings.JSON_PROPERTY_QUERY_PARAMETER_CLEANUPS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class UserActionNamingSettings {
  public static final String JSON_PROPERTY_PLACEHOLDERS = "placeholders";
  private List<UserActionNamingPlaceholder> placeholders = null;

  public static final String JSON_PROPERTY_LOAD_ACTION_NAMING_RULES = "loadActionNamingRules";
  private List<UserActionNamingRule> loadActionNamingRules = null;

  public static final String JSON_PROPERTY_XHR_ACTION_NAMING_RULES = "xhrActionNamingRules";
  private List<UserActionNamingRule> xhrActionNamingRules = null;

  public static final String JSON_PROPERTY_CUSTOM_ACTION_NAMING_RULES = "customActionNamingRules";
  private List<UserActionNamingRule> customActionNamingRules = null;

  public static final String JSON_PROPERTY_IGNORE_CASE = "ignoreCase";
  private Boolean ignoreCase;

  public static final String JSON_PROPERTY_USE_FIRST_DETECTED_LOAD_ACTION = "useFirstDetectedLoadAction";
  private Boolean useFirstDetectedLoadAction;

  public static final String JSON_PROPERTY_SPLIT_USER_ACTIONS_BY_DOMAIN = "splitUserActionsByDomain";
  private Boolean splitUserActionsByDomain;

  public static final String JSON_PROPERTY_QUERY_PARAMETER_CLEANUPS = "queryParameterCleanups";
  private List<String> queryParameterCleanups = null;

  public UserActionNamingSettings() { 
  }

  public UserActionNamingSettings placeholders(List<UserActionNamingPlaceholder> placeholders) {
    this.placeholders = placeholders;
    return this;
  }

  public UserActionNamingSettings addPlaceholdersItem(UserActionNamingPlaceholder placeholdersItem) {
    if (this.placeholders == null) {
      this.placeholders = new ArrayList<>();
    }
    this.placeholders.add(placeholdersItem);
    return this;
  }

   /**
   * User action placeholders.
   * @return placeholders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User action placeholders.")
  @JsonProperty(JSON_PROPERTY_PLACEHOLDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UserActionNamingPlaceholder> getPlaceholders() {
    return placeholders;
  }


  @JsonProperty(JSON_PROPERTY_PLACEHOLDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlaceholders(List<UserActionNamingPlaceholder> placeholders) {
    this.placeholders = placeholders;
  }


  public UserActionNamingSettings loadActionNamingRules(List<UserActionNamingRule> loadActionNamingRules) {
    this.loadActionNamingRules = loadActionNamingRules;
    return this;
  }

  public UserActionNamingSettings addLoadActionNamingRulesItem(UserActionNamingRule loadActionNamingRulesItem) {
    if (this.loadActionNamingRules == null) {
      this.loadActionNamingRules = new ArrayList<>();
    }
    this.loadActionNamingRules.add(loadActionNamingRulesItem);
    return this;
  }

   /**
   * User action naming rules for loading actions.
   * @return loadActionNamingRules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User action naming rules for loading actions.")
  @JsonProperty(JSON_PROPERTY_LOAD_ACTION_NAMING_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UserActionNamingRule> getLoadActionNamingRules() {
    return loadActionNamingRules;
  }


  @JsonProperty(JSON_PROPERTY_LOAD_ACTION_NAMING_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoadActionNamingRules(List<UserActionNamingRule> loadActionNamingRules) {
    this.loadActionNamingRules = loadActionNamingRules;
  }


  public UserActionNamingSettings xhrActionNamingRules(List<UserActionNamingRule> xhrActionNamingRules) {
    this.xhrActionNamingRules = xhrActionNamingRules;
    return this;
  }

  public UserActionNamingSettings addXhrActionNamingRulesItem(UserActionNamingRule xhrActionNamingRulesItem) {
    if (this.xhrActionNamingRules == null) {
      this.xhrActionNamingRules = new ArrayList<>();
    }
    this.xhrActionNamingRules.add(xhrActionNamingRulesItem);
    return this;
  }

   /**
   * User action naming rules for xhr actions.
   * @return xhrActionNamingRules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User action naming rules for xhr actions.")
  @JsonProperty(JSON_PROPERTY_XHR_ACTION_NAMING_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UserActionNamingRule> getXhrActionNamingRules() {
    return xhrActionNamingRules;
  }


  @JsonProperty(JSON_PROPERTY_XHR_ACTION_NAMING_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setXhrActionNamingRules(List<UserActionNamingRule> xhrActionNamingRules) {
    this.xhrActionNamingRules = xhrActionNamingRules;
  }


  public UserActionNamingSettings customActionNamingRules(List<UserActionNamingRule> customActionNamingRules) {
    this.customActionNamingRules = customActionNamingRules;
    return this;
  }

  public UserActionNamingSettings addCustomActionNamingRulesItem(UserActionNamingRule customActionNamingRulesItem) {
    if (this.customActionNamingRules == null) {
      this.customActionNamingRules = new ArrayList<>();
    }
    this.customActionNamingRules.add(customActionNamingRulesItem);
    return this;
  }

   /**
   * User action naming rules for custom actions.
   * @return customActionNamingRules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User action naming rules for custom actions.")
  @JsonProperty(JSON_PROPERTY_CUSTOM_ACTION_NAMING_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UserActionNamingRule> getCustomActionNamingRules() {
    return customActionNamingRules;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_ACTION_NAMING_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomActionNamingRules(List<UserActionNamingRule> customActionNamingRules) {
    this.customActionNamingRules = customActionNamingRules;
  }


  public UserActionNamingSettings ignoreCase(Boolean ignoreCase) {
    this.ignoreCase = ignoreCase;
    return this;
  }

   /**
   * Case insensitive naming.
   * @return ignoreCase
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Case insensitive naming.")
  @JsonProperty(JSON_PROPERTY_IGNORE_CASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIgnoreCase() {
    return ignoreCase;
  }


  @JsonProperty(JSON_PROPERTY_IGNORE_CASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIgnoreCase(Boolean ignoreCase) {
    this.ignoreCase = ignoreCase;
  }


  public UserActionNamingSettings useFirstDetectedLoadAction(Boolean useFirstDetectedLoadAction) {
    this.useFirstDetectedLoadAction = useFirstDetectedLoadAction;
    return this;
  }

   /**
   * First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used
   * @return useFirstDetectedLoadAction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used")
  @JsonProperty(JSON_PROPERTY_USE_FIRST_DETECTED_LOAD_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUseFirstDetectedLoadAction() {
    return useFirstDetectedLoadAction;
  }


  @JsonProperty(JSON_PROPERTY_USE_FIRST_DETECTED_LOAD_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUseFirstDetectedLoadAction(Boolean useFirstDetectedLoadAction) {
    this.useFirstDetectedLoadAction = useFirstDetectedLoadAction;
  }


  public UserActionNamingSettings splitUserActionsByDomain(Boolean splitUserActionsByDomain) {
    this.splitUserActionsByDomain = splitUserActionsByDomain;
    return this;
  }

   /**
   * Deactivate this setting if different domains should not result in separate user actions.
   * @return splitUserActionsByDomain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Deactivate this setting if different domains should not result in separate user actions.")
  @JsonProperty(JSON_PROPERTY_SPLIT_USER_ACTIONS_BY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSplitUserActionsByDomain() {
    return splitUserActionsByDomain;
  }


  @JsonProperty(JSON_PROPERTY_SPLIT_USER_ACTIONS_BY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSplitUserActionsByDomain(Boolean splitUserActionsByDomain) {
    this.splitUserActionsByDomain = splitUserActionsByDomain;
  }


  public UserActionNamingSettings queryParameterCleanups(List<String> queryParameterCleanups) {
    this.queryParameterCleanups = queryParameterCleanups;
    return this;
  }

  public UserActionNamingSettings addQueryParameterCleanupsItem(String queryParameterCleanupsItem) {
    if (this.queryParameterCleanups == null) {
      this.queryParameterCleanups = new ArrayList<>();
    }
    this.queryParameterCleanups.add(queryParameterCleanupsItem);
    return this;
  }

   /**
   * List of parameters that should be removed from the query before using the query in the user action name.
   * @return queryParameterCleanups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of parameters that should be removed from the query before using the query in the user action name.")
  @JsonProperty(JSON_PROPERTY_QUERY_PARAMETER_CLEANUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getQueryParameterCleanups() {
    return queryParameterCleanups;
  }


  @JsonProperty(JSON_PROPERTY_QUERY_PARAMETER_CLEANUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQueryParameterCleanups(List<String> queryParameterCleanups) {
    this.queryParameterCleanups = queryParameterCleanups;
  }


  /**
   * Return true if this UserActionNamingSettings object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserActionNamingSettings userActionNamingSettings = (UserActionNamingSettings) o;
    return Objects.equals(this.placeholders, userActionNamingSettings.placeholders) &&
        Objects.equals(this.loadActionNamingRules, userActionNamingSettings.loadActionNamingRules) &&
        Objects.equals(this.xhrActionNamingRules, userActionNamingSettings.xhrActionNamingRules) &&
        Objects.equals(this.customActionNamingRules, userActionNamingSettings.customActionNamingRules) &&
        Objects.equals(this.ignoreCase, userActionNamingSettings.ignoreCase) &&
        Objects.equals(this.useFirstDetectedLoadAction, userActionNamingSettings.useFirstDetectedLoadAction) &&
        Objects.equals(this.splitUserActionsByDomain, userActionNamingSettings.splitUserActionsByDomain) &&
        Objects.equals(this.queryParameterCleanups, userActionNamingSettings.queryParameterCleanups);
  }

  @Override
  public int hashCode() {
    return Objects.hash(placeholders, loadActionNamingRules, xhrActionNamingRules, customActionNamingRules, ignoreCase, useFirstDetectedLoadAction, splitUserActionsByDomain, queryParameterCleanups);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserActionNamingSettings {\n");
    sb.append("    placeholders: ").append(toIndentedString(placeholders)).append("\n");
    sb.append("    loadActionNamingRules: ").append(toIndentedString(loadActionNamingRules)).append("\n");
    sb.append("    xhrActionNamingRules: ").append(toIndentedString(xhrActionNamingRules)).append("\n");
    sb.append("    customActionNamingRules: ").append(toIndentedString(customActionNamingRules)).append("\n");
    sb.append("    ignoreCase: ").append(toIndentedString(ignoreCase)).append("\n");
    sb.append("    useFirstDetectedLoadAction: ").append(toIndentedString(useFirstDetectedLoadAction)).append("\n");
    sb.append("    splitUserActionsByDomain: ").append(toIndentedString(splitUserActionsByDomain)).append("\n");
    sb.append("    queryParameterCleanups: ").append(toIndentedString(queryParameterCleanups)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

