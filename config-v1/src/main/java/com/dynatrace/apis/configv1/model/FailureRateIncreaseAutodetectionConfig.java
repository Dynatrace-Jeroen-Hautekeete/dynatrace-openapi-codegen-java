/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Parameters of failure rate increase auto-detection. Required if **detectionMode** is &#x60;DETECT_AUTOMATICALLY&#x60;. Not applicable otherwise.   The absolute and relative thresholds **both** must exceed to trigger an alert.   Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + **1%** &#x3D; 2.5%  Relative: 1.5% + 1.5% * **50%** &#x3D; 2.25%
 */
@ApiModel(description = "Parameters of failure rate increase auto-detection. Required if **detectionMode** is `DETECT_AUTOMATICALLY`. Not applicable otherwise.   The absolute and relative thresholds **both** must exceed to trigger an alert.   Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + **1%** = 2.5%  Relative: 1.5% + 1.5% * **50%** = 2.25%")
@JsonPropertyOrder({
  FailureRateIncreaseAutodetectionConfig.JSON_PROPERTY_FAILING_SERVICE_CALL_PERCENTAGE_INCREASE_ABSOLUTE,
  FailureRateIncreaseAutodetectionConfig.JSON_PROPERTY_FAILING_SERVICE_CALL_PERCENTAGE_INCREASE_RELATIVE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class FailureRateIncreaseAutodetectionConfig {
  public static final String JSON_PROPERTY_FAILING_SERVICE_CALL_PERCENTAGE_INCREASE_ABSOLUTE = "failingServiceCallPercentageIncreaseAbsolute";
  private Integer failingServiceCallPercentageIncreaseAbsolute;

  public static final String JSON_PROPERTY_FAILING_SERVICE_CALL_PERCENTAGE_INCREASE_RELATIVE = "failingServiceCallPercentageIncreaseRelative";
  private Integer failingServiceCallPercentageIncreaseRelative;

  public FailureRateIncreaseAutodetectionConfig() { 
  }

  public FailureRateIncreaseAutodetectionConfig failingServiceCallPercentageIncreaseAbsolute(Integer failingServiceCallPercentageIncreaseAbsolute) {
    this.failingServiceCallPercentageIncreaseAbsolute = failingServiceCallPercentageIncreaseAbsolute;
    return this;
  }

   /**
   * Absolute increase of failing service calls to trigger an alert, %.
   * minimum: 0
   * maximum: 1000
   * @return failingServiceCallPercentageIncreaseAbsolute
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Absolute increase of failing service calls to trigger an alert, %.")
  @JsonProperty(JSON_PROPERTY_FAILING_SERVICE_CALL_PERCENTAGE_INCREASE_ABSOLUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getFailingServiceCallPercentageIncreaseAbsolute() {
    return failingServiceCallPercentageIncreaseAbsolute;
  }


  @JsonProperty(JSON_PROPERTY_FAILING_SERVICE_CALL_PERCENTAGE_INCREASE_ABSOLUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFailingServiceCallPercentageIncreaseAbsolute(Integer failingServiceCallPercentageIncreaseAbsolute) {
    this.failingServiceCallPercentageIncreaseAbsolute = failingServiceCallPercentageIncreaseAbsolute;
  }


  public FailureRateIncreaseAutodetectionConfig failingServiceCallPercentageIncreaseRelative(Integer failingServiceCallPercentageIncreaseRelative) {
    this.failingServiceCallPercentageIncreaseRelative = failingServiceCallPercentageIncreaseRelative;
    return this;
  }

   /**
   * Relative increase of failing service calls to trigger an alert, %.
   * minimum: 0
   * maximum: 1000
   * @return failingServiceCallPercentageIncreaseRelative
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Relative increase of failing service calls to trigger an alert, %.")
  @JsonProperty(JSON_PROPERTY_FAILING_SERVICE_CALL_PERCENTAGE_INCREASE_RELATIVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getFailingServiceCallPercentageIncreaseRelative() {
    return failingServiceCallPercentageIncreaseRelative;
  }


  @JsonProperty(JSON_PROPERTY_FAILING_SERVICE_CALL_PERCENTAGE_INCREASE_RELATIVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFailingServiceCallPercentageIncreaseRelative(Integer failingServiceCallPercentageIncreaseRelative) {
    this.failingServiceCallPercentageIncreaseRelative = failingServiceCallPercentageIncreaseRelative;
  }


  /**
   * Return true if this FailureRateIncreaseAutodetectionConfig object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FailureRateIncreaseAutodetectionConfig failureRateIncreaseAutodetectionConfig = (FailureRateIncreaseAutodetectionConfig) o;
    return Objects.equals(this.failingServiceCallPercentageIncreaseAbsolute, failureRateIncreaseAutodetectionConfig.failingServiceCallPercentageIncreaseAbsolute) &&
        Objects.equals(this.failingServiceCallPercentageIncreaseRelative, failureRateIncreaseAutodetectionConfig.failingServiceCallPercentageIncreaseRelative);
  }

  @Override
  public int hashCode() {
    return Objects.hash(failingServiceCallPercentageIncreaseAbsolute, failingServiceCallPercentageIncreaseRelative);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FailureRateIncreaseAutodetectionConfig {\n");
    sb.append("    failingServiceCallPercentageIncreaseAbsolute: ").append(toIndentedString(failingServiceCallPercentageIncreaseAbsolute)).append("\n");
    sb.append("    failingServiceCallPercentageIncreaseRelative: ").append(toIndentedString(failingServiceCallPercentageIncreaseRelative)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

