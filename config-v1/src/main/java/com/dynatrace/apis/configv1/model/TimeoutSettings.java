/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Settings for timed action capture.
 */
@ApiModel(description = "Settings for timed action capture.")
@JsonPropertyOrder({
  TimeoutSettings.JSON_PROPERTY_TIMED_ACTION_SUPPORT,
  TimeoutSettings.JSON_PROPERTY_TEMPORARY_ACTION_LIMIT,
  TimeoutSettings.JSON_PROPERTY_TEMPORARY_ACTION_TOTAL_TIMEOUT
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class TimeoutSettings {
  public static final String JSON_PROPERTY_TIMED_ACTION_SUPPORT = "timedActionSupport";
  private Boolean timedActionSupport;

  public static final String JSON_PROPERTY_TEMPORARY_ACTION_LIMIT = "temporaryActionLimit";
  private Integer temporaryActionLimit;

  public static final String JSON_PROPERTY_TEMPORARY_ACTION_TOTAL_TIMEOUT = "temporaryActionTotalTimeout";
  private Integer temporaryActionTotalTimeout;

  public TimeoutSettings() { 
  }

  public TimeoutSettings timedActionSupport(Boolean timedActionSupport) {
    this.timedActionSupport = timedActionSupport;
    return this;
  }

   /**
   * Timed action support enabled/disabled.   Enable to detect actions that trigger sending of XHRs via *setTimout* methods.
   * @return timedActionSupport
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Timed action support enabled/disabled.   Enable to detect actions that trigger sending of XHRs via *setTimout* methods.")
  @JsonProperty(JSON_PROPERTY_TIMED_ACTION_SUPPORT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getTimedActionSupport() {
    return timedActionSupport;
  }


  @JsonProperty(JSON_PROPERTY_TIMED_ACTION_SUPPORT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTimedActionSupport(Boolean timedActionSupport) {
    this.timedActionSupport = timedActionSupport;
  }


  public TimeoutSettings temporaryActionLimit(Integer temporaryActionLimit) {
    this.temporaryActionLimit = temporaryActionLimit;
    return this;
  }

   /**
   * Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3.
   * @return temporaryActionLimit
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3.")
  @JsonProperty(JSON_PROPERTY_TEMPORARY_ACTION_LIMIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getTemporaryActionLimit() {
    return temporaryActionLimit;
  }


  @JsonProperty(JSON_PROPERTY_TEMPORARY_ACTION_LIMIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTemporaryActionLimit(Integer temporaryActionLimit) {
    this.temporaryActionLimit = temporaryActionLimit;
  }


  public TimeoutSettings temporaryActionTotalTimeout(Integer temporaryActionTotalTimeout) {
    this.temporaryActionTotalTimeout = temporaryActionTotalTimeout;
    return this;
  }

   /**
   * The total timeout of all cascaded timeouts that should still be able to create a temporary action
   * @return temporaryActionTotalTimeout
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The total timeout of all cascaded timeouts that should still be able to create a temporary action")
  @JsonProperty(JSON_PROPERTY_TEMPORARY_ACTION_TOTAL_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getTemporaryActionTotalTimeout() {
    return temporaryActionTotalTimeout;
  }


  @JsonProperty(JSON_PROPERTY_TEMPORARY_ACTION_TOTAL_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTemporaryActionTotalTimeout(Integer temporaryActionTotalTimeout) {
    this.temporaryActionTotalTimeout = temporaryActionTotalTimeout;
  }


  /**
   * Return true if this TimeoutSettings object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TimeoutSettings timeoutSettings = (TimeoutSettings) o;
    return Objects.equals(this.timedActionSupport, timeoutSettings.timedActionSupport) &&
        Objects.equals(this.temporaryActionLimit, timeoutSettings.temporaryActionLimit) &&
        Objects.equals(this.temporaryActionTotalTimeout, timeoutSettings.temporaryActionTotalTimeout);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timedActionSupport, temporaryActionLimit, temporaryActionTotalTimeout);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TimeoutSettings {\n");
    sb.append("    timedActionSupport: ").append(toIndentedString(timedActionSupport)).append("\n");
    sb.append("    temporaryActionLimit: ").append(toIndentedString(temporaryActionLimit)).append("\n");
    sb.append("    temporaryActionTotalTimeout: ").append(toIndentedString(temporaryActionTotalTimeout)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

