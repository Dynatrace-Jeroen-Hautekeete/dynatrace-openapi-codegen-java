/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.ConfigurationMetadata;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Monitoring configuration of OneAgent.
 */
@ApiModel(description = "Monitoring configuration of OneAgent.")
@JsonPropertyOrder({
  MonitoringConfig.JSON_PROPERTY_METADATA,
  MonitoringConfig.JSON_PROPERTY_ID,
  MonitoringConfig.JSON_PROPERTY_MONITORING_ENABLED,
  MonitoringConfig.JSON_PROPERTY_MONITORING_MODE,
  MonitoringConfig.JSON_PROPERTY_AUTO_INJECTION_ENABLED
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class MonitoringConfig {
  public static final String JSON_PROPERTY_METADATA = "metadata";
  private ConfigurationMetadata metadata;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_MONITORING_ENABLED = "monitoringEnabled";
  private Boolean monitoringEnabled;

  /**
   * The monitoring mode for the host: full stack or infrastructure only.
   */
  public enum MonitoringModeEnum {
    CLOUD_INFRASTRUCTURE("CLOUD_INFRASTRUCTURE"),
    
    FULL_STACK("FULL_STACK");

    private String value;

    MonitoringModeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MonitoringModeEnum fromValue(String value) {
      for (MonitoringModeEnum b : MonitoringModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_MONITORING_MODE = "monitoringMode";
  private MonitoringModeEnum monitoringMode;

  public static final String JSON_PROPERTY_AUTO_INJECTION_ENABLED = "autoInjectionEnabled";
  private Boolean autoInjectionEnabled;

  public MonitoringConfig() { 
  }

  @JsonCreator
  public MonitoringConfig(
    @JsonProperty(JSON_PROPERTY_ID) String id
  ) {
  this();
    this.id = id;
  }

  public MonitoringConfig metadata(ConfigurationMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConfigurationMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(ConfigurationMetadata metadata) {
    this.metadata = metadata;
  }


   /**
   * The Dynatrace entity ID of the host where OneAgent is deployed.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "HOST-0123456789ABCDE", value = "The Dynatrace entity ID of the host where OneAgent is deployed.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }




  public MonitoringConfig monitoringEnabled(Boolean monitoringEnabled) {
    this.monitoringEnabled = monitoringEnabled;
    return this;
  }

   /**
   * The monitoring is enabled (&#x60;true&#x60;) or disabled (&#x60;false&#x60;).
   * @return monitoringEnabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "The monitoring is enabled (`true`) or disabled (`false`).")
  @JsonProperty(JSON_PROPERTY_MONITORING_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getMonitoringEnabled() {
    return monitoringEnabled;
  }


  @JsonProperty(JSON_PROPERTY_MONITORING_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMonitoringEnabled(Boolean monitoringEnabled) {
    this.monitoringEnabled = monitoringEnabled;
  }


  public MonitoringConfig monitoringMode(MonitoringModeEnum monitoringMode) {
    this.monitoringMode = monitoringMode;
    return this;
  }

   /**
   * The monitoring mode for the host: full stack or infrastructure only.
   * @return monitoringMode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "FULL_STACK", required = true, value = "The monitoring mode for the host: full stack or infrastructure only.")
  @JsonProperty(JSON_PROPERTY_MONITORING_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public MonitoringModeEnum getMonitoringMode() {
    return monitoringMode;
  }


  @JsonProperty(JSON_PROPERTY_MONITORING_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMonitoringMode(MonitoringModeEnum monitoringMode) {
    this.monitoringMode = monitoringMode;
  }


  public MonitoringConfig autoInjectionEnabled(Boolean autoInjectionEnabled) {
    this.autoInjectionEnabled = autoInjectionEnabled;
    return this;
  }

   /**
   * Code modules will be injected automatically into monitored applications if this setting is enabled. This setting won&#39;t apply if auto-injection is disabled via oneagentctl (see https://dt-url.net/oneagentctl).
   * @return autoInjectionEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Code modules will be injected automatically into monitored applications if this setting is enabled. This setting won't apply if auto-injection is disabled via oneagentctl (see https://dt-url.net/oneagentctl).")
  @JsonProperty(JSON_PROPERTY_AUTO_INJECTION_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAutoInjectionEnabled() {
    return autoInjectionEnabled;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_INJECTION_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutoInjectionEnabled(Boolean autoInjectionEnabled) {
    this.autoInjectionEnabled = autoInjectionEnabled;
  }


  /**
   * Return true if this MonitoringConfig object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MonitoringConfig monitoringConfig = (MonitoringConfig) o;
    return Objects.equals(this.metadata, monitoringConfig.metadata) &&
        Objects.equals(this.id, monitoringConfig.id) &&
        Objects.equals(this.monitoringEnabled, monitoringConfig.monitoringEnabled) &&
        Objects.equals(this.monitoringMode, monitoringConfig.monitoringMode) &&
        Objects.equals(this.autoInjectionEnabled, monitoringConfig.autoInjectionEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metadata, id, monitoringEnabled, monitoringMode, autoInjectionEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MonitoringConfig {\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    monitoringEnabled: ").append(toIndentedString(monitoringEnabled)).append("\n");
    sb.append("    monitoringMode: ").append(toIndentedString(monitoringMode)).append("\n");
    sb.append("    autoInjectionEnabled: ").append(toIndentedString(autoInjectionEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

