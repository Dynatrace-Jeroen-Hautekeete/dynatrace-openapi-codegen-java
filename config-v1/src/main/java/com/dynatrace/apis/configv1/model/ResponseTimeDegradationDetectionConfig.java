/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.ResponseTimeDegradationAutodetectionConfig;
import com.dynatrace.apis.configv1.model.ResponseTimeDegradationThresholdConfig;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Configuration of response time degradation detection.
 */
@ApiModel(description = "Configuration of response time degradation detection.")
@JsonPropertyOrder({
  ResponseTimeDegradationDetectionConfig.JSON_PROPERTY_DETECTION_MODE,
  ResponseTimeDegradationDetectionConfig.JSON_PROPERTY_AUTOMATIC_DETECTION,
  ResponseTimeDegradationDetectionConfig.JSON_PROPERTY_THRESHOLDS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class ResponseTimeDegradationDetectionConfig {
  /**
   * How to detect response time degradation: automatically, or based on fixed thresholds, or do not detect.
   */
  public enum DetectionModeEnum {
    DETECT_AUTOMATICALLY("DETECT_AUTOMATICALLY"),
    
    DETECT_USING_FIXED_THRESHOLDS("DETECT_USING_FIXED_THRESHOLDS"),
    
    DONT_DETECT("DONT_DETECT");

    private String value;

    DetectionModeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DetectionModeEnum fromValue(String value) {
      for (DetectionModeEnum b : DetectionModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DETECTION_MODE = "detectionMode";
  private DetectionModeEnum detectionMode;

  public static final String JSON_PROPERTY_AUTOMATIC_DETECTION = "automaticDetection";
  private ResponseTimeDegradationAutodetectionConfig automaticDetection;

  public static final String JSON_PROPERTY_THRESHOLDS = "thresholds";
  private ResponseTimeDegradationThresholdConfig thresholds;

  public ResponseTimeDegradationDetectionConfig() { 
  }

  public ResponseTimeDegradationDetectionConfig detectionMode(DetectionModeEnum detectionMode) {
    this.detectionMode = detectionMode;
    return this;
  }

   /**
   * How to detect response time degradation: automatically, or based on fixed thresholds, or do not detect.
   * @return detectionMode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "How to detect response time degradation: automatically, or based on fixed thresholds, or do not detect.")
  @JsonProperty(JSON_PROPERTY_DETECTION_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DetectionModeEnum getDetectionMode() {
    return detectionMode;
  }


  @JsonProperty(JSON_PROPERTY_DETECTION_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDetectionMode(DetectionModeEnum detectionMode) {
    this.detectionMode = detectionMode;
  }


  public ResponseTimeDegradationDetectionConfig automaticDetection(ResponseTimeDegradationAutodetectionConfig automaticDetection) {
    this.automaticDetection = automaticDetection;
    return this;
  }

   /**
   * Get automaticDetection
   * @return automaticDetection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AUTOMATIC_DETECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ResponseTimeDegradationAutodetectionConfig getAutomaticDetection() {
    return automaticDetection;
  }


  @JsonProperty(JSON_PROPERTY_AUTOMATIC_DETECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutomaticDetection(ResponseTimeDegradationAutodetectionConfig automaticDetection) {
    this.automaticDetection = automaticDetection;
  }


  public ResponseTimeDegradationDetectionConfig thresholds(ResponseTimeDegradationThresholdConfig thresholds) {
    this.thresholds = thresholds;
    return this;
  }

   /**
   * Get thresholds
   * @return thresholds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_THRESHOLDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ResponseTimeDegradationThresholdConfig getThresholds() {
    return thresholds;
  }


  @JsonProperty(JSON_PROPERTY_THRESHOLDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setThresholds(ResponseTimeDegradationThresholdConfig thresholds) {
    this.thresholds = thresholds;
  }


  /**
   * Return true if this ResponseTimeDegradationDetectionConfig object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseTimeDegradationDetectionConfig responseTimeDegradationDetectionConfig = (ResponseTimeDegradationDetectionConfig) o;
    return Objects.equals(this.detectionMode, responseTimeDegradationDetectionConfig.detectionMode) &&
        Objects.equals(this.automaticDetection, responseTimeDegradationDetectionConfig.automaticDetection) &&
        Objects.equals(this.thresholds, responseTimeDegradationDetectionConfig.thresholds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(detectionMode, automaticDetection, thresholds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseTimeDegradationDetectionConfig {\n");
    sb.append("    detectionMode: ").append(toIndentedString(detectionMode)).append("\n");
    sb.append("    automaticDetection: ").append(toIndentedString(automaticDetection)).append("\n");
    sb.append("    thresholds: ").append(toIndentedString(thresholds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

