/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.UserActionPropertyFilter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * User actions filter of the calculated web application metric.   Only user actions matching the provided criteria are used for metric calculation.   A user action must match **all** the criteria.
 */
@ApiModel(description = "User actions filter of the calculated web application metric.   Only user actions matching the provided criteria are used for metric calculation.   A user action must match **all** the criteria.")
@JsonPropertyOrder({
  UserActionFilter.JSON_PROPERTY_ACTION_DURATION_FROM_MILLISECONDS,
  UserActionFilter.JSON_PROPERTY_ACTION_DURATION_TO_MILLISECONDS,
  UserActionFilter.JSON_PROPERTY_LOAD_ACTION,
  UserActionFilter.JSON_PROPERTY_XHR_ACTION,
  UserActionFilter.JSON_PROPERTY_XHR_ROUTE_CHANGE_ACTION,
  UserActionFilter.JSON_PROPERTY_CUSTOM_ACTION,
  UserActionFilter.JSON_PROPERTY_APDEX,
  UserActionFilter.JSON_PROPERTY_DOMAIN,
  UserActionFilter.JSON_PROPERTY_USER_ACTION_NAME,
  UserActionFilter.JSON_PROPERTY_REAL_USER,
  UserActionFilter.JSON_PROPERTY_ROBOT,
  UserActionFilter.JSON_PROPERTY_SYNTHETIC,
  UserActionFilter.JSON_PROPERTY_BROWSER_FAMILY,
  UserActionFilter.JSON_PROPERTY_BROWSER_TYPE,
  UserActionFilter.JSON_PROPERTY_BROWSER_VERSION,
  UserActionFilter.JSON_PROPERTY_HAS_CUSTOM_ERRORS,
  UserActionFilter.JSON_PROPERTY_HAS_ANY_ERROR,
  UserActionFilter.JSON_PROPERTY_HAS_HTTP_ERRORS,
  UserActionFilter.JSON_PROPERTY_HAS_JAVASCRIPT_ERRORS,
  UserActionFilter.JSON_PROPERTY_CITY,
  UserActionFilter.JSON_PROPERTY_CONTINENT,
  UserActionFilter.JSON_PROPERTY_COUNTRY,
  UserActionFilter.JSON_PROPERTY_REGION,
  UserActionFilter.JSON_PROPERTY_IP,
  UserActionFilter.JSON_PROPERTY_IP_V6_TRAFFIC,
  UserActionFilter.JSON_PROPERTY_OS_FAMILY,
  UserActionFilter.JSON_PROPERTY_OS_VERSION,
  UserActionFilter.JSON_PROPERTY_HTTP_ERROR_CODE,
  UserActionFilter.JSON_PROPERTY_HTTP_ERROR_CODE_TO,
  UserActionFilter.JSON_PROPERTY_HTTP_PATH,
  UserActionFilter.JSON_PROPERTY_CUSTOM_ERROR_TYPE,
  UserActionFilter.JSON_PROPERTY_CUSTOM_ERROR_NAME,
  UserActionFilter.JSON_PROPERTY_USER_ACTION_PROPERTIES,
  UserActionFilter.JSON_PROPERTY_TARGET_VIEW_NAME,
  UserActionFilter.JSON_PROPERTY_TARGET_VIEW_NAME_MATCH_TYPE,
  UserActionFilter.JSON_PROPERTY_TARGET_VIEW_GROUP,
  UserActionFilter.JSON_PROPERTY_TARGET_VIEW_GROUP_NAME_MATCH_TYPE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class UserActionFilter {
  public static final String JSON_PROPERTY_ACTION_DURATION_FROM_MILLISECONDS = "actionDurationFromMilliseconds";
  private Integer actionDurationFromMilliseconds;

  public static final String JSON_PROPERTY_ACTION_DURATION_TO_MILLISECONDS = "actionDurationToMilliseconds";
  private Integer actionDurationToMilliseconds;

  public static final String JSON_PROPERTY_LOAD_ACTION = "loadAction";
  private Boolean loadAction;

  public static final String JSON_PROPERTY_XHR_ACTION = "xhrAction";
  private Boolean xhrAction;

  public static final String JSON_PROPERTY_XHR_ROUTE_CHANGE_ACTION = "xhrRouteChangeAction";
  private Boolean xhrRouteChangeAction;

  public static final String JSON_PROPERTY_CUSTOM_ACTION = "customAction";
  private Boolean customAction;

  /**
   * Only actions with the specified Apdex score are included in the metric calculation.
   */
  public enum ApdexEnum {
    FRUSTRATED("Frustrated"),
    
    SATISFIED("Satisfied"),
    
    TOLERATING("Tolerating"),
    
    UNKNOWN("Unknown");

    private String value;

    ApdexEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ApdexEnum fromValue(String value) {
      for (ApdexEnum b : ApdexEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_APDEX = "apdex";
  private ApdexEnum apdex;

  public static final String JSON_PROPERTY_DOMAIN = "domain";
  private String domain;

  public static final String JSON_PROPERTY_USER_ACTION_NAME = "userActionName";
  private String userActionName;

  public static final String JSON_PROPERTY_REAL_USER = "realUser";
  private Boolean realUser;

  public static final String JSON_PROPERTY_ROBOT = "robot";
  private Boolean robot;

  public static final String JSON_PROPERTY_SYNTHETIC = "synthetic";
  private Boolean synthetic;

  public static final String JSON_PROPERTY_BROWSER_FAMILY = "browserFamily";
  private String browserFamily;

  public static final String JSON_PROPERTY_BROWSER_TYPE = "browserType";
  private String browserType;

  public static final String JSON_PROPERTY_BROWSER_VERSION = "browserVersion";
  private String browserVersion;

  public static final String JSON_PROPERTY_HAS_CUSTOM_ERRORS = "hasCustomErrors";
  private Boolean hasCustomErrors;

  public static final String JSON_PROPERTY_HAS_ANY_ERROR = "hasAnyError";
  private Boolean hasAnyError;

  public static final String JSON_PROPERTY_HAS_HTTP_ERRORS = "hasHttpErrors";
  private Boolean hasHttpErrors;

  public static final String JSON_PROPERTY_HAS_JAVASCRIPT_ERRORS = "hasJavascriptErrors";
  private Boolean hasJavascriptErrors;

  public static final String JSON_PROPERTY_CITY = "city";
  private String city;

  public static final String JSON_PROPERTY_CONTINENT = "continent";
  private String continent;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private String country;

  public static final String JSON_PROPERTY_REGION = "region";
  private String region;

  public static final String JSON_PROPERTY_IP = "ip";
  private String ip;

  public static final String JSON_PROPERTY_IP_V6_TRAFFIC = "ipV6Traffic";
  private Boolean ipV6Traffic;

  public static final String JSON_PROPERTY_OS_FAMILY = "osFamily";
  private String osFamily;

  public static final String JSON_PROPERTY_OS_VERSION = "osVersion";
  private String osVersion;

  public static final String JSON_PROPERTY_HTTP_ERROR_CODE = "httpErrorCode";
  private Integer httpErrorCode;

  public static final String JSON_PROPERTY_HTTP_ERROR_CODE_TO = "httpErrorCodeTo";
  private Integer httpErrorCodeTo;

  public static final String JSON_PROPERTY_HTTP_PATH = "httpPath";
  private String httpPath;

  public static final String JSON_PROPERTY_CUSTOM_ERROR_TYPE = "customErrorType";
  private String customErrorType;

  public static final String JSON_PROPERTY_CUSTOM_ERROR_NAME = "customErrorName";
  private String customErrorName;

  public static final String JSON_PROPERTY_USER_ACTION_PROPERTIES = "userActionProperties";
  private List<UserActionPropertyFilter> userActionProperties = null;

  public static final String JSON_PROPERTY_TARGET_VIEW_NAME = "targetViewName";
  private String targetViewName;

  /**
   * Specifies the match type of the view name filter, e.g. using &#x60;Contains&#x60; or &#x60;Equals&#x60;. Defaults to &#x60;Equals&#x60;.
   */
  public enum TargetViewNameMatchTypeEnum {
    CONTAINS("Contains"),
    
    EQUALS("Equals");

    private String value;

    TargetViewNameMatchTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TargetViewNameMatchTypeEnum fromValue(String value) {
      for (TargetViewNameMatchTypeEnum b : TargetViewNameMatchTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TARGET_VIEW_NAME_MATCH_TYPE = "targetViewNameMatchType";
  private TargetViewNameMatchTypeEnum targetViewNameMatchType;

  public static final String JSON_PROPERTY_TARGET_VIEW_GROUP = "targetViewGroup";
  private String targetViewGroup;

  /**
   * Specifies the match type of the view group filter, e.g. using &#x60;Contains&#x60; or &#x60;Equals&#x60;. Defaults to &#x60;Equals&#x60;.
   */
  public enum TargetViewGroupNameMatchTypeEnum {
    CONTAINS("Contains"),
    
    EQUALS("Equals");

    private String value;

    TargetViewGroupNameMatchTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TargetViewGroupNameMatchTypeEnum fromValue(String value) {
      for (TargetViewGroupNameMatchTypeEnum b : TargetViewGroupNameMatchTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TARGET_VIEW_GROUP_NAME_MATCH_TYPE = "targetViewGroupNameMatchType";
  private TargetViewGroupNameMatchTypeEnum targetViewGroupNameMatchType;

  public UserActionFilter() { 
  }

  public UserActionFilter actionDurationFromMilliseconds(Integer actionDurationFromMilliseconds) {
    this.actionDurationFromMilliseconds = actionDurationFromMilliseconds;
    return this;
  }

   /**
   * Only actions with a duration more than or equal to this value (in milliseconds) are included in the metric calculation.
   * @return actionDurationFromMilliseconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions with a duration more than or equal to this value (in milliseconds) are included in the metric calculation.")
  @JsonProperty(JSON_PROPERTY_ACTION_DURATION_FROM_MILLISECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getActionDurationFromMilliseconds() {
    return actionDurationFromMilliseconds;
  }


  @JsonProperty(JSON_PROPERTY_ACTION_DURATION_FROM_MILLISECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActionDurationFromMilliseconds(Integer actionDurationFromMilliseconds) {
    this.actionDurationFromMilliseconds = actionDurationFromMilliseconds;
  }


  public UserActionFilter actionDurationToMilliseconds(Integer actionDurationToMilliseconds) {
    this.actionDurationToMilliseconds = actionDurationToMilliseconds;
    return this;
  }

   /**
   * Only actions with a duration less than or equal to this value (in milliseconds) are included in the metric calculation.
   * @return actionDurationToMilliseconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions with a duration less than or equal to this value (in milliseconds) are included in the metric calculation.")
  @JsonProperty(JSON_PROPERTY_ACTION_DURATION_TO_MILLISECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getActionDurationToMilliseconds() {
    return actionDurationToMilliseconds;
  }


  @JsonProperty(JSON_PROPERTY_ACTION_DURATION_TO_MILLISECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActionDurationToMilliseconds(Integer actionDurationToMilliseconds) {
    this.actionDurationToMilliseconds = actionDurationToMilliseconds;
  }


  public UserActionFilter loadAction(Boolean loadAction) {
    this.loadAction = loadAction;
    return this;
  }

   /**
   * The status of load actions in the metric calculation:   * &#x60;true&#x60;: Load actions are included.  * &#x60;false&#x60;: All actions are included.
   * @return loadAction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The status of load actions in the metric calculation:   * `true`: Load actions are included.  * `false`: All actions are included.")
  @JsonProperty(JSON_PROPERTY_LOAD_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLoadAction() {
    return loadAction;
  }


  @JsonProperty(JSON_PROPERTY_LOAD_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoadAction(Boolean loadAction) {
    this.loadAction = loadAction;
  }


  public UserActionFilter xhrAction(Boolean xhrAction) {
    this.xhrAction = xhrAction;
    return this;
  }

   /**
   * The status of XHR actions in the metric calculation:   * &#x60;true&#x60;: XHR actions are included.  * &#x60;false&#x60;: All actions are included.
   * @return xhrAction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The status of XHR actions in the metric calculation:   * `true`: XHR actions are included.  * `false`: All actions are included.")
  @JsonProperty(JSON_PROPERTY_XHR_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getXhrAction() {
    return xhrAction;
  }


  @JsonProperty(JSON_PROPERTY_XHR_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setXhrAction(Boolean xhrAction) {
    this.xhrAction = xhrAction;
  }


  public UserActionFilter xhrRouteChangeAction(Boolean xhrRouteChangeAction) {
    this.xhrRouteChangeAction = xhrRouteChangeAction;
    return this;
  }

   /**
   * The status of route change actions in the metric calculation:   * &#x60;true&#x60;: Route change actions are included.  * &#x60;false&#x60;: All actions are included.
   * @return xhrRouteChangeAction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The status of route change actions in the metric calculation:   * `true`: Route change actions are included.  * `false`: All actions are included.")
  @JsonProperty(JSON_PROPERTY_XHR_ROUTE_CHANGE_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getXhrRouteChangeAction() {
    return xhrRouteChangeAction;
  }


  @JsonProperty(JSON_PROPERTY_XHR_ROUTE_CHANGE_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setXhrRouteChangeAction(Boolean xhrRouteChangeAction) {
    this.xhrRouteChangeAction = xhrRouteChangeAction;
  }


  public UserActionFilter customAction(Boolean customAction) {
    this.customAction = customAction;
    return this;
  }

   /**
   * The status of custom actions in the metric calculation:   * &#x60;true&#x60;: Custom actions are included.  * &#x60;false&#x60;: All actions are included.
   * @return customAction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The status of custom actions in the metric calculation:   * `true`: Custom actions are included.  * `false`: All actions are included.")
  @JsonProperty(JSON_PROPERTY_CUSTOM_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCustomAction() {
    return customAction;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomAction(Boolean customAction) {
    this.customAction = customAction;
  }


  public UserActionFilter apdex(ApdexEnum apdex) {
    this.apdex = apdex;
    return this;
  }

   /**
   * Only actions with the specified Apdex score are included in the metric calculation.
   * @return apdex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions with the specified Apdex score are included in the metric calculation.")
  @JsonProperty(JSON_PROPERTY_APDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApdexEnum getApdex() {
    return apdex;
  }


  @JsonProperty(JSON_PROPERTY_APDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApdex(ApdexEnum apdex) {
    this.apdex = apdex;
  }


  public UserActionFilter domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * Only user actions coming from the specified domain are included in the metric calculation.    The EQUALS operator applies.
   * @return domain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only user actions coming from the specified domain are included in the metric calculation.    The EQUALS operator applies.")
  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDomain() {
    return domain;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomain(String domain) {
    this.domain = domain;
  }


  public UserActionFilter userActionName(String userActionName) {
    this.userActionName = userActionName;
    return this;
  }

   /**
   * Only actions with this name are included in the metric calculation.    The EQUALS operator applies.
   * @return userActionName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions with this name are included in the metric calculation.    The EQUALS operator applies.")
  @JsonProperty(JSON_PROPERTY_USER_ACTION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserActionName() {
    return userActionName;
  }


  @JsonProperty(JSON_PROPERTY_USER_ACTION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserActionName(String userActionName) {
    this.userActionName = userActionName;
  }


  public UserActionFilter realUser(Boolean realUser) {
    this.realUser = realUser;
    return this;
  }

   /**
   * The status of actions coming from real users in the metric calculation:   * &#x60;true&#x60;: Only actions from real users are included.  * &#x60;false&#x60;: All actions are included.
   * @return realUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The status of actions coming from real users in the metric calculation:   * `true`: Only actions from real users are included.  * `false`: All actions are included.")
  @JsonProperty(JSON_PROPERTY_REAL_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRealUser() {
    return realUser;
  }


  @JsonProperty(JSON_PROPERTY_REAL_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRealUser(Boolean realUser) {
    this.realUser = realUser;
  }


  public UserActionFilter robot(Boolean robot) {
    this.robot = robot;
    return this;
  }

   /**
   * The status of actions coming from robots in the metric calculation:   * &#x60;true&#x60;: Only actions from robots are included.  * &#x60;false&#x60;: All actions are included.
   * @return robot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The status of actions coming from robots in the metric calculation:   * `true`: Only actions from robots are included.  * `false`: All actions are included.")
  @JsonProperty(JSON_PROPERTY_ROBOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRobot() {
    return robot;
  }


  @JsonProperty(JSON_PROPERTY_ROBOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRobot(Boolean robot) {
    this.robot = robot;
  }


  public UserActionFilter synthetic(Boolean synthetic) {
    this.synthetic = synthetic;
    return this;
  }

   /**
   * The status of actions coming from synthetic monitors in the metric calculation:   * &#x60;true&#x60;: Only actions from synthetic monitors are included.  * &#x60;false&#x60;: All actions are included.
   * @return synthetic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The status of actions coming from synthetic monitors in the metric calculation:   * `true`: Only actions from synthetic monitors are included.  * `false`: All actions are included.")
  @JsonProperty(JSON_PROPERTY_SYNTHETIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSynthetic() {
    return synthetic;
  }


  @JsonProperty(JSON_PROPERTY_SYNTHETIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSynthetic(Boolean synthetic) {
    this.synthetic = synthetic;
  }


  public UserActionFilter browserFamily(String browserFamily) {
    this.browserFamily = browserFamily;
    return this;
  }

   /**
   * Only user actions coming from the specified browser family are included in the metric calculation.     The EQUALS operator applies.
   * @return browserFamily
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only user actions coming from the specified browser family are included in the metric calculation.     The EQUALS operator applies.")
  @JsonProperty(JSON_PROPERTY_BROWSER_FAMILY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBrowserFamily() {
    return browserFamily;
  }


  @JsonProperty(JSON_PROPERTY_BROWSER_FAMILY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBrowserFamily(String browserFamily) {
    this.browserFamily = browserFamily;
  }


  public UserActionFilter browserType(String browserType) {
    this.browserType = browserType;
    return this;
  }

   /**
   * Only user actions coming from the specified browser type are included in the metric calculation.     The EQUALS operator applies.
   * @return browserType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only user actions coming from the specified browser type are included in the metric calculation.     The EQUALS operator applies.")
  @JsonProperty(JSON_PROPERTY_BROWSER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBrowserType() {
    return browserType;
  }


  @JsonProperty(JSON_PROPERTY_BROWSER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBrowserType(String browserType) {
    this.browserType = browserType;
  }


  public UserActionFilter browserVersion(String browserVersion) {
    this.browserVersion = browserVersion;
    return this;
  }

   /**
   * Only user actions coming from the specified browser version are included in the metric calculation.     The EQUALS operator applies.
   * @return browserVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only user actions coming from the specified browser version are included in the metric calculation.     The EQUALS operator applies.")
  @JsonProperty(JSON_PROPERTY_BROWSER_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBrowserVersion() {
    return browserVersion;
  }


  @JsonProperty(JSON_PROPERTY_BROWSER_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBrowserVersion(String browserVersion) {
    this.browserVersion = browserVersion;
  }


  public UserActionFilter hasCustomErrors(Boolean hasCustomErrors) {
    this.hasCustomErrors = hasCustomErrors;
    return this;
  }

   /**
   * The custom error status of the actions to be included in the metric calculation:   * &#x60;true&#x60;: Only actions with custom errors are included.  * &#x60;false&#x60;: All actions are included.
   * @return hasCustomErrors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The custom error status of the actions to be included in the metric calculation:   * `true`: Only actions with custom errors are included.  * `false`: All actions are included.")
  @JsonProperty(JSON_PROPERTY_HAS_CUSTOM_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasCustomErrors() {
    return hasCustomErrors;
  }


  @JsonProperty(JSON_PROPERTY_HAS_CUSTOM_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasCustomErrors(Boolean hasCustomErrors) {
    this.hasCustomErrors = hasCustomErrors;
  }


  public UserActionFilter hasAnyError(Boolean hasAnyError) {
    this.hasAnyError = hasAnyError;
    return this;
  }

   /**
   * The error status of the actions to be included in the metric calculation:   * &#x60;true&#x60;: Only actions that have any errors are included.  * &#x60;false&#x60;: All actions are included.
   * @return hasAnyError
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The error status of the actions to be included in the metric calculation:   * `true`: Only actions that have any errors are included.  * `false`: All actions are included.")
  @JsonProperty(JSON_PROPERTY_HAS_ANY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasAnyError() {
    return hasAnyError;
  }


  @JsonProperty(JSON_PROPERTY_HAS_ANY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasAnyError(Boolean hasAnyError) {
    this.hasAnyError = hasAnyError;
  }


  public UserActionFilter hasHttpErrors(Boolean hasHttpErrors) {
    this.hasHttpErrors = hasHttpErrors;
    return this;
  }

   /**
   * The request error status of the actions to be included in the metric calculation:   * &#x60;true&#x60;: Only actions with request errors (HTTP errors, failed images, CSP rule violations) are included.  * &#x60;false&#x60;: All actions are included.
   * @return hasHttpErrors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The request error status of the actions to be included in the metric calculation:   * `true`: Only actions with request errors (HTTP errors, failed images, CSP rule violations) are included.  * `false`: All actions are included.")
  @JsonProperty(JSON_PROPERTY_HAS_HTTP_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasHttpErrors() {
    return hasHttpErrors;
  }


  @JsonProperty(JSON_PROPERTY_HAS_HTTP_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasHttpErrors(Boolean hasHttpErrors) {
    this.hasHttpErrors = hasHttpErrors;
  }


  public UserActionFilter hasJavascriptErrors(Boolean hasJavascriptErrors) {
    this.hasJavascriptErrors = hasJavascriptErrors;
    return this;
  }

   /**
   * The JavaScript error status of the actions to be included in the metric calculation:   * &#x60;true&#x60;: Only actions with JavaScript errors are included.  * &#x60;false&#x60;: All actions are included.
   * @return hasJavascriptErrors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The JavaScript error status of the actions to be included in the metric calculation:   * `true`: Only actions with JavaScript errors are included.  * `false`: All actions are included.")
  @JsonProperty(JSON_PROPERTY_HAS_JAVASCRIPT_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasJavascriptErrors() {
    return hasJavascriptErrors;
  }


  @JsonProperty(JSON_PROPERTY_HAS_JAVASCRIPT_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasJavascriptErrors(Boolean hasJavascriptErrors) {
    this.hasJavascriptErrors = hasJavascriptErrors;
  }


  public UserActionFilter city(String city) {
    this.city = city;
    return this;
  }

   /**
   * Only actions of users from this city are included in the metric calculation.    Specify geolocation ID here.
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions of users from this city are included in the metric calculation.    Specify geolocation ID here.")
  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCity() {
    return city;
  }


  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCity(String city) {
    this.city = city;
  }


  public UserActionFilter continent(String continent) {
    this.continent = continent;
    return this;
  }

   /**
   * Only actions of users from this continent are included in the metric calculation.    Specify geolocation ID here.
   * @return continent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions of users from this continent are included in the metric calculation.    Specify geolocation ID here.")
  @JsonProperty(JSON_PROPERTY_CONTINENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContinent() {
    return continent;
  }


  @JsonProperty(JSON_PROPERTY_CONTINENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContinent(String continent) {
    this.continent = continent;
  }


  public UserActionFilter country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Only actions of users from this country are included in the metric calculation.    Specify geolocation ID here.
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions of users from this country are included in the metric calculation.    Specify geolocation ID here.")
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(String country) {
    this.country = country;
  }


  public UserActionFilter region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Only actions of users from this region are included in the metric calculation.    Specify geolocation ID here.
   * @return region
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions of users from this region are included in the metric calculation.    Specify geolocation ID here.")
  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRegion() {
    return region;
  }


  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegion(String region) {
    this.region = region;
  }


  public UserActionFilter ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * Only actions coming from this IP address are included in the metric calculation.     The EQUALS operator applies.
   * @return ip
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions coming from this IP address are included in the metric calculation.     The EQUALS operator applies.")
  @JsonProperty(JSON_PROPERTY_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIp() {
    return ip;
  }


  @JsonProperty(JSON_PROPERTY_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIp(String ip) {
    this.ip = ip;
  }


  public UserActionFilter ipV6Traffic(Boolean ipV6Traffic) {
    this.ipV6Traffic = ipV6Traffic;
    return this;
  }

   /**
   * The IPv6 status of the actions to be included in the metric calculation:   * &#x60;true&#x60;: Only actions coming from IPv6 are included.  * &#x60;false&#x60;: All actions are included.
   * @return ipV6Traffic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IPv6 status of the actions to be included in the metric calculation:   * `true`: Only actions coming from IPv6 are included.  * `false`: All actions are included.")
  @JsonProperty(JSON_PROPERTY_IP_V6_TRAFFIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIpV6Traffic() {
    return ipV6Traffic;
  }


  @JsonProperty(JSON_PROPERTY_IP_V6_TRAFFIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpV6Traffic(Boolean ipV6Traffic) {
    this.ipV6Traffic = ipV6Traffic;
  }


  public UserActionFilter osFamily(String osFamily) {
    this.osFamily = osFamily;
    return this;
  }

   /**
   * Only actions coming from this OS family are included in the metric calculation.    Specify the OS ID here.
   * @return osFamily
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions coming from this OS family are included in the metric calculation.    Specify the OS ID here.")
  @JsonProperty(JSON_PROPERTY_OS_FAMILY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOsFamily() {
    return osFamily;
  }


  @JsonProperty(JSON_PROPERTY_OS_FAMILY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOsFamily(String osFamily) {
    this.osFamily = osFamily;
  }


  public UserActionFilter osVersion(String osVersion) {
    this.osVersion = osVersion;
    return this;
  }

   /**
   * Only actions coming from this OS version are included in the metric calculation.    Specify the OS ID here.
   * @return osVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions coming from this OS version are included in the metric calculation.    Specify the OS ID here.")
  @JsonProperty(JSON_PROPERTY_OS_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOsVersion() {
    return osVersion;
  }


  @JsonProperty(JSON_PROPERTY_OS_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOsVersion(String osVersion) {
    this.osVersion = osVersion;
  }


  public UserActionFilter httpErrorCode(Integer httpErrorCode) {
    this.httpErrorCode = httpErrorCode;
    return this;
  }

   /**
   * The HTTP error status code of the actions to be included in the metric calculation.
   * @return httpErrorCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The HTTP error status code of the actions to be included in the metric calculation.")
  @JsonProperty(JSON_PROPERTY_HTTP_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getHttpErrorCode() {
    return httpErrorCode;
  }


  @JsonProperty(JSON_PROPERTY_HTTP_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHttpErrorCode(Integer httpErrorCode) {
    this.httpErrorCode = httpErrorCode;
  }


  public UserActionFilter httpErrorCodeTo(Integer httpErrorCodeTo) {
    this.httpErrorCodeTo = httpErrorCodeTo;
    return this;
  }

   /**
   * Can be used in combination with &#x60;httpErrorCode&#x60; to define a range of error codes that will be included in the metric calculation.
   * @return httpErrorCodeTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Can be used in combination with `httpErrorCode` to define a range of error codes that will be included in the metric calculation.")
  @JsonProperty(JSON_PROPERTY_HTTP_ERROR_CODE_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getHttpErrorCodeTo() {
    return httpErrorCodeTo;
  }


  @JsonProperty(JSON_PROPERTY_HTTP_ERROR_CODE_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHttpErrorCodeTo(Integer httpErrorCodeTo) {
    this.httpErrorCodeTo = httpErrorCodeTo;
  }


  public UserActionFilter httpPath(String httpPath) {
    this.httpPath = httpPath;
    return this;
  }

   /**
   * The request path that has been determined to be the origin of an HTTP error of the actions to be included in the metric calculation.
   * @return httpPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The request path that has been determined to be the origin of an HTTP error of the actions to be included in the metric calculation.")
  @JsonProperty(JSON_PROPERTY_HTTP_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHttpPath() {
    return httpPath;
  }


  @JsonProperty(JSON_PROPERTY_HTTP_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHttpPath(String httpPath) {
    this.httpPath = httpPath;
  }


  public UserActionFilter customErrorType(String customErrorType) {
    this.customErrorType = customErrorType;
    return this;
  }

   /**
   * The custom error type of the actions to be included in the metric calculation.
   * @return customErrorType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The custom error type of the actions to be included in the metric calculation.")
  @JsonProperty(JSON_PROPERTY_CUSTOM_ERROR_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCustomErrorType() {
    return customErrorType;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_ERROR_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomErrorType(String customErrorType) {
    this.customErrorType = customErrorType;
  }


  public UserActionFilter customErrorName(String customErrorName) {
    this.customErrorName = customErrorName;
    return this;
  }

   /**
   * The custom error name of the actions to be included in the metric calculation.
   * @return customErrorName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The custom error name of the actions to be included in the metric calculation.")
  @JsonProperty(JSON_PROPERTY_CUSTOM_ERROR_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCustomErrorName() {
    return customErrorName;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_ERROR_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomErrorName(String customErrorName) {
    this.customErrorName = customErrorName;
  }


  public UserActionFilter userActionProperties(List<UserActionPropertyFilter> userActionProperties) {
    this.userActionProperties = userActionProperties;
    return this;
  }

  public UserActionFilter addUserActionPropertiesItem(UserActionPropertyFilter userActionPropertiesItem) {
    if (this.userActionProperties == null) {
      this.userActionProperties = new ArrayList<>();
    }
    this.userActionProperties.add(userActionPropertiesItem);
    return this;
  }

   /**
   * Only actions with the specified properties are included in the metric calculation.
   * @return userActionProperties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions with the specified properties are included in the metric calculation.")
  @JsonProperty(JSON_PROPERTY_USER_ACTION_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UserActionPropertyFilter> getUserActionProperties() {
    return userActionProperties;
  }


  @JsonProperty(JSON_PROPERTY_USER_ACTION_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserActionProperties(List<UserActionPropertyFilter> userActionProperties) {
    this.userActionProperties = userActionProperties;
  }


  public UserActionFilter targetViewName(String targetViewName) {
    this.targetViewName = targetViewName;
    return this;
  }

   /**
   * Only actions on the specified view are included in the metric calculation.
   * @return targetViewName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions on the specified view are included in the metric calculation.")
  @JsonProperty(JSON_PROPERTY_TARGET_VIEW_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTargetViewName() {
    return targetViewName;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_VIEW_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTargetViewName(String targetViewName) {
    this.targetViewName = targetViewName;
  }


  public UserActionFilter targetViewNameMatchType(TargetViewNameMatchTypeEnum targetViewNameMatchType) {
    this.targetViewNameMatchType = targetViewNameMatchType;
    return this;
  }

   /**
   * Specifies the match type of the view name filter, e.g. using &#x60;Contains&#x60; or &#x60;Equals&#x60;. Defaults to &#x60;Equals&#x60;.
   * @return targetViewNameMatchType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the match type of the view name filter, e.g. using `Contains` or `Equals`. Defaults to `Equals`.")
  @JsonProperty(JSON_PROPERTY_TARGET_VIEW_NAME_MATCH_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TargetViewNameMatchTypeEnum getTargetViewNameMatchType() {
    return targetViewNameMatchType;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_VIEW_NAME_MATCH_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTargetViewNameMatchType(TargetViewNameMatchTypeEnum targetViewNameMatchType) {
    this.targetViewNameMatchType = targetViewNameMatchType;
  }


  public UserActionFilter targetViewGroup(String targetViewGroup) {
    this.targetViewGroup = targetViewGroup;
    return this;
  }

   /**
   * Only actions on the specified group of views are included in the metric calculation.
   * @return targetViewGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions on the specified group of views are included in the metric calculation.")
  @JsonProperty(JSON_PROPERTY_TARGET_VIEW_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTargetViewGroup() {
    return targetViewGroup;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_VIEW_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTargetViewGroup(String targetViewGroup) {
    this.targetViewGroup = targetViewGroup;
  }


  public UserActionFilter targetViewGroupNameMatchType(TargetViewGroupNameMatchTypeEnum targetViewGroupNameMatchType) {
    this.targetViewGroupNameMatchType = targetViewGroupNameMatchType;
    return this;
  }

   /**
   * Specifies the match type of the view group filter, e.g. using &#x60;Contains&#x60; or &#x60;Equals&#x60;. Defaults to &#x60;Equals&#x60;.
   * @return targetViewGroupNameMatchType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the match type of the view group filter, e.g. using `Contains` or `Equals`. Defaults to `Equals`.")
  @JsonProperty(JSON_PROPERTY_TARGET_VIEW_GROUP_NAME_MATCH_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TargetViewGroupNameMatchTypeEnum getTargetViewGroupNameMatchType() {
    return targetViewGroupNameMatchType;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_VIEW_GROUP_NAME_MATCH_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTargetViewGroupNameMatchType(TargetViewGroupNameMatchTypeEnum targetViewGroupNameMatchType) {
    this.targetViewGroupNameMatchType = targetViewGroupNameMatchType;
  }


  /**
   * Return true if this UserActionFilter object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserActionFilter userActionFilter = (UserActionFilter) o;
    return Objects.equals(this.actionDurationFromMilliseconds, userActionFilter.actionDurationFromMilliseconds) &&
        Objects.equals(this.actionDurationToMilliseconds, userActionFilter.actionDurationToMilliseconds) &&
        Objects.equals(this.loadAction, userActionFilter.loadAction) &&
        Objects.equals(this.xhrAction, userActionFilter.xhrAction) &&
        Objects.equals(this.xhrRouteChangeAction, userActionFilter.xhrRouteChangeAction) &&
        Objects.equals(this.customAction, userActionFilter.customAction) &&
        Objects.equals(this.apdex, userActionFilter.apdex) &&
        Objects.equals(this.domain, userActionFilter.domain) &&
        Objects.equals(this.userActionName, userActionFilter.userActionName) &&
        Objects.equals(this.realUser, userActionFilter.realUser) &&
        Objects.equals(this.robot, userActionFilter.robot) &&
        Objects.equals(this.synthetic, userActionFilter.synthetic) &&
        Objects.equals(this.browserFamily, userActionFilter.browserFamily) &&
        Objects.equals(this.browserType, userActionFilter.browserType) &&
        Objects.equals(this.browserVersion, userActionFilter.browserVersion) &&
        Objects.equals(this.hasCustomErrors, userActionFilter.hasCustomErrors) &&
        Objects.equals(this.hasAnyError, userActionFilter.hasAnyError) &&
        Objects.equals(this.hasHttpErrors, userActionFilter.hasHttpErrors) &&
        Objects.equals(this.hasJavascriptErrors, userActionFilter.hasJavascriptErrors) &&
        Objects.equals(this.city, userActionFilter.city) &&
        Objects.equals(this.continent, userActionFilter.continent) &&
        Objects.equals(this.country, userActionFilter.country) &&
        Objects.equals(this.region, userActionFilter.region) &&
        Objects.equals(this.ip, userActionFilter.ip) &&
        Objects.equals(this.ipV6Traffic, userActionFilter.ipV6Traffic) &&
        Objects.equals(this.osFamily, userActionFilter.osFamily) &&
        Objects.equals(this.osVersion, userActionFilter.osVersion) &&
        Objects.equals(this.httpErrorCode, userActionFilter.httpErrorCode) &&
        Objects.equals(this.httpErrorCodeTo, userActionFilter.httpErrorCodeTo) &&
        Objects.equals(this.httpPath, userActionFilter.httpPath) &&
        Objects.equals(this.customErrorType, userActionFilter.customErrorType) &&
        Objects.equals(this.customErrorName, userActionFilter.customErrorName) &&
        Objects.equals(this.userActionProperties, userActionFilter.userActionProperties) &&
        Objects.equals(this.targetViewName, userActionFilter.targetViewName) &&
        Objects.equals(this.targetViewNameMatchType, userActionFilter.targetViewNameMatchType) &&
        Objects.equals(this.targetViewGroup, userActionFilter.targetViewGroup) &&
        Objects.equals(this.targetViewGroupNameMatchType, userActionFilter.targetViewGroupNameMatchType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionDurationFromMilliseconds, actionDurationToMilliseconds, loadAction, xhrAction, xhrRouteChangeAction, customAction, apdex, domain, userActionName, realUser, robot, synthetic, browserFamily, browserType, browserVersion, hasCustomErrors, hasAnyError, hasHttpErrors, hasJavascriptErrors, city, continent, country, region, ip, ipV6Traffic, osFamily, osVersion, httpErrorCode, httpErrorCodeTo, httpPath, customErrorType, customErrorName, userActionProperties, targetViewName, targetViewNameMatchType, targetViewGroup, targetViewGroupNameMatchType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserActionFilter {\n");
    sb.append("    actionDurationFromMilliseconds: ").append(toIndentedString(actionDurationFromMilliseconds)).append("\n");
    sb.append("    actionDurationToMilliseconds: ").append(toIndentedString(actionDurationToMilliseconds)).append("\n");
    sb.append("    loadAction: ").append(toIndentedString(loadAction)).append("\n");
    sb.append("    xhrAction: ").append(toIndentedString(xhrAction)).append("\n");
    sb.append("    xhrRouteChangeAction: ").append(toIndentedString(xhrRouteChangeAction)).append("\n");
    sb.append("    customAction: ").append(toIndentedString(customAction)).append("\n");
    sb.append("    apdex: ").append(toIndentedString(apdex)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    userActionName: ").append(toIndentedString(userActionName)).append("\n");
    sb.append("    realUser: ").append(toIndentedString(realUser)).append("\n");
    sb.append("    robot: ").append(toIndentedString(robot)).append("\n");
    sb.append("    synthetic: ").append(toIndentedString(synthetic)).append("\n");
    sb.append("    browserFamily: ").append(toIndentedString(browserFamily)).append("\n");
    sb.append("    browserType: ").append(toIndentedString(browserType)).append("\n");
    sb.append("    browserVersion: ").append(toIndentedString(browserVersion)).append("\n");
    sb.append("    hasCustomErrors: ").append(toIndentedString(hasCustomErrors)).append("\n");
    sb.append("    hasAnyError: ").append(toIndentedString(hasAnyError)).append("\n");
    sb.append("    hasHttpErrors: ").append(toIndentedString(hasHttpErrors)).append("\n");
    sb.append("    hasJavascriptErrors: ").append(toIndentedString(hasJavascriptErrors)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    continent: ").append(toIndentedString(continent)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    ipV6Traffic: ").append(toIndentedString(ipV6Traffic)).append("\n");
    sb.append("    osFamily: ").append(toIndentedString(osFamily)).append("\n");
    sb.append("    osVersion: ").append(toIndentedString(osVersion)).append("\n");
    sb.append("    httpErrorCode: ").append(toIndentedString(httpErrorCode)).append("\n");
    sb.append("    httpErrorCodeTo: ").append(toIndentedString(httpErrorCodeTo)).append("\n");
    sb.append("    httpPath: ").append(toIndentedString(httpPath)).append("\n");
    sb.append("    customErrorType: ").append(toIndentedString(customErrorType)).append("\n");
    sb.append("    customErrorName: ").append(toIndentedString(customErrorName)).append("\n");
    sb.append("    userActionProperties: ").append(toIndentedString(userActionProperties)).append("\n");
    sb.append("    targetViewName: ").append(toIndentedString(targetViewName)).append("\n");
    sb.append("    targetViewNameMatchType: ").append(toIndentedString(targetViewNameMatchType)).append("\n");
    sb.append("    targetViewGroup: ").append(toIndentedString(targetViewGroup)).append("\n");
    sb.append("    targetViewGroupNameMatchType: ").append(toIndentedString(targetViewGroupNameMatchType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

