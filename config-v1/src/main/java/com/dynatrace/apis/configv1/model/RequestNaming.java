/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.Condition;
import com.dynatrace.apis.configv1.model.ConfigurationMetadata;
import com.dynatrace.apis.configv1.model.Placeholder;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The request naming rule.
 */
@ApiModel(description = "The request naming rule.")
@JsonPropertyOrder({
  RequestNaming.JSON_PROPERTY_METADATA,
  RequestNaming.JSON_PROPERTY_ID,
  RequestNaming.JSON_PROPERTY_ORDER,
  RequestNaming.JSON_PROPERTY_ENABLED,
  RequestNaming.JSON_PROPERTY_NAMING_PATTERN,
  RequestNaming.JSON_PROPERTY_MANAGEMENT_ZONES,
  RequestNaming.JSON_PROPERTY_CONDITIONS,
  RequestNaming.JSON_PROPERTY_PLACEHOLDERS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class RequestNaming {
  public static final String JSON_PROPERTY_METADATA = "metadata";
  private ConfigurationMetadata metadata;

  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_ORDER = "order";
  private String order;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_NAMING_PATTERN = "namingPattern";
  private String namingPattern;

  public static final String JSON_PROPERTY_MANAGEMENT_ZONES = "managementZones";
  private List<String> managementZones = null;

  public static final String JSON_PROPERTY_CONDITIONS = "conditions";
  private List<Condition> conditions = new ArrayList<>();

  public static final String JSON_PROPERTY_PLACEHOLDERS = "placeholders";
  private List<Placeholder> placeholders = null;

  public RequestNaming() { 
  }

  public RequestNaming metadata(ConfigurationMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConfigurationMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(ConfigurationMetadata metadata) {
    this.metadata = metadata;
  }


  public RequestNaming id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of the request naming rule.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the request naming rule.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }


  public RequestNaming order(String order) {
    this.order = order;
    return this;
  }

   /**
   * The order string. Sorting request namings alphabetically by their order string determines their relative ordering.  Typically this is managed by Dynatrace internally and will not be present in GET responses nor used if present in PUT/POST requests, except where noted otherwise.
   * @return order
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The order string. Sorting request namings alphabetically by their order string determines their relative ordering.  Typically this is managed by Dynatrace internally and will not be present in GET responses nor used if present in PUT/POST requests, except where noted otherwise.")
  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOrder() {
    return order;
  }


  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrder(String order) {
    this.order = order;
  }


  public RequestNaming enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * The rule is enabled (&#x60;true&#x60;) or disabled (&#x60;false&#x60;).
   * @return enabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The rule is enabled (`true`) or disabled (`false`).")
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public RequestNaming namingPattern(String namingPattern) {
    this.namingPattern = namingPattern;
    return this;
  }

   /**
   * The name to be assigned to matching requests.
   * @return namingPattern
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name to be assigned to matching requests.")
  @JsonProperty(JSON_PROPERTY_NAMING_PATTERN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getNamingPattern() {
    return namingPattern;
  }


  @JsonProperty(JSON_PROPERTY_NAMING_PATTERN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNamingPattern(String namingPattern) {
    this.namingPattern = namingPattern;
  }


  public RequestNaming managementZones(List<String> managementZones) {
    this.managementZones = managementZones;
    return this;
  }

  public RequestNaming addManagementZonesItem(String managementZonesItem) {
    if (this.managementZones == null) {
      this.managementZones = new ArrayList<>();
    }
    this.managementZones.add(managementZonesItem);
    return this;
  }

   /**
   * Specifies the management zones for which this rule should be applied.
   * @return managementZones
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the management zones for which this rule should be applied.")
  @JsonProperty(JSON_PROPERTY_MANAGEMENT_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getManagementZones() {
    return managementZones;
  }


  @JsonProperty(JSON_PROPERTY_MANAGEMENT_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManagementZones(List<String> managementZones) {
    this.managementZones = managementZones;
  }


  public RequestNaming conditions(List<Condition> conditions) {
    this.conditions = conditions;
    return this;
  }

  public RequestNaming addConditionsItem(Condition conditionsItem) {
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * The set of conditions for the request naming rule usage.    You can specify several conditions. The request has to match **all** the specified conditions for the rule to trigger.
   * @return conditions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The set of conditions for the request naming rule usage.    You can specify several conditions. The request has to match **all** the specified conditions for the rule to trigger.")
  @JsonProperty(JSON_PROPERTY_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Condition> getConditions() {
    return conditions;
  }


  @JsonProperty(JSON_PROPERTY_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConditions(List<Condition> conditions) {
    this.conditions = conditions;
  }


  public RequestNaming placeholders(List<Placeholder> placeholders) {
    this.placeholders = placeholders;
    return this;
  }

  public RequestNaming addPlaceholdersItem(Placeholder placeholdersItem) {
    if (this.placeholders == null) {
      this.placeholders = new ArrayList<>();
    }
    this.placeholders.add(placeholdersItem);
    return this;
  }

   /**
   * The list of custom placeholders to be used in the naming pattern.    It enables you to extract a request attribute value or other request attribute and use it in the request naming pattern.
   * @return placeholders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of custom placeholders to be used in the naming pattern.    It enables you to extract a request attribute value or other request attribute and use it in the request naming pattern.")
  @JsonProperty(JSON_PROPERTY_PLACEHOLDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Placeholder> getPlaceholders() {
    return placeholders;
  }


  @JsonProperty(JSON_PROPERTY_PLACEHOLDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlaceholders(List<Placeholder> placeholders) {
    this.placeholders = placeholders;
  }


  /**
   * Return true if this RequestNaming object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestNaming requestNaming = (RequestNaming) o;
    return Objects.equals(this.metadata, requestNaming.metadata) &&
        Objects.equals(this.id, requestNaming.id) &&
        Objects.equals(this.order, requestNaming.order) &&
        Objects.equals(this.enabled, requestNaming.enabled) &&
        Objects.equals(this.namingPattern, requestNaming.namingPattern) &&
        Objects.equals(this.managementZones, requestNaming.managementZones) &&
        Objects.equals(this.conditions, requestNaming.conditions) &&
        Objects.equals(this.placeholders, requestNaming.placeholders);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metadata, id, order, enabled, namingPattern, managementZones, conditions, placeholders);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestNaming {\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    namingPattern: ").append(toIndentedString(namingPattern)).append("\n");
    sb.append("    managementZones: ").append(toIndentedString(managementZones)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    placeholders: ").append(toIndentedString(placeholders)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

