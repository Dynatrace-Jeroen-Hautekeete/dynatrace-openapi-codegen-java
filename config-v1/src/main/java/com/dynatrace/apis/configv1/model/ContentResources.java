/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.ResourceProvider;
import com.dynatrace.apis.configv1.model.ResourceType;
import com.dynatrace.apis.configv1.model.ResourceUrlCleanupRule;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The configuration of content resources.
 */
@ApiModel(description = "The configuration of content resources.")
@JsonPropertyOrder({
  ContentResources.JSON_PROPERTY_RESOURCE_PROVIDERS,
  ContentResources.JSON_PROPERTY_RESOURCE_URL_CLEANUP_RULES,
  ContentResources.JSON_PROPERTY_RESOURCE_TYPES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class ContentResources {
  public static final String JSON_PROPERTY_RESOURCE_PROVIDERS = "resourceProviders";
  private List<ResourceProvider> resourceProviders = null;

  public static final String JSON_PROPERTY_RESOURCE_URL_CLEANUP_RULES = "resourceUrlCleanupRules";
  private List<ResourceUrlCleanupRule> resourceUrlCleanupRules = null;

  public static final String JSON_PROPERTY_RESOURCE_TYPES = "resourceTypes";
  private List<ResourceType> resourceTypes = null;

  public ContentResources() { 
  }

  public ContentResources resourceProviders(List<ResourceProvider> resourceProviders) {
    this.resourceProviders = resourceProviders;
    return this;
  }

  public ContentResources addResourceProvidersItem(ResourceProvider resourceProvidersItem) {
    if (this.resourceProviders == null) {
      this.resourceProviders = new ArrayList<>();
    }
    this.resourceProviders.add(resourceProvidersItem);
    return this;
  }

   /**
   * An ordered list of manually added content providers.   Rules are evaluated from top to bottom; the first matching rules applies.
   * @return resourceProviders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An ordered list of manually added content providers.   Rules are evaluated from top to bottom; the first matching rules applies.")
  @JsonProperty(JSON_PROPERTY_RESOURCE_PROVIDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ResourceProvider> getResourceProviders() {
    return resourceProviders;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE_PROVIDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResourceProviders(List<ResourceProvider> resourceProviders) {
    this.resourceProviders = resourceProviders;
  }


  public ContentResources resourceUrlCleanupRules(List<ResourceUrlCleanupRule> resourceUrlCleanupRules) {
    this.resourceUrlCleanupRules = resourceUrlCleanupRules;
    return this;
  }

  public ContentResources addResourceUrlCleanupRulesItem(ResourceUrlCleanupRule resourceUrlCleanupRulesItem) {
    if (this.resourceUrlCleanupRules == null) {
      this.resourceUrlCleanupRules = new ArrayList<>();
    }
    this.resourceUrlCleanupRules.add(resourceUrlCleanupRulesItem);
    return this;
  }

   /**
   * An ordered list of resource URL cleanup rules.   Rules are evaluated from top to bottom; the first matching rules applies.
   * @return resourceUrlCleanupRules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An ordered list of resource URL cleanup rules.   Rules are evaluated from top to bottom; the first matching rules applies.")
  @JsonProperty(JSON_PROPERTY_RESOURCE_URL_CLEANUP_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ResourceUrlCleanupRule> getResourceUrlCleanupRules() {
    return resourceUrlCleanupRules;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE_URL_CLEANUP_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResourceUrlCleanupRules(List<ResourceUrlCleanupRule> resourceUrlCleanupRules) {
    this.resourceUrlCleanupRules = resourceUrlCleanupRules;
  }


  public ContentResources resourceTypes(List<ResourceType> resourceTypes) {
    this.resourceTypes = resourceTypes;
    return this;
  }

  public ContentResources addResourceTypesItem(ResourceType resourceTypesItem) {
    if (this.resourceTypes == null) {
      this.resourceTypes = new ArrayList<>();
    }
    this.resourceTypes.add(resourceTypesItem);
    return this;
  }

   /**
   * An ordered list of manually defined resource types.   Rules are evaluated from top to bottom; the first matching rules applies.
   * @return resourceTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An ordered list of manually defined resource types.   Rules are evaluated from top to bottom; the first matching rules applies.")
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ResourceType> getResourceTypes() {
    return resourceTypes;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResourceTypes(List<ResourceType> resourceTypes) {
    this.resourceTypes = resourceTypes;
  }


  /**
   * Return true if this ContentResources object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentResources contentResources = (ContentResources) o;
    return Objects.equals(this.resourceProviders, contentResources.resourceProviders) &&
        Objects.equals(this.resourceUrlCleanupRules, contentResources.resourceUrlCleanupRules) &&
        Objects.equals(this.resourceTypes, contentResources.resourceTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resourceProviders, resourceUrlCleanupRules, resourceTypes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentResources {\n");
    sb.append("    resourceProviders: ").append(toIndentedString(resourceProviders)).append("\n");
    sb.append("    resourceUrlCleanupRules: ").append(toIndentedString(resourceUrlCleanupRules)).append("\n");
    sb.append("    resourceTypes: ").append(toIndentedString(resourceTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

