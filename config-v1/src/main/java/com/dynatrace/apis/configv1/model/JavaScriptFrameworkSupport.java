/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Support of various JavaScript frameworks.
 */
@ApiModel(description = "Support of various JavaScript frameworks.")
@JsonPropertyOrder({
  JavaScriptFrameworkSupport.JSON_PROPERTY_ANGULAR,
  JavaScriptFrameworkSupport.JSON_PROPERTY_DOJO,
  JavaScriptFrameworkSupport.JSON_PROPERTY_EXT_J_S,
  JavaScriptFrameworkSupport.JSON_PROPERTY_ICEFACES,
  JavaScriptFrameworkSupport.JSON_PROPERTY_J_QUERY,
  JavaScriptFrameworkSupport.JSON_PROPERTY_MOO_TOOLS,
  JavaScriptFrameworkSupport.JSON_PROPERTY_PROTOTYPE,
  JavaScriptFrameworkSupport.JSON_PROPERTY_ACTIVE_X_OBJECT
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class JavaScriptFrameworkSupport {
  public static final String JSON_PROPERTY_ANGULAR = "angular";
  private Boolean angular;

  public static final String JSON_PROPERTY_DOJO = "dojo";
  private Boolean dojo;

  public static final String JSON_PROPERTY_EXT_J_S = "extJS";
  private Boolean extJS;

  public static final String JSON_PROPERTY_ICEFACES = "icefaces";
  private Boolean icefaces;

  public static final String JSON_PROPERTY_J_QUERY = "jQuery";
  private Boolean jQuery;

  public static final String JSON_PROPERTY_MOO_TOOLS = "mooTools";
  private Boolean mooTools;

  public static final String JSON_PROPERTY_PROTOTYPE = "prototype";
  private Boolean prototype;

  public static final String JSON_PROPERTY_ACTIVE_X_OBJECT = "activeXObject";
  private Boolean activeXObject;

  public JavaScriptFrameworkSupport() { 
  }

  public JavaScriptFrameworkSupport angular(Boolean angular) {
    this.angular = angular;
    return this;
  }

   /**
   * AngularJS and Angular support enabled/disabled.
   * @return angular
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "AngularJS and Angular support enabled/disabled.")
  @JsonProperty(JSON_PROPERTY_ANGULAR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAngular() {
    return angular;
  }


  @JsonProperty(JSON_PROPERTY_ANGULAR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAngular(Boolean angular) {
    this.angular = angular;
  }


  public JavaScriptFrameworkSupport dojo(Boolean dojo) {
    this.dojo = dojo;
    return this;
  }

   /**
   * Dojo support enabled/disabled.
   * @return dojo
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Dojo support enabled/disabled.")
  @JsonProperty(JSON_PROPERTY_DOJO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDojo() {
    return dojo;
  }


  @JsonProperty(JSON_PROPERTY_DOJO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDojo(Boolean dojo) {
    this.dojo = dojo;
  }


  public JavaScriptFrameworkSupport extJS(Boolean extJS) {
    this.extJS = extJS;
    return this;
  }

   /**
   * ExtJS, Sencha Touch support enabled/disabled.
   * @return extJS
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "ExtJS, Sencha Touch support enabled/disabled.")
  @JsonProperty(JSON_PROPERTY_EXT_J_S)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getExtJS() {
    return extJS;
  }


  @JsonProperty(JSON_PROPERTY_EXT_J_S)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExtJS(Boolean extJS) {
    this.extJS = extJS;
  }


  public JavaScriptFrameworkSupport icefaces(Boolean icefaces) {
    this.icefaces = icefaces;
    return this;
  }

   /**
   * ICEfaces support enabled/disabled.
   * @return icefaces
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "ICEfaces support enabled/disabled.")
  @JsonProperty(JSON_PROPERTY_ICEFACES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIcefaces() {
    return icefaces;
  }


  @JsonProperty(JSON_PROPERTY_ICEFACES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIcefaces(Boolean icefaces) {
    this.icefaces = icefaces;
  }


  public JavaScriptFrameworkSupport jQuery(Boolean jQuery) {
    this.jQuery = jQuery;
    return this;
  }

   /**
   * jQuery, Backbone.js support enabled/disabled.
   * @return jQuery
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "jQuery, Backbone.js support enabled/disabled.")
  @JsonProperty(JSON_PROPERTY_J_QUERY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getjQuery() {
    return jQuery;
  }


  @JsonProperty(JSON_PROPERTY_J_QUERY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setjQuery(Boolean jQuery) {
    this.jQuery = jQuery;
  }


  public JavaScriptFrameworkSupport mooTools(Boolean mooTools) {
    this.mooTools = mooTools;
    return this;
  }

   /**
   * MooTools support enabled/disabled.
   * @return mooTools
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "MooTools support enabled/disabled.")
  @JsonProperty(JSON_PROPERTY_MOO_TOOLS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getMooTools() {
    return mooTools;
  }


  @JsonProperty(JSON_PROPERTY_MOO_TOOLS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMooTools(Boolean mooTools) {
    this.mooTools = mooTools;
  }


  public JavaScriptFrameworkSupport prototype(Boolean prototype) {
    this.prototype = prototype;
    return this;
  }

   /**
   * Prototype support enabled/disabled.
   * @return prototype
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Prototype support enabled/disabled.")
  @JsonProperty(JSON_PROPERTY_PROTOTYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getPrototype() {
    return prototype;
  }


  @JsonProperty(JSON_PROPERTY_PROTOTYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPrototype(Boolean prototype) {
    this.prototype = prototype;
  }


  public JavaScriptFrameworkSupport activeXObject(Boolean activeXObject) {
    this.activeXObject = activeXObject;
    return this;
  }

   /**
   * ActiveXObject detection support enabled/disabled.
   * @return activeXObject
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "ActiveXObject detection support enabled/disabled.")
  @JsonProperty(JSON_PROPERTY_ACTIVE_X_OBJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getActiveXObject() {
    return activeXObject;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_X_OBJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setActiveXObject(Boolean activeXObject) {
    this.activeXObject = activeXObject;
  }


  /**
   * Return true if this JavaScriptFrameworkSupport object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JavaScriptFrameworkSupport javaScriptFrameworkSupport = (JavaScriptFrameworkSupport) o;
    return Objects.equals(this.angular, javaScriptFrameworkSupport.angular) &&
        Objects.equals(this.dojo, javaScriptFrameworkSupport.dojo) &&
        Objects.equals(this.extJS, javaScriptFrameworkSupport.extJS) &&
        Objects.equals(this.icefaces, javaScriptFrameworkSupport.icefaces) &&
        Objects.equals(this.jQuery, javaScriptFrameworkSupport.jQuery) &&
        Objects.equals(this.mooTools, javaScriptFrameworkSupport.mooTools) &&
        Objects.equals(this.prototype, javaScriptFrameworkSupport.prototype) &&
        Objects.equals(this.activeXObject, javaScriptFrameworkSupport.activeXObject);
  }

  @Override
  public int hashCode() {
    return Objects.hash(angular, dojo, extJS, icefaces, jQuery, mooTools, prototype, activeXObject);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JavaScriptFrameworkSupport {\n");
    sb.append("    angular: ").append(toIndentedString(angular)).append("\n");
    sb.append("    dojo: ").append(toIndentedString(dojo)).append("\n");
    sb.append("    extJS: ").append(toIndentedString(extJS)).append("\n");
    sb.append("    icefaces: ").append(toIndentedString(icefaces)).append("\n");
    sb.append("    jQuery: ").append(toIndentedString(jQuery)).append("\n");
    sb.append("    mooTools: ").append(toIndentedString(mooTools)).append("\n");
    sb.append("    prototype: ").append(toIndentedString(prototype)).append("\n");
    sb.append("    activeXObject: ").append(toIndentedString(activeXObject)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

