/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * User actions filter of the calculated metric for mobile or custom app.
 */
@ApiModel(description = "User actions filter of the calculated metric for mobile or custom app.")
@JsonPropertyOrder({
  CalculatedMobileMetricUserActionFilter.JSON_PROPERTY_HAS_REPORTED_ERROR,
  CalculatedMobileMetricUserActionFilter.JSON_PROPERTY_HAS_HTTP_ERROR,
  CalculatedMobileMetricUserActionFilter.JSON_PROPERTY_USER_ACTION_NAME,
  CalculatedMobileMetricUserActionFilter.JSON_PROPERTY_APP_VERSION,
  CalculatedMobileMetricUserActionFilter.JSON_PROPERTY_DEVICE,
  CalculatedMobileMetricUserActionFilter.JSON_PROPERTY_MANUFACTURER,
  CalculatedMobileMetricUserActionFilter.JSON_PROPERTY_APDEX,
  CalculatedMobileMetricUserActionFilter.JSON_PROPERTY_OS_FAMILY,
  CalculatedMobileMetricUserActionFilter.JSON_PROPERTY_OS_VERSION,
  CalculatedMobileMetricUserActionFilter.JSON_PROPERTY_CITY,
  CalculatedMobileMetricUserActionFilter.JSON_PROPERTY_CONTINENT,
  CalculatedMobileMetricUserActionFilter.JSON_PROPERTY_COUNTRY,
  CalculatedMobileMetricUserActionFilter.JSON_PROPERTY_REGION,
  CalculatedMobileMetricUserActionFilter.JSON_PROPERTY_ACTION_DURATION_FROM_MILLISECONDS,
  CalculatedMobileMetricUserActionFilter.JSON_PROPERTY_ACTION_DURATION_TO_MILLISECONDS,
  CalculatedMobileMetricUserActionFilter.JSON_PROPERTY_CARRIER,
  CalculatedMobileMetricUserActionFilter.JSON_PROPERTY_CONNECTION_TYPE,
  CalculatedMobileMetricUserActionFilter.JSON_PROPERTY_NETWORK_TECHNOLOGY,
  CalculatedMobileMetricUserActionFilter.JSON_PROPERTY_ISP,
  CalculatedMobileMetricUserActionFilter.JSON_PROPERTY_ORIENTATION,
  CalculatedMobileMetricUserActionFilter.JSON_PROPERTY_RESOLUTION
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class CalculatedMobileMetricUserActionFilter {
  public static final String JSON_PROPERTY_HAS_REPORTED_ERROR = "hasReportedError";
  private Boolean hasReportedError;

  public static final String JSON_PROPERTY_HAS_HTTP_ERROR = "hasHttpError";
  private Boolean hasHttpError;

  public static final String JSON_PROPERTY_USER_ACTION_NAME = "userActionName";
  private String userActionName;

  public static final String JSON_PROPERTY_APP_VERSION = "appVersion";
  private String appVersion;

  public static final String JSON_PROPERTY_DEVICE = "device";
  private String device;

  public static final String JSON_PROPERTY_MANUFACTURER = "manufacturer";
  private String manufacturer;

  /**
   * Only actions with the specified Apdex score are included in the metric calculation.
   */
  public enum ApdexEnum {
    FRUSTRATED("Frustrated"),
    
    SATISFIED("Satisfied"),
    
    TOLERATING("Tolerating"),
    
    UNKNOWN("Unknown");

    private String value;

    ApdexEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ApdexEnum fromValue(String value) {
      for (ApdexEnum b : ApdexEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_APDEX = "apdex";
  private ApdexEnum apdex;

  public static final String JSON_PROPERTY_OS_FAMILY = "osFamily";
  private String osFamily;

  public static final String JSON_PROPERTY_OS_VERSION = "osVersion";
  private String osVersion;

  public static final String JSON_PROPERTY_CITY = "city";
  private String city;

  public static final String JSON_PROPERTY_CONTINENT = "continent";
  private String continent;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private String country;

  public static final String JSON_PROPERTY_REGION = "region";
  private String region;

  public static final String JSON_PROPERTY_ACTION_DURATION_FROM_MILLISECONDS = "actionDurationFromMilliseconds";
  private Integer actionDurationFromMilliseconds;

  public static final String JSON_PROPERTY_ACTION_DURATION_TO_MILLISECONDS = "actionDurationToMilliseconds";
  private Integer actionDurationToMilliseconds;

  public static final String JSON_PROPERTY_CARRIER = "carrier";
  private String carrier;

  /**
   * Only actions coming from this connection type are included in the metric calculation.
   */
  public enum ConnectionTypeEnum {
    LAN("LAN"),
    
    MOBILE("MOBILE"),
    
    OFFLINE("OFFLINE"),
    
    UNKNOWN("UNKNOWN"),
    
    WIFI("WIFI");

    private String value;

    ConnectionTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ConnectionTypeEnum fromValue(String value) {
      for (ConnectionTypeEnum b : ConnectionTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CONNECTION_TYPE = "connectionType";
  private ConnectionTypeEnum connectionType;

  public static final String JSON_PROPERTY_NETWORK_TECHNOLOGY = "networkTechnology";
  private String networkTechnology;

  public static final String JSON_PROPERTY_ISP = "isp";
  private String isp;

  /**
   * Only actions coming from devices with this display orientation are included in the metric calculation.
   */
  public enum OrientationEnum {
    LANDSCAPE("LANDSCAPE"),
    
    PORTRAIT("PORTRAIT"),
    
    UNKNOWN("UNKNOWN");

    private String value;

    OrientationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OrientationEnum fromValue(String value) {
      for (OrientationEnum b : OrientationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ORIENTATION = "orientation";
  private OrientationEnum orientation;

  /**
   * Only actions coming from devices with this display resolution are included in the metric calculation.
   */
  public enum ResolutionEnum {
    CGA("CGA"),
    
    DCI2K("DCI2K"),
    
    DCI4K("DCI4K"),
    
    DVGA("DVGA"),
    
    FHD("FHD"),
    
    FWVGA("FWVGA"),
    
    FWXGA("FWXGA"),
    
    GHDPLUS("GHDPlus"),
    
    HD("HD"),
    
    HQVGA("HQVGA"),
    
    HQVGA2("HQVGA2"),
    
    HSXGA("HSXGA"),
    
    HUXGA("HUXGA"),
    
    HVGA("HVGA"),
    
    HXGA("HXGA"),
    
    NTSC("NTSC"),
    
    PAL("PAL"),
    
    QHD("QHD"),
    
    QQVGA("QQVGA"),
    
    QSXGA("QSXGA"),
    
    QUXGA("QUXGA"),
    
    QVGA("QVGA"),
    
    QWXGA("QWXGA"),
    
    QXGA("QXGA"),
    
    SVGA("SVGA"),
    
    SXGA("SXGA"),
    
    SXGAMINUS("SXGAMinus"),
    
    SXGAPLUS("SXGAPlus"),
    
    UGA("UGA"),
    
    UHD16K("UHD16K"),
    
    UHD4K("UHD4K"),
    
    UHD8K("UHD8K"),
    
    UHDPLUS("UHDPlus"),
    
    UNKNOWN("UNKNOWN"),
    
    UWQHD("UWQHD"),
    
    UXGA("UXGA"),
    
    VGA("VGA"),
    
    WHSXGA("WHSXGA"),
    
    WHUXGA("WHUXGA"),
    
    WHXGA("WHXGA"),
    
    WQSXGA("WQSXGA"),
    
    WQUXGA("WQUXGA"),
    
    WQVGA("WQVGA"),
    
    WQVGA2("WQVGA2"),
    
    WQVGA3("WQVGA3"),
    
    WQXGA("WQXGA"),
    
    WQXGA2("WQXGA2"),
    
    WSVGA("WSVGA"),
    
    WSVGA2("WSVGA2"),
    
    WSXGA("WSXGA"),
    
    WSXGAPLUS("WSXGAPlus"),
    
    WUXGA("WUXGA"),
    
    WVGA("WVGA"),
    
    WVGA2("WVGA2"),
    
    WXGA("WXGA"),
    
    WXGA2("WXGA2"),
    
    WXGA3("WXGA3"),
    
    WXGAPLUS("WXGAPlus"),
    
    XGA("XGA"),
    
    XGAPLUS("XGAPLUS"),
    
    _1280X854("_1280x854"),
    
    NHD("nHD");

    private String value;

    ResolutionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ResolutionEnum fromValue(String value) {
      for (ResolutionEnum b : ResolutionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RESOLUTION = "resolution";
  private ResolutionEnum resolution;

  public CalculatedMobileMetricUserActionFilter() { 
  }

  public CalculatedMobileMetricUserActionFilter hasReportedError(Boolean hasReportedError) {
    this.hasReportedError = hasReportedError;
    return this;
  }

   /**
   * The error status of the actions to be included in the metric calculation:   * &#x60;true&#x60;: Only actions with reported errors are included.    * &#x60;false&#x60;: All actions are included.
   * @return hasReportedError
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The error status of the actions to be included in the metric calculation:   * `true`: Only actions with reported errors are included.    * `false`: All actions are included.")
  @JsonProperty(JSON_PROPERTY_HAS_REPORTED_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasReportedError() {
    return hasReportedError;
  }


  @JsonProperty(JSON_PROPERTY_HAS_REPORTED_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasReportedError(Boolean hasReportedError) {
    this.hasReportedError = hasReportedError;
  }


  public CalculatedMobileMetricUserActionFilter hasHttpError(Boolean hasHttpError) {
    this.hasHttpError = hasHttpError;
    return this;
  }

   /**
   * The HTTP error status of the actions to be included in the metric calculation:   * &#x60;true&#x60;: Only actions with HTTP errors are included.    * &#x60;false&#x60;: All actions are included.
   * @return hasHttpError
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The HTTP error status of the actions to be included in the metric calculation:   * `true`: Only actions with HTTP errors are included.    * `false`: All actions are included.")
  @JsonProperty(JSON_PROPERTY_HAS_HTTP_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasHttpError() {
    return hasHttpError;
  }


  @JsonProperty(JSON_PROPERTY_HAS_HTTP_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasHttpError(Boolean hasHttpError) {
    this.hasHttpError = hasHttpError;
  }


  public CalculatedMobileMetricUserActionFilter userActionName(String userActionName) {
    this.userActionName = userActionName;
    return this;
  }

   /**
   * Only actions with this name are included in the metric calculation.    The EQUALS operator applies.
   * @return userActionName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions with this name are included in the metric calculation.    The EQUALS operator applies.")
  @JsonProperty(JSON_PROPERTY_USER_ACTION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserActionName() {
    return userActionName;
  }


  @JsonProperty(JSON_PROPERTY_USER_ACTION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserActionName(String userActionName) {
    this.userActionName = userActionName;
  }


  public CalculatedMobileMetricUserActionFilter appVersion(String appVersion) {
    this.appVersion = appVersion;
    return this;
  }

   /**
   * Only actions coming from this app version are included in the metric calculation.    The EQUALS operator applies.
   * @return appVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions coming from this app version are included in the metric calculation.    The EQUALS operator applies.")
  @JsonProperty(JSON_PROPERTY_APP_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAppVersion() {
    return appVersion;
  }


  @JsonProperty(JSON_PROPERTY_APP_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAppVersion(String appVersion) {
    this.appVersion = appVersion;
  }


  public CalculatedMobileMetricUserActionFilter device(String device) {
    this.device = device;
    return this;
  }

   /**
   * Only actions coming from this app version are included in the metric calculation.    The EQUALS operator applies.
   * @return device
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions coming from this app version are included in the metric calculation.    The EQUALS operator applies.")
  @JsonProperty(JSON_PROPERTY_DEVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDevice() {
    return device;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDevice(String device) {
    this.device = device;
  }


  public CalculatedMobileMetricUserActionFilter manufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
    return this;
  }

   /**
   * Only actions coming from devices of this manufacturer are included in the metric calculation.    The EQUALS operator applies.
   * @return manufacturer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions coming from devices of this manufacturer are included in the metric calculation.    The EQUALS operator applies.")
  @JsonProperty(JSON_PROPERTY_MANUFACTURER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getManufacturer() {
    return manufacturer;
  }


  @JsonProperty(JSON_PROPERTY_MANUFACTURER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
  }


  public CalculatedMobileMetricUserActionFilter apdex(ApdexEnum apdex) {
    this.apdex = apdex;
    return this;
  }

   /**
   * Only actions with the specified Apdex score are included in the metric calculation.
   * @return apdex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions with the specified Apdex score are included in the metric calculation.")
  @JsonProperty(JSON_PROPERTY_APDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApdexEnum getApdex() {
    return apdex;
  }


  @JsonProperty(JSON_PROPERTY_APDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApdex(ApdexEnum apdex) {
    this.apdex = apdex;
  }


  public CalculatedMobileMetricUserActionFilter osFamily(String osFamily) {
    this.osFamily = osFamily;
    return this;
  }

   /**
   * Only actions coming from this OS family are included in the metric calculation.    Specify the OS ID here.
   * @return osFamily
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions coming from this OS family are included in the metric calculation.    Specify the OS ID here.")
  @JsonProperty(JSON_PROPERTY_OS_FAMILY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOsFamily() {
    return osFamily;
  }


  @JsonProperty(JSON_PROPERTY_OS_FAMILY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOsFamily(String osFamily) {
    this.osFamily = osFamily;
  }


  public CalculatedMobileMetricUserActionFilter osVersion(String osVersion) {
    this.osVersion = osVersion;
    return this;
  }

   /**
   * Only actions coming from this OS version are included in the metric calculation.    Specify the OS ID here.
   * @return osVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions coming from this OS version are included in the metric calculation.    Specify the OS ID here.")
  @JsonProperty(JSON_PROPERTY_OS_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOsVersion() {
    return osVersion;
  }


  @JsonProperty(JSON_PROPERTY_OS_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOsVersion(String osVersion) {
    this.osVersion = osVersion;
  }


  public CalculatedMobileMetricUserActionFilter city(String city) {
    this.city = city;
    return this;
  }

   /**
   * Only actions of users from this city are included in the metric calculation.    Specify geolocation ID here.
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions of users from this city are included in the metric calculation.    Specify geolocation ID here.")
  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCity() {
    return city;
  }


  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCity(String city) {
    this.city = city;
  }


  public CalculatedMobileMetricUserActionFilter continent(String continent) {
    this.continent = continent;
    return this;
  }

   /**
   * Only actions of users from this continent are included in the metric calculation.    Specify geolocation ID here.
   * @return continent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions of users from this continent are included in the metric calculation.    Specify geolocation ID here.")
  @JsonProperty(JSON_PROPERTY_CONTINENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContinent() {
    return continent;
  }


  @JsonProperty(JSON_PROPERTY_CONTINENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContinent(String continent) {
    this.continent = continent;
  }


  public CalculatedMobileMetricUserActionFilter country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Only actions of users from this country are included in the metric calculation.    Specify geolocation ID here.
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions of users from this country are included in the metric calculation.    Specify geolocation ID here.")
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(String country) {
    this.country = country;
  }


  public CalculatedMobileMetricUserActionFilter region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Only actions of users from this region are included in the metric calculation.    Specify geolocation ID here.
   * @return region
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions of users from this region are included in the metric calculation.    Specify geolocation ID here.")
  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRegion() {
    return region;
  }


  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegion(String region) {
    this.region = region;
  }


  public CalculatedMobileMetricUserActionFilter actionDurationFromMilliseconds(Integer actionDurationFromMilliseconds) {
    this.actionDurationFromMilliseconds = actionDurationFromMilliseconds;
    return this;
  }

   /**
   * Only actions with a duration more than or equal to this value (in milliseconds) are included in the metric calculation.
   * @return actionDurationFromMilliseconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions with a duration more than or equal to this value (in milliseconds) are included in the metric calculation.")
  @JsonProperty(JSON_PROPERTY_ACTION_DURATION_FROM_MILLISECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getActionDurationFromMilliseconds() {
    return actionDurationFromMilliseconds;
  }


  @JsonProperty(JSON_PROPERTY_ACTION_DURATION_FROM_MILLISECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActionDurationFromMilliseconds(Integer actionDurationFromMilliseconds) {
    this.actionDurationFromMilliseconds = actionDurationFromMilliseconds;
  }


  public CalculatedMobileMetricUserActionFilter actionDurationToMilliseconds(Integer actionDurationToMilliseconds) {
    this.actionDurationToMilliseconds = actionDurationToMilliseconds;
    return this;
  }

   /**
   * Only actions with a duration less than or equal to this value (in milliseconds) are included in the metric calculation.
   * @return actionDurationToMilliseconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions with a duration less than or equal to this value (in milliseconds) are included in the metric calculation.")
  @JsonProperty(JSON_PROPERTY_ACTION_DURATION_TO_MILLISECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getActionDurationToMilliseconds() {
    return actionDurationToMilliseconds;
  }


  @JsonProperty(JSON_PROPERTY_ACTION_DURATION_TO_MILLISECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActionDurationToMilliseconds(Integer actionDurationToMilliseconds) {
    this.actionDurationToMilliseconds = actionDurationToMilliseconds;
  }


  public CalculatedMobileMetricUserActionFilter carrier(String carrier) {
    this.carrier = carrier;
    return this;
  }

   /**
   * Only actions coming from this carrier type are included in the metric calculation.
   * @return carrier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions coming from this carrier type are included in the metric calculation.")
  @JsonProperty(JSON_PROPERTY_CARRIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCarrier() {
    return carrier;
  }


  @JsonProperty(JSON_PROPERTY_CARRIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCarrier(String carrier) {
    this.carrier = carrier;
  }


  public CalculatedMobileMetricUserActionFilter connectionType(ConnectionTypeEnum connectionType) {
    this.connectionType = connectionType;
    return this;
  }

   /**
   * Only actions coming from this connection type are included in the metric calculation.
   * @return connectionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions coming from this connection type are included in the metric calculation.")
  @JsonProperty(JSON_PROPERTY_CONNECTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConnectionTypeEnum getConnectionType() {
    return connectionType;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectionType(ConnectionTypeEnum connectionType) {
    this.connectionType = connectionType;
  }


  public CalculatedMobileMetricUserActionFilter networkTechnology(String networkTechnology) {
    this.networkTechnology = networkTechnology;
    return this;
  }

   /**
   * Filter by network technology
   * @return networkTechnology
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by network technology")
  @JsonProperty(JSON_PROPERTY_NETWORK_TECHNOLOGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNetworkTechnology() {
    return networkTechnology;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK_TECHNOLOGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetworkTechnology(String networkTechnology) {
    this.networkTechnology = networkTechnology;
  }


  public CalculatedMobileMetricUserActionFilter isp(String isp) {
    this.isp = isp;
    return this;
  }

   /**
   * Only actions coming from this internet service provider are included in the metric calculation.     The EQUALS operator applies.
   * @return isp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions coming from this internet service provider are included in the metric calculation.     The EQUALS operator applies.")
  @JsonProperty(JSON_PROPERTY_ISP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIsp() {
    return isp;
  }


  @JsonProperty(JSON_PROPERTY_ISP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsp(String isp) {
    this.isp = isp;
  }


  public CalculatedMobileMetricUserActionFilter orientation(OrientationEnum orientation) {
    this.orientation = orientation;
    return this;
  }

   /**
   * Only actions coming from devices with this display orientation are included in the metric calculation.
   * @return orientation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions coming from devices with this display orientation are included in the metric calculation.")
  @JsonProperty(JSON_PROPERTY_ORIENTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OrientationEnum getOrientation() {
    return orientation;
  }


  @JsonProperty(JSON_PROPERTY_ORIENTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrientation(OrientationEnum orientation) {
    this.orientation = orientation;
  }


  public CalculatedMobileMetricUserActionFilter resolution(ResolutionEnum resolution) {
    this.resolution = resolution;
    return this;
  }

   /**
   * Only actions coming from devices with this display resolution are included in the metric calculation.
   * @return resolution
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only actions coming from devices with this display resolution are included in the metric calculation.")
  @JsonProperty(JSON_PROPERTY_RESOLUTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ResolutionEnum getResolution() {
    return resolution;
  }


  @JsonProperty(JSON_PROPERTY_RESOLUTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResolution(ResolutionEnum resolution) {
    this.resolution = resolution;
  }


  /**
   * Return true if this CalculatedMobileMetricUserActionFilter object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CalculatedMobileMetricUserActionFilter calculatedMobileMetricUserActionFilter = (CalculatedMobileMetricUserActionFilter) o;
    return Objects.equals(this.hasReportedError, calculatedMobileMetricUserActionFilter.hasReportedError) &&
        Objects.equals(this.hasHttpError, calculatedMobileMetricUserActionFilter.hasHttpError) &&
        Objects.equals(this.userActionName, calculatedMobileMetricUserActionFilter.userActionName) &&
        Objects.equals(this.appVersion, calculatedMobileMetricUserActionFilter.appVersion) &&
        Objects.equals(this.device, calculatedMobileMetricUserActionFilter.device) &&
        Objects.equals(this.manufacturer, calculatedMobileMetricUserActionFilter.manufacturer) &&
        Objects.equals(this.apdex, calculatedMobileMetricUserActionFilter.apdex) &&
        Objects.equals(this.osFamily, calculatedMobileMetricUserActionFilter.osFamily) &&
        Objects.equals(this.osVersion, calculatedMobileMetricUserActionFilter.osVersion) &&
        Objects.equals(this.city, calculatedMobileMetricUserActionFilter.city) &&
        Objects.equals(this.continent, calculatedMobileMetricUserActionFilter.continent) &&
        Objects.equals(this.country, calculatedMobileMetricUserActionFilter.country) &&
        Objects.equals(this.region, calculatedMobileMetricUserActionFilter.region) &&
        Objects.equals(this.actionDurationFromMilliseconds, calculatedMobileMetricUserActionFilter.actionDurationFromMilliseconds) &&
        Objects.equals(this.actionDurationToMilliseconds, calculatedMobileMetricUserActionFilter.actionDurationToMilliseconds) &&
        Objects.equals(this.carrier, calculatedMobileMetricUserActionFilter.carrier) &&
        Objects.equals(this.connectionType, calculatedMobileMetricUserActionFilter.connectionType) &&
        Objects.equals(this.networkTechnology, calculatedMobileMetricUserActionFilter.networkTechnology) &&
        Objects.equals(this.isp, calculatedMobileMetricUserActionFilter.isp) &&
        Objects.equals(this.orientation, calculatedMobileMetricUserActionFilter.orientation) &&
        Objects.equals(this.resolution, calculatedMobileMetricUserActionFilter.resolution);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hasReportedError, hasHttpError, userActionName, appVersion, device, manufacturer, apdex, osFamily, osVersion, city, continent, country, region, actionDurationFromMilliseconds, actionDurationToMilliseconds, carrier, connectionType, networkTechnology, isp, orientation, resolution);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CalculatedMobileMetricUserActionFilter {\n");
    sb.append("    hasReportedError: ").append(toIndentedString(hasReportedError)).append("\n");
    sb.append("    hasHttpError: ").append(toIndentedString(hasHttpError)).append("\n");
    sb.append("    userActionName: ").append(toIndentedString(userActionName)).append("\n");
    sb.append("    appVersion: ").append(toIndentedString(appVersion)).append("\n");
    sb.append("    device: ").append(toIndentedString(device)).append("\n");
    sb.append("    manufacturer: ").append(toIndentedString(manufacturer)).append("\n");
    sb.append("    apdex: ").append(toIndentedString(apdex)).append("\n");
    sb.append("    osFamily: ").append(toIndentedString(osFamily)).append("\n");
    sb.append("    osVersion: ").append(toIndentedString(osVersion)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    continent: ").append(toIndentedString(continent)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    actionDurationFromMilliseconds: ").append(toIndentedString(actionDurationFromMilliseconds)).append("\n");
    sb.append("    actionDurationToMilliseconds: ").append(toIndentedString(actionDurationToMilliseconds)).append("\n");
    sb.append("    carrier: ").append(toIndentedString(carrier)).append("\n");
    sb.append("    connectionType: ").append(toIndentedString(connectionType)).append("\n");
    sb.append("    networkTechnology: ").append(toIndentedString(networkTechnology)).append("\n");
    sb.append("    isp: ").append(toIndentedString(isp)).append("\n");
    sb.append("    orientation: ").append(toIndentedString(orientation)).append("\n");
    sb.append("    resolution: ").append(toIndentedString(resolution)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

