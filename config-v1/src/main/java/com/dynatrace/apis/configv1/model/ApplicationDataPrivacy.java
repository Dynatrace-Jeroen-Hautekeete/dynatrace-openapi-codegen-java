/*
 * Dynatrace Configuration API
 * Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.configv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.configv1.model.ConfigurationMetadata;
import com.dynatrace.apis.configv1.model.SessionReplayDataPrivacySettings;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Data privacy settings of the application.
 */
@ApiModel(description = "Data privacy settings of the application.")
@JsonPropertyOrder({
  ApplicationDataPrivacy.JSON_PROPERTY_METADATA,
  ApplicationDataPrivacy.JSON_PROPERTY_IDENTIFIER,
  ApplicationDataPrivacy.JSON_PROPERTY_DATA_CAPTURE_OPT_IN_ENABLED,
  ApplicationDataPrivacy.JSON_PROPERTY_PERSISTENT_COOKIE_FOR_USER_TRACKING,
  ApplicationDataPrivacy.JSON_PROPERTY_DO_NOT_TRACK_BEHAVIOUR,
  ApplicationDataPrivacy.JSON_PROPERTY_SESSION_REPLAY_DATA_PRIVACY
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:07:55.784964900+01:00[Europe/Brussels]")
public class ApplicationDataPrivacy {
  public static final String JSON_PROPERTY_METADATA = "metadata";
  private ConfigurationMetadata metadata;

  public static final String JSON_PROPERTY_IDENTIFIER = "identifier";
  private String identifier;

  public static final String JSON_PROPERTY_DATA_CAPTURE_OPT_IN_ENABLED = "dataCaptureOptInEnabled";
  private Boolean dataCaptureOptInEnabled;

  public static final String JSON_PROPERTY_PERSISTENT_COOKIE_FOR_USER_TRACKING = "persistentCookieForUserTracking";
  private Boolean persistentCookieForUserTracking;

  /**
   * How to handle the \&quot;Do Not Track\&quot; header:   * &#x60;IGNORE_DO_NOT_TRACK&#x60;: ignore the header and capture the data.  * &#x60;CAPTURE_ANONYMIZED&#x60;: capture the data but do not tie it to the user.  * &#x60;DO_NOT_CAPTURE&#x60;: respect the header and do not capture.
   */
  public enum DoNotTrackBehaviourEnum {
    CAPTURE_ANONYMIZED("CAPTURE_ANONYMIZED"),
    
    DO_NOT_CAPTURE("DO_NOT_CAPTURE"),
    
    IGNORE_DO_NOT_TRACK("IGNORE_DO_NOT_TRACK");

    private String value;

    DoNotTrackBehaviourEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DoNotTrackBehaviourEnum fromValue(String value) {
      for (DoNotTrackBehaviourEnum b : DoNotTrackBehaviourEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DO_NOT_TRACK_BEHAVIOUR = "doNotTrackBehaviour";
  private DoNotTrackBehaviourEnum doNotTrackBehaviour;

  public static final String JSON_PROPERTY_SESSION_REPLAY_DATA_PRIVACY = "sessionReplayDataPrivacy";
  private SessionReplayDataPrivacySettings sessionReplayDataPrivacy;

  public ApplicationDataPrivacy() { 
  }

  @JsonCreator
  public ApplicationDataPrivacy(
    @JsonProperty(JSON_PROPERTY_IDENTIFIER) String identifier
  ) {
  this();
    this.identifier = identifier;
  }

  public ApplicationDataPrivacy metadata(ConfigurationMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConfigurationMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(ConfigurationMetadata metadata) {
    this.metadata = metadata;
  }


   /**
   * Dynatrace entity ID of the web application.
   * @return identifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Dynatrace entity ID of the web application.")
  @JsonProperty(JSON_PROPERTY_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIdentifier() {
    return identifier;
  }




  public ApplicationDataPrivacy dataCaptureOptInEnabled(Boolean dataCaptureOptInEnabled) {
    this.dataCaptureOptInEnabled = dataCaptureOptInEnabled;
    return this;
  }

   /**
   * Set to &#x60;true&#x60; to disable data capture and cookies until JavaScriptAPI &#x60;dtrum.enable()&#x60; is called.
   * @return dataCaptureOptInEnabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Set to `true` to disable data capture and cookies until JavaScriptAPI `dtrum.enable()` is called.")
  @JsonProperty(JSON_PROPERTY_DATA_CAPTURE_OPT_IN_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDataCaptureOptInEnabled() {
    return dataCaptureOptInEnabled;
  }


  @JsonProperty(JSON_PROPERTY_DATA_CAPTURE_OPT_IN_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDataCaptureOptInEnabled(Boolean dataCaptureOptInEnabled) {
    this.dataCaptureOptInEnabled = dataCaptureOptInEnabled;
  }


  public ApplicationDataPrivacy persistentCookieForUserTracking(Boolean persistentCookieForUserTracking) {
    this.persistentCookieForUserTracking = persistentCookieForUserTracking;
    return this;
  }

   /**
   * Set to &#x60;true&#x60; to set persistent cookie in order to recognize returning devices.
   * @return persistentCookieForUserTracking
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Set to `true` to set persistent cookie in order to recognize returning devices.")
  @JsonProperty(JSON_PROPERTY_PERSISTENT_COOKIE_FOR_USER_TRACKING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getPersistentCookieForUserTracking() {
    return persistentCookieForUserTracking;
  }


  @JsonProperty(JSON_PROPERTY_PERSISTENT_COOKIE_FOR_USER_TRACKING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPersistentCookieForUserTracking(Boolean persistentCookieForUserTracking) {
    this.persistentCookieForUserTracking = persistentCookieForUserTracking;
  }


  public ApplicationDataPrivacy doNotTrackBehaviour(DoNotTrackBehaviourEnum doNotTrackBehaviour) {
    this.doNotTrackBehaviour = doNotTrackBehaviour;
    return this;
  }

   /**
   * How to handle the \&quot;Do Not Track\&quot; header:   * &#x60;IGNORE_DO_NOT_TRACK&#x60;: ignore the header and capture the data.  * &#x60;CAPTURE_ANONYMIZED&#x60;: capture the data but do not tie it to the user.  * &#x60;DO_NOT_CAPTURE&#x60;: respect the header and do not capture.
   * @return doNotTrackBehaviour
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "How to handle the \"Do Not Track\" header:   * `IGNORE_DO_NOT_TRACK`: ignore the header and capture the data.  * `CAPTURE_ANONYMIZED`: capture the data but do not tie it to the user.  * `DO_NOT_CAPTURE`: respect the header and do not capture.")
  @JsonProperty(JSON_PROPERTY_DO_NOT_TRACK_BEHAVIOUR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DoNotTrackBehaviourEnum getDoNotTrackBehaviour() {
    return doNotTrackBehaviour;
  }


  @JsonProperty(JSON_PROPERTY_DO_NOT_TRACK_BEHAVIOUR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDoNotTrackBehaviour(DoNotTrackBehaviourEnum doNotTrackBehaviour) {
    this.doNotTrackBehaviour = doNotTrackBehaviour;
  }


  public ApplicationDataPrivacy sessionReplayDataPrivacy(SessionReplayDataPrivacySettings sessionReplayDataPrivacy) {
    this.sessionReplayDataPrivacy = sessionReplayDataPrivacy;
    return this;
  }

   /**
   * Get sessionReplayDataPrivacy
   * @return sessionReplayDataPrivacy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SESSION_REPLAY_DATA_PRIVACY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SessionReplayDataPrivacySettings getSessionReplayDataPrivacy() {
    return sessionReplayDataPrivacy;
  }


  @JsonProperty(JSON_PROPERTY_SESSION_REPLAY_DATA_PRIVACY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSessionReplayDataPrivacy(SessionReplayDataPrivacySettings sessionReplayDataPrivacy) {
    this.sessionReplayDataPrivacy = sessionReplayDataPrivacy;
  }


  /**
   * Return true if this ApplicationDataPrivacy object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationDataPrivacy applicationDataPrivacy = (ApplicationDataPrivacy) o;
    return Objects.equals(this.metadata, applicationDataPrivacy.metadata) &&
        Objects.equals(this.identifier, applicationDataPrivacy.identifier) &&
        Objects.equals(this.dataCaptureOptInEnabled, applicationDataPrivacy.dataCaptureOptInEnabled) &&
        Objects.equals(this.persistentCookieForUserTracking, applicationDataPrivacy.persistentCookieForUserTracking) &&
        Objects.equals(this.doNotTrackBehaviour, applicationDataPrivacy.doNotTrackBehaviour) &&
        Objects.equals(this.sessionReplayDataPrivacy, applicationDataPrivacy.sessionReplayDataPrivacy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metadata, identifier, dataCaptureOptInEnabled, persistentCookieForUserTracking, doNotTrackBehaviour, sessionReplayDataPrivacy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationDataPrivacy {\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    dataCaptureOptInEnabled: ").append(toIndentedString(dataCaptureOptInEnabled)).append("\n");
    sb.append("    persistentCookieForUserTracking: ").append(toIndentedString(persistentCookieForUserTracking)).append("\n");
    sb.append("    doNotTrackBehaviour: ").append(toIndentedString(doNotTrackBehaviour)).append("\n");
    sb.append("    sessionReplayDataPrivacy: ").append(toIndentedString(sessionReplayDataPrivacy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

