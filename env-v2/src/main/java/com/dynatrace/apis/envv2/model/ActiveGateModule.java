/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Information about ActiveGate module
 */
@ApiModel(description = "Information about ActiveGate module")
@JsonPropertyOrder({
  ActiveGateModule.JSON_PROPERTY_MISCONFIGURED,
  ActiveGateModule.JSON_PROPERTY_TYPE,
  ActiveGateModule.JSON_PROPERTY_ATTRIBUTES,
  ActiveGateModule.JSON_PROPERTY_VERSION,
  ActiveGateModule.JSON_PROPERTY_ENABLED
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class ActiveGateModule {
  public static final String JSON_PROPERTY_MISCONFIGURED = "misconfigured";
  private Boolean misconfigured;

  /**
   * The type of ActiveGate module.
   */
  public enum TypeEnum {
    AWS("AWS"),
    
    AZURE("AZURE"),
    
    BEACON_FORWARDER("BEACON_FORWARDER"),
    
    CLOUD_FOUNDRY("CLOUD_FOUNDRY"),
    
    DB_INSIGHT("DB_INSIGHT"),
    
    EXTENSIONS_V1("EXTENSIONS_V1"),
    
    EXTENSIONS_V2("EXTENSIONS_V2"),
    
    KUBERNETES("KUBERNETES"),
    
    LOGS("LOGS"),
    
    MEMORY_DUMPS("MEMORY_DUMPS"),
    
    METRIC_API("METRIC_API"),
    
    ONE_AGENT_ROUTING("ONE_AGENT_ROUTING"),
    
    OTLP_INGEST("OTLP_INGEST"),
    
    REST_API("REST_API"),
    
    SYNTHETIC("SYNTHETIC"),
    
    VMWARE("VMWARE"),
    
    Z_OS("Z_OS");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private Map<String, String> attributes = null;

  public static final String JSON_PROPERTY_VERSION = "version";
  private String version;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public ActiveGateModule() { 
  }

  @JsonCreator
  public ActiveGateModule(
    @JsonProperty(JSON_PROPERTY_MISCONFIGURED) Boolean misconfigured, 
    @JsonProperty(JSON_PROPERTY_TYPE) TypeEnum type, 
    @JsonProperty(JSON_PROPERTY_ATTRIBUTES) Map<String, String> attributes, 
    @JsonProperty(JSON_PROPERTY_VERSION) String version, 
    @JsonProperty(JSON_PROPERTY_ENABLED) Boolean enabled
  ) {
  this();
    this.misconfigured = misconfigured;
    this.type = type;
    this.attributes = attributes;
    this.version = version;
    this.enabled = enabled;
  }

   /**
   * The module is misconfigured (&#x60;true&#x60;) or not (&#x60;false&#x60;).
   * @return misconfigured
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The module is misconfigured (`true`) or not (`false`).")
  @JsonProperty(JSON_PROPERTY_MISCONFIGURED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMisconfigured() {
    return misconfigured;
  }




   /**
   * The type of ActiveGate module.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "KUBERNETES", value = "The type of ActiveGate module.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }




   /**
   * The attributes of the ActiveGate module.
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The attributes of the ActiveGate module.")
  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getAttributes() {
    return attributes;
  }




   /**
   * The version of the ActiveGate module.
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The version of the ActiveGate module.")
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersion() {
    return version;
  }




   /**
   * The module is enabled (&#x60;true&#x60;) or disabled (&#x60;false&#x60;).
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The module is enabled (`true`) or disabled (`false`).")
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }




  /**
   * Return true if this ActiveGateModule object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActiveGateModule activeGateModule = (ActiveGateModule) o;
    return Objects.equals(this.misconfigured, activeGateModule.misconfigured) &&
        Objects.equals(this.type, activeGateModule.type) &&
        Objects.equals(this.attributes, activeGateModule.attributes) &&
        Objects.equals(this.version, activeGateModule.version) &&
        Objects.equals(this.enabled, activeGateModule.enabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(misconfigured, type, attributes, version, enabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActiveGateModule {\n");
    sb.append("    misconfigured: ").append(toIndentedString(misconfigured)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

