/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Defines an vulnerable function.
 */
@ApiModel(description = "Defines an vulnerable function.")
@JsonPropertyOrder({
  VulnerableFunction.JSON_PROPERTY_CLASS_NAME,
  VulnerableFunction.JSON_PROPERTY_FILE_PATH,
  VulnerableFunction.JSON_PROPERTY_FUNCTION_NAME
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class VulnerableFunction {
  public static final String JSON_PROPERTY_CLASS_NAME = "className";
  private String className;

  public static final String JSON_PROPERTY_FILE_PATH = "filePath";
  private String filePath;

  public static final String JSON_PROPERTY_FUNCTION_NAME = "functionName";
  private String functionName;

  public VulnerableFunction() { 
  }

  @JsonCreator
  public VulnerableFunction(
    @JsonProperty(JSON_PROPERTY_CLASS_NAME) String className, 
    @JsonProperty(JSON_PROPERTY_FILE_PATH) String filePath, 
    @JsonProperty(JSON_PROPERTY_FUNCTION_NAME) String functionName
  ) {
  this();
    this.className = className;
    this.filePath = filePath;
    this.functionName = functionName;
  }

   /**
   * The class name of the vulnerable function.
   * @return className
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The class name of the vulnerable function.")
  @JsonProperty(JSON_PROPERTY_CLASS_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClassName() {
    return className;
  }




   /**
   * The file path of the vulnerable function.
   * @return filePath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The file path of the vulnerable function.")
  @JsonProperty(JSON_PROPERTY_FILE_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFilePath() {
    return filePath;
  }




   /**
   * The function name of the vulnerable function.
   * @return functionName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The function name of the vulnerable function.")
  @JsonProperty(JSON_PROPERTY_FUNCTION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFunctionName() {
    return functionName;
  }




  /**
   * Return true if this VulnerableFunction object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VulnerableFunction vulnerableFunction = (VulnerableFunction) o;
    return Objects.equals(this.className, vulnerableFunction.className) &&
        Objects.equals(this.filePath, vulnerableFunction.filePath) &&
        Objects.equals(this.functionName, vulnerableFunction.functionName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(className, filePath, functionName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VulnerableFunction {\n");
    sb.append("    className: ").append(toIndentedString(className)).append("\n");
    sb.append("    filePath: ").append(toIndentedString(filePath)).append("\n");
    sb.append("    functionName: ").append(toIndentedString(functionName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

