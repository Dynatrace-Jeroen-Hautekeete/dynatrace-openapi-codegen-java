/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * An effective settings value.
 */
@ApiModel(description = "An effective settings value.")
@JsonPropertyOrder({
  EffectiveSettingsValue.JSON_PROPERTY_SCHEMA_VERSION,
  EffectiveSettingsValue.JSON_PROPERTY_MODIFIED,
  EffectiveSettingsValue.JSON_PROPERTY_EXTERNAL_ID,
  EffectiveSettingsValue.JSON_PROPERTY_AUTHOR,
  EffectiveSettingsValue.JSON_PROPERTY_SCHEMA_ID,
  EffectiveSettingsValue.JSON_PROPERTY_VALUE,
  EffectiveSettingsValue.JSON_PROPERTY_CREATED,
  EffectiveSettingsValue.JSON_PROPERTY_ORIGIN,
  EffectiveSettingsValue.JSON_PROPERTY_SUMMARY
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class EffectiveSettingsValue {
  public static final String JSON_PROPERTY_SCHEMA_VERSION = "schemaVersion";
  private String schemaVersion;

  public static final String JSON_PROPERTY_MODIFIED = "modified";
  private Long modified;

  public static final String JSON_PROPERTY_EXTERNAL_ID = "externalId";
  private String externalId;

  public static final String JSON_PROPERTY_AUTHOR = "author";
  private String author;

  public static final String JSON_PROPERTY_SCHEMA_ID = "schemaId";
  private String schemaId;

  public static final String JSON_PROPERTY_VALUE = "value";
  private Object value;

  public static final String JSON_PROPERTY_CREATED = "created";
  private Long created;

  public static final String JSON_PROPERTY_ORIGIN = "origin";
  private String origin;

  public static final String JSON_PROPERTY_SUMMARY = "summary";
  private String summary;

  public EffectiveSettingsValue() { 
  }

  public EffectiveSettingsValue schemaVersion(String schemaVersion) {
    this.schemaVersion = schemaVersion;
    return this;
  }

   /**
   * The version of the schema on which the object is based.
   * @return schemaVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1.0.0", value = "The version of the schema on which the object is based.")
  @JsonProperty(JSON_PROPERTY_SCHEMA_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSchemaVersion() {
    return schemaVersion;
  }


  @JsonProperty(JSON_PROPERTY_SCHEMA_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSchemaVersion(String schemaVersion) {
    this.schemaVersion = schemaVersion;
  }


  public EffectiveSettingsValue modified(Long modified) {
    this.modified = modified;
    return this;
  }

   /**
   * The timestamp of the last modification.
   * @return modified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp of the last modification.")
  @JsonProperty(JSON_PROPERTY_MODIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getModified() {
    return modified;
  }


  @JsonProperty(JSON_PROPERTY_MODIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModified(Long modified) {
    this.modified = modified;
  }


  public EffectiveSettingsValue externalId(String externalId) {
    this.externalId = externalId;
    return this;
  }

   /**
   * The external identifier of the settings object.
   * @return externalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The external identifier of the settings object.")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalId() {
    return externalId;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  public EffectiveSettingsValue author(String author) {
    this.author = author;
    return this;
  }

   /**
   * The user (identified by a user ID or a public token ID) who performed that most recent modification.
   * @return author
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "john.doe@example.com", value = "The user (identified by a user ID or a public token ID) who performed that most recent modification.")
  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAuthor() {
    return author;
  }


  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthor(String author) {
    this.author = author;
  }


  public EffectiveSettingsValue schemaId(String schemaId) {
    this.schemaId = schemaId;
    return this;
  }

   /**
   * The schema on which the object is based.
   * @return schemaId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "builtin:container.built-in-monitoring-rule", value = "The schema on which the object is based.")
  @JsonProperty(JSON_PROPERTY_SCHEMA_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSchemaId() {
    return schemaId;
  }


  @JsonProperty(JSON_PROPERTY_SCHEMA_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSchemaId(String schemaId) {
    this.schemaId = schemaId;
  }


  public EffectiveSettingsValue value(Object value) {
    this.value = value;
    return this;
  }

   /**
   * The value of the setting.    It defines the actual values of settings&#39; parameters.   The actual content depends on the object&#39;s schema.
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"autoMonitoring\":true}", value = "The value of the setting.    It defines the actual values of settings' parameters.   The actual content depends on the object's schema.")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(Object value) {
    this.value = value;
  }


  public EffectiveSettingsValue created(Long created) {
    this.created = created;
    return this;
  }

   /**
   * The timestamp of the creation.
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp of the creation.")
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getCreated() {
    return created;
  }


  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreated(Long created) {
    this.created = created;
  }


  public EffectiveSettingsValue origin(String origin) {
    this.origin = origin;
    return this;
  }

   /**
   * The origin of the settings value.
   * @return origin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "HOST-D3A3C5A146830A79", value = "The origin of the settings value.")
  @JsonProperty(JSON_PROPERTY_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOrigin() {
    return origin;
  }


  @JsonProperty(JSON_PROPERTY_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrigin(String origin) {
    this.origin = origin;
  }


  public EffectiveSettingsValue summary(String summary) {
    this.summary = summary;
    return this;
  }

   /**
   * A short summary of settings.
   * @return summary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A short summary of settings.")
  @JsonProperty(JSON_PROPERTY_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSummary() {
    return summary;
  }


  @JsonProperty(JSON_PROPERTY_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSummary(String summary) {
    this.summary = summary;
  }


  /**
   * Return true if this EffectiveSettingsValue object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EffectiveSettingsValue effectiveSettingsValue = (EffectiveSettingsValue) o;
    return Objects.equals(this.schemaVersion, effectiveSettingsValue.schemaVersion) &&
        Objects.equals(this.modified, effectiveSettingsValue.modified) &&
        Objects.equals(this.externalId, effectiveSettingsValue.externalId) &&
        Objects.equals(this.author, effectiveSettingsValue.author) &&
        Objects.equals(this.schemaId, effectiveSettingsValue.schemaId) &&
        Objects.equals(this.value, effectiveSettingsValue.value) &&
        Objects.equals(this.created, effectiveSettingsValue.created) &&
        Objects.equals(this.origin, effectiveSettingsValue.origin) &&
        Objects.equals(this.summary, effectiveSettingsValue.summary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(schemaVersion, modified, externalId, author, schemaId, value, created, origin, summary);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EffectiveSettingsValue {\n");
    sb.append("    schemaVersion: ").append(toIndentedString(schemaVersion)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    schemaId: ").append(toIndentedString(schemaId)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

