/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv2.model.SloBurnRate;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.LinkedHashSet;
import java.util.Set;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Parameters of a service-level objective (SLO).
 */
@ApiModel(description = "Parameters of a service-level objective (SLO).")
@JsonPropertyOrder({
  SLO.JSON_PROPERTY_PROBLEM_FILTERS,
  SLO.JSON_PROPERTY_METRIC_EXPRESSION,
  SLO.JSON_PROPERTY_USE_RATE_METRIC,
  SLO.JSON_PROPERTY_METRIC_RATE,
  SLO.JSON_PROPERTY_METRIC_NUMERATOR,
  SLO.JSON_PROPERTY_METRIC_DENOMINATOR,
  SLO.JSON_PROPERTY_EVALUATION_TYPE,
  SLO.JSON_PROPERTY_ERROR_BUDGET_BURN_RATE,
  SLO.JSON_PROPERTY_BURN_RATE_METRIC_KEY,
  SLO.JSON_PROPERTY_ERROR_BUDGET_METRIC_KEY,
  SLO.JSON_PROPERTY_NORMALIZED_ERROR_BUDGET_METRIC_KEY,
  SLO.JSON_PROPERTY_NUMERATOR_VALUE,
  SLO.JSON_PROPERTY_DENOMINATOR_VALUE,
  SLO.JSON_PROPERTY_RELATED_OPEN_PROBLEMS,
  SLO.JSON_PROPERTY_RELATED_TOTAL_PROBLEMS,
  SLO.JSON_PROPERTY_ERROR_BUDGET,
  SLO.JSON_PROPERTY_EVALUATED_PERCENTAGE,
  SLO.JSON_PROPERTY_TIMEFRAME,
  SLO.JSON_PROPERTY_METRIC_KEY,
  SLO.JSON_PROPERTY_FILTER,
  SLO.JSON_PROPERTY_NAME,
  SLO.JSON_PROPERTY_ID,
  SLO.JSON_PROPERTY_TARGET,
  SLO.JSON_PROPERTY_DESCRIPTION,
  SLO.JSON_PROPERTY_ENABLED,
  SLO.JSON_PROPERTY_STATUS,
  SLO.JSON_PROPERTY_ERROR,
  SLO.JSON_PROPERTY_WARNING
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class SLO {
  public static final String JSON_PROPERTY_PROBLEM_FILTERS = "problemFilters";
  private Set<String> problemFilters = null;

  public static final String JSON_PROPERTY_METRIC_EXPRESSION = "metricExpression";
  private String metricExpression;

  public static final String JSON_PROPERTY_USE_RATE_METRIC = "useRateMetric";
  private Boolean useRateMetric;

  public static final String JSON_PROPERTY_METRIC_RATE = "metricRate";
  private String metricRate;

  public static final String JSON_PROPERTY_METRIC_NUMERATOR = "metricNumerator";
  private String metricNumerator;

  public static final String JSON_PROPERTY_METRIC_DENOMINATOR = "metricDenominator";
  private String metricDenominator;

  /**
   * The evaluation type of the SLO.
   */
  public enum EvaluationTypeEnum {
    AGGREGATE("AGGREGATE");

    private String value;

    EvaluationTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EvaluationTypeEnum fromValue(String value) {
      for (EvaluationTypeEnum b : EvaluationTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_EVALUATION_TYPE = "evaluationType";
  private EvaluationTypeEnum evaluationType;

  public static final String JSON_PROPERTY_ERROR_BUDGET_BURN_RATE = "errorBudgetBurnRate";
  private SloBurnRate errorBudgetBurnRate;

  public static final String JSON_PROPERTY_BURN_RATE_METRIC_KEY = "burnRateMetricKey";
  private String burnRateMetricKey;

  public static final String JSON_PROPERTY_ERROR_BUDGET_METRIC_KEY = "errorBudgetMetricKey";
  private String errorBudgetMetricKey;

  public static final String JSON_PROPERTY_NORMALIZED_ERROR_BUDGET_METRIC_KEY = "normalizedErrorBudgetMetricKey";
  private String normalizedErrorBudgetMetricKey;

  public static final String JSON_PROPERTY_NUMERATOR_VALUE = "numeratorValue";
  private Double numeratorValue;

  public static final String JSON_PROPERTY_DENOMINATOR_VALUE = "denominatorValue";
  private Double denominatorValue;

  public static final String JSON_PROPERTY_RELATED_OPEN_PROBLEMS = "relatedOpenProblems";
  private Integer relatedOpenProblems;

  public static final String JSON_PROPERTY_RELATED_TOTAL_PROBLEMS = "relatedTotalProblems";
  private Integer relatedTotalProblems;

  public static final String JSON_PROPERTY_ERROR_BUDGET = "errorBudget";
  private Double errorBudget;

  public static final String JSON_PROPERTY_EVALUATED_PERCENTAGE = "evaluatedPercentage";
  private Double evaluatedPercentage;

  public static final String JSON_PROPERTY_TIMEFRAME = "timeframe";
  private String timeframe;

  public static final String JSON_PROPERTY_METRIC_KEY = "metricKey";
  private String metricKey;

  public static final String JSON_PROPERTY_FILTER = "filter";
  private String filter;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_TARGET = "target";
  private Double target;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  /**
   * The status of the calculated SLO.
   */
  public enum StatusEnum {
    FAILURE("FAILURE"),
    
    SUCCESS("SUCCESS"),
    
    WARNING("WARNING");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_ERROR = "error";
  private String error;

  public static final String JSON_PROPERTY_WARNING = "warning";
  private Double warning;

  public SLO() { 
  }

  public SLO problemFilters(Set<String> problemFilters) {
    this.problemFilters = problemFilters;
    return this;
  }

  public SLO addProblemFiltersItem(String problemFiltersItem) {
    if (this.problemFilters == null) {
      this.problemFilters = new LinkedHashSet<>();
    }
    this.problemFilters.add(problemFiltersItem);
    return this;
  }

   /**
   * The entity filter for fetching the number of problems related to an SLO. Auto-generated in case no filter has been added to the SLO.
   * @return problemFilters
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[type(\"SERVICE\")]", value = "The entity filter for fetching the number of problems related to an SLO. Auto-generated in case no filter has been added to the SLO.")
  @JsonProperty(JSON_PROPERTY_PROBLEM_FILTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getProblemFilters() {
    return problemFilters;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_PROBLEM_FILTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProblemFilters(Set<String> problemFilters) {
    this.problemFilters = problemFilters;
  }


  public SLO metricExpression(String metricExpression) {
    this.metricExpression = metricExpression;
    return this;
  }

   /**
   * The percentage-based metric expression for the calculation of the SLO.
   * @return metricExpression
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())", value = "The percentage-based metric expression for the calculation of the SLO.")
  @JsonProperty(JSON_PROPERTY_METRIC_EXPRESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMetricExpression() {
    return metricExpression;
  }


  @JsonProperty(JSON_PROPERTY_METRIC_EXPRESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetricExpression(String metricExpression) {
    this.metricExpression = metricExpression;
  }


  public SLO useRateMetric(Boolean useRateMetric) {
    this.useRateMetric = useRateMetric;
    return this;
  }

   /**
   * The type of the metric to use for SLO calculation:   * &#x60;true&#x60;: An existing percentage-based metric.  * &#x60;false&#x60;: A ratio of two metrics.   For a list of available metrics, see [Built-in metric page](https://dt-url.net/be03kow) or try the [GET metrics](https://dt-url.net/8e43kxf) API call.
   * @return useRateMetric
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "The type of the metric to use for SLO calculation:   * `true`: An existing percentage-based metric.  * `false`: A ratio of two metrics.   For a list of available metrics, see [Built-in metric page](https://dt-url.net/be03kow) or try the [GET metrics](https://dt-url.net/8e43kxf) API call.")
  @JsonProperty(JSON_PROPERTY_USE_RATE_METRIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUseRateMetric() {
    return useRateMetric;
  }


  @JsonProperty(JSON_PROPERTY_USE_RATE_METRIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUseRateMetric(Boolean useRateMetric) {
    this.useRateMetric = useRateMetric;
  }


  public SLO metricRate(String metricRate) {
    this.metricRate = metricRate;
    return this;
  }

   /**
   * The percentage-based metric for the calculation of the SLO.   Required when the **useRateMetric** is set to &#x60;true&#x60;.
   * @return metricRate
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "builtin:service.successes.server.rate", value = "The percentage-based metric for the calculation of the SLO.   Required when the **useRateMetric** is set to `true`.")
  @JsonProperty(JSON_PROPERTY_METRIC_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMetricRate() {
    return metricRate;
  }


  @JsonProperty(JSON_PROPERTY_METRIC_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetricRate(String metricRate) {
    this.metricRate = metricRate;
  }


  public SLO metricNumerator(String metricNumerator) {
    this.metricNumerator = metricNumerator;
    return this;
  }

   /**
   * The metric for the count of successes (the numerator in rate calculation).   Required when the **useRateMetric** is set to &#x60;false&#x60;.
   * @return metricNumerator
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "builtin:service.errors.server.successCount", value = "The metric for the count of successes (the numerator in rate calculation).   Required when the **useRateMetric** is set to `false`.")
  @JsonProperty(JSON_PROPERTY_METRIC_NUMERATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMetricNumerator() {
    return metricNumerator;
  }


  @JsonProperty(JSON_PROPERTY_METRIC_NUMERATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetricNumerator(String metricNumerator) {
    this.metricNumerator = metricNumerator;
  }


  public SLO metricDenominator(String metricDenominator) {
    this.metricDenominator = metricDenominator;
    return this;
  }

   /**
   * The total count metric (the denominator in rate calculation).   Required when the **useRateMetric** is set to &#x60;false&#x60;.
   * @return metricDenominator
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "builtin:service.requestCount.server", value = "The total count metric (the denominator in rate calculation).   Required when the **useRateMetric** is set to `false`.")
  @JsonProperty(JSON_PROPERTY_METRIC_DENOMINATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMetricDenominator() {
    return metricDenominator;
  }


  @JsonProperty(JSON_PROPERTY_METRIC_DENOMINATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetricDenominator(String metricDenominator) {
    this.metricDenominator = metricDenominator;
  }


  public SLO evaluationType(EvaluationTypeEnum evaluationType) {
    this.evaluationType = evaluationType;
    return this;
  }

   /**
   * The evaluation type of the SLO.
   * @return evaluationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "AGGREGATE", value = "The evaluation type of the SLO.")
  @JsonProperty(JSON_PROPERTY_EVALUATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EvaluationTypeEnum getEvaluationType() {
    return evaluationType;
  }


  @JsonProperty(JSON_PROPERTY_EVALUATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEvaluationType(EvaluationTypeEnum evaluationType) {
    this.evaluationType = evaluationType;
  }


  public SLO errorBudgetBurnRate(SloBurnRate errorBudgetBurnRate) {
    this.errorBudgetBurnRate = errorBudgetBurnRate;
    return this;
  }

   /**
   * Get errorBudgetBurnRate
   * @return errorBudgetBurnRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ERROR_BUDGET_BURN_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SloBurnRate getErrorBudgetBurnRate() {
    return errorBudgetBurnRate;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_BUDGET_BURN_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorBudgetBurnRate(SloBurnRate errorBudgetBurnRate) {
    this.errorBudgetBurnRate = errorBudgetBurnRate;
  }


  public SLO burnRateMetricKey(String burnRateMetricKey) {
    this.burnRateMetricKey = burnRateMetricKey;
    return this;
  }

   /**
   * The error budget burn rate key for a metric expression.
   * @return burnRateMetricKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "func:slo.errorBudgetBurnRate.payment_service_availability", value = "The error budget burn rate key for a metric expression.")
  @JsonProperty(JSON_PROPERTY_BURN_RATE_METRIC_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBurnRateMetricKey() {
    return burnRateMetricKey;
  }


  @JsonProperty(JSON_PROPERTY_BURN_RATE_METRIC_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBurnRateMetricKey(String burnRateMetricKey) {
    this.burnRateMetricKey = burnRateMetricKey;
  }


  public SLO errorBudgetMetricKey(String errorBudgetMetricKey) {
    this.errorBudgetMetricKey = errorBudgetMetricKey;
    return this;
  }

   /**
   * The error budget key for a metric expression.
   * @return errorBudgetMetricKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "func:slo.errorBudget.payment_service_availability", value = "The error budget key for a metric expression.")
  @JsonProperty(JSON_PROPERTY_ERROR_BUDGET_METRIC_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getErrorBudgetMetricKey() {
    return errorBudgetMetricKey;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_BUDGET_METRIC_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorBudgetMetricKey(String errorBudgetMetricKey) {
    this.errorBudgetMetricKey = errorBudgetMetricKey;
  }


  public SLO normalizedErrorBudgetMetricKey(String normalizedErrorBudgetMetricKey) {
    this.normalizedErrorBudgetMetricKey = normalizedErrorBudgetMetricKey;
    return this;
  }

   /**
   * The normalized error budget key for a metric expression.
   * @return normalizedErrorBudgetMetricKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "func:slo.normalizedErrorBudget.payment_service_availability", value = "The normalized error budget key for a metric expression.")
  @JsonProperty(JSON_PROPERTY_NORMALIZED_ERROR_BUDGET_METRIC_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNormalizedErrorBudgetMetricKey() {
    return normalizedErrorBudgetMetricKey;
  }


  @JsonProperty(JSON_PROPERTY_NORMALIZED_ERROR_BUDGET_METRIC_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNormalizedErrorBudgetMetricKey(String normalizedErrorBudgetMetricKey) {
    this.normalizedErrorBudgetMetricKey = normalizedErrorBudgetMetricKey;
  }


  public SLO numeratorValue(Double numeratorValue) {
    this.numeratorValue = numeratorValue;
    return this;
  }

   /**
   * The numerator value used to evaluate the SLO when **useRateMetric** is set to &#x60;false&#x60;.
   * @return numeratorValue
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "80", value = "The numerator value used to evaluate the SLO when **useRateMetric** is set to `false`.")
  @JsonProperty(JSON_PROPERTY_NUMERATOR_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getNumeratorValue() {
    return numeratorValue;
  }


  @JsonProperty(JSON_PROPERTY_NUMERATOR_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumeratorValue(Double numeratorValue) {
    this.numeratorValue = numeratorValue;
  }


  public SLO denominatorValue(Double denominatorValue) {
    this.denominatorValue = denominatorValue;
    return this;
  }

   /**
   * The denominator value used to evaluate the SLO when **useRateMetric** is set to &#x60;false&#x60;.
   * @return denominatorValue
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "90", value = "The denominator value used to evaluate the SLO when **useRateMetric** is set to `false`.")
  @JsonProperty(JSON_PROPERTY_DENOMINATOR_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getDenominatorValue() {
    return denominatorValue;
  }


  @JsonProperty(JSON_PROPERTY_DENOMINATOR_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDenominatorValue(Double denominatorValue) {
    this.denominatorValue = denominatorValue;
  }


  public SLO relatedOpenProblems(Integer relatedOpenProblems) {
    this.relatedOpenProblems = relatedOpenProblems;
    return this;
  }

   /**
   * Number of OPEN problems related to the SLO.   Has the value of &#x60;-1&#x60; if there&#39;s an error with fetching SLO related problems.
   * @return relatedOpenProblems
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of OPEN problems related to the SLO.   Has the value of `-1` if there's an error with fetching SLO related problems.")
  @JsonProperty(JSON_PROPERTY_RELATED_OPEN_PROBLEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRelatedOpenProblems() {
    return relatedOpenProblems;
  }


  @JsonProperty(JSON_PROPERTY_RELATED_OPEN_PROBLEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelatedOpenProblems(Integer relatedOpenProblems) {
    this.relatedOpenProblems = relatedOpenProblems;
  }


  public SLO relatedTotalProblems(Integer relatedTotalProblems) {
    this.relatedTotalProblems = relatedTotalProblems;
    return this;
  }

   /**
   * Total number of problems related to the SLO.   Has the value of &#x60;-1&#x60; if there&#39;s an error with fetching SLO related problems.
   * @return relatedTotalProblems
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total number of problems related to the SLO.   Has the value of `-1` if there's an error with fetching SLO related problems.")
  @JsonProperty(JSON_PROPERTY_RELATED_TOTAL_PROBLEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRelatedTotalProblems() {
    return relatedTotalProblems;
  }


  @JsonProperty(JSON_PROPERTY_RELATED_TOTAL_PROBLEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelatedTotalProblems(Integer relatedTotalProblems) {
    this.relatedTotalProblems = relatedTotalProblems;
  }


  public SLO errorBudget(Double errorBudget) {
    this.errorBudget = errorBudget;
    return this;
  }

   /**
   * The error budget of the calculated SLO.   The error budget is the difference between the calculated and target values. A positive number means all is good; a negative number means trouble.
   * @return errorBudget
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1.25", value = "The error budget of the calculated SLO.   The error budget is the difference between the calculated and target values. A positive number means all is good; a negative number means trouble.")
  @JsonProperty(JSON_PROPERTY_ERROR_BUDGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getErrorBudget() {
    return errorBudget;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_BUDGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorBudget(Double errorBudget) {
    this.errorBudget = errorBudget;
  }


  public SLO evaluatedPercentage(Double evaluatedPercentage) {
    this.evaluatedPercentage = evaluatedPercentage;
    return this;
  }

   /**
   * The calculated value of the SLO. Has the value of the evaluated SLO or the value of &#x60;-1&#x60;:   * If there is an error with the SLO calculation; in that case check the value of the **error** property.  * If the evaluate parameter has not been set to &#x60;true&#x60;; in that case the **error** property will contain no error.
   * @return evaluatedPercentage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "96.25", value = "The calculated value of the SLO. Has the value of the evaluated SLO or the value of `-1`:   * If there is an error with the SLO calculation; in that case check the value of the **error** property.  * If the evaluate parameter has not been set to `true`; in that case the **error** property will contain no error.")
  @JsonProperty(JSON_PROPERTY_EVALUATED_PERCENTAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getEvaluatedPercentage() {
    return evaluatedPercentage;
  }


  @JsonProperty(JSON_PROPERTY_EVALUATED_PERCENTAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEvaluatedPercentage(Double evaluatedPercentage) {
    this.evaluatedPercentage = evaluatedPercentage;
  }


  public SLO timeframe(String timeframe) {
    this.timeframe = timeframe;
    return this;
  }

   /**
   * The timeframe for the SLO evaluation. Use the syntax of the global timeframe selector.
   * @return timeframe
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "-1d", value = "The timeframe for the SLO evaluation. Use the syntax of the global timeframe selector.")
  @JsonProperty(JSON_PROPERTY_TIMEFRAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTimeframe() {
    return timeframe;
  }


  @JsonProperty(JSON_PROPERTY_TIMEFRAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeframe(String timeframe) {
    this.timeframe = timeframe;
  }


  public SLO metricKey(String metricKey) {
    this.metricKey = metricKey;
    return this;
  }

   /**
   * The key for a metric expression. Once created, metric keys can&#39;t be changed
   * @return metricKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "func:slo.payment_service_availability", value = "The key for a metric expression. Once created, metric keys can't be changed")
  @JsonProperty(JSON_PROPERTY_METRIC_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMetricKey() {
    return metricKey;
  }


  @JsonProperty(JSON_PROPERTY_METRIC_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetricKey(String metricKey) {
    this.metricKey = metricKey;
  }


  public SLO filter(String filter) {
    this.filter = filter;
    return this;
  }

   /**
   * The entity filter for the SLO evaluation. Use the [syntax of entity selector](https://dt-url.net/entityselector).
   * @return filter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "type(\"SERVICE\")", value = "The entity filter for the SLO evaluation. Use the [syntax of entity selector](https://dt-url.net/entityselector).")
  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFilter() {
    return filter;
  }


  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilter(String filter) {
    this.filter = filter;
  }


  public SLO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the SLO.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Payment service availability", value = "The name of the SLO.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public SLO id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of the SLO
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "123e4567-e89b-42d3-a456-556642440000", value = "The ID of the SLO")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }


  public SLO target(Double target) {
    this.target = target;
    return this;
  }

   /**
   * The target value of the SLO.
   * @return target
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "95.0", value = "The target value of the SLO.")
  @JsonProperty(JSON_PROPERTY_TARGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getTarget() {
    return target;
  }


  @JsonProperty(JSON_PROPERTY_TARGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTarget(Double target) {
    this.target = target;
  }


  public SLO description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A short description of the SLO.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Rate of successful payments per week", value = "A short description of the SLO.")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public SLO enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * The SLO is enabled (&#x60;true&#x60;) or disabled (&#x60;false&#x60;).
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "The SLO is enabled (`true`) or disabled (`false`).")
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public SLO status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The status of the calculated SLO.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "WARNING", value = "The status of the calculated SLO.")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public SLO error(String error) {
    this.error = error;
    return this;
  }

   /**
   * The error of the SLO calculation.   If the value differs from &#x60;NONE&#x60; there&#39;s something wrong with the SLO calculation.
   * @return error
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "NONE", value = "The error of the SLO calculation.   If the value differs from `NONE` there's something wrong with the SLO calculation.")
  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getError() {
    return error;
  }


  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setError(String error) {
    this.error = error;
  }


  public SLO warning(Double warning) {
    this.warning = warning;
    return this;
  }

   /**
   * The warning value of the SLO.    At warning state the SLO is still fulfilled but is getting close to failure.
   * @return warning
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "97.5", value = "The warning value of the SLO.    At warning state the SLO is still fulfilled but is getting close to failure.")
  @JsonProperty(JSON_PROPERTY_WARNING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getWarning() {
    return warning;
  }


  @JsonProperty(JSON_PROPERTY_WARNING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWarning(Double warning) {
    this.warning = warning;
  }


  /**
   * Return true if this SLO object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SLO SLO = (SLO) o;
    return Objects.equals(this.problemFilters, SLO.problemFilters) &&
        Objects.equals(this.metricExpression, SLO.metricExpression) &&
        Objects.equals(this.useRateMetric, SLO.useRateMetric) &&
        Objects.equals(this.metricRate, SLO.metricRate) &&
        Objects.equals(this.metricNumerator, SLO.metricNumerator) &&
        Objects.equals(this.metricDenominator, SLO.metricDenominator) &&
        Objects.equals(this.evaluationType, SLO.evaluationType) &&
        Objects.equals(this.errorBudgetBurnRate, SLO.errorBudgetBurnRate) &&
        Objects.equals(this.burnRateMetricKey, SLO.burnRateMetricKey) &&
        Objects.equals(this.errorBudgetMetricKey, SLO.errorBudgetMetricKey) &&
        Objects.equals(this.normalizedErrorBudgetMetricKey, SLO.normalizedErrorBudgetMetricKey) &&
        Objects.equals(this.numeratorValue, SLO.numeratorValue) &&
        Objects.equals(this.denominatorValue, SLO.denominatorValue) &&
        Objects.equals(this.relatedOpenProblems, SLO.relatedOpenProblems) &&
        Objects.equals(this.relatedTotalProblems, SLO.relatedTotalProblems) &&
        Objects.equals(this.errorBudget, SLO.errorBudget) &&
        Objects.equals(this.evaluatedPercentage, SLO.evaluatedPercentage) &&
        Objects.equals(this.timeframe, SLO.timeframe) &&
        Objects.equals(this.metricKey, SLO.metricKey) &&
        Objects.equals(this.filter, SLO.filter) &&
        Objects.equals(this.name, SLO.name) &&
        Objects.equals(this.id, SLO.id) &&
        Objects.equals(this.target, SLO.target) &&
        Objects.equals(this.description, SLO.description) &&
        Objects.equals(this.enabled, SLO.enabled) &&
        Objects.equals(this.status, SLO.status) &&
        Objects.equals(this.error, SLO.error) &&
        Objects.equals(this.warning, SLO.warning);
  }

  @Override
  public int hashCode() {
    return Objects.hash(problemFilters, metricExpression, useRateMetric, metricRate, metricNumerator, metricDenominator, evaluationType, errorBudgetBurnRate, burnRateMetricKey, errorBudgetMetricKey, normalizedErrorBudgetMetricKey, numeratorValue, denominatorValue, relatedOpenProblems, relatedTotalProblems, errorBudget, evaluatedPercentage, timeframe, metricKey, filter, name, id, target, description, enabled, status, error, warning);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SLO {\n");
    sb.append("    problemFilters: ").append(toIndentedString(problemFilters)).append("\n");
    sb.append("    metricExpression: ").append(toIndentedString(metricExpression)).append("\n");
    sb.append("    useRateMetric: ").append(toIndentedString(useRateMetric)).append("\n");
    sb.append("    metricRate: ").append(toIndentedString(metricRate)).append("\n");
    sb.append("    metricNumerator: ").append(toIndentedString(metricNumerator)).append("\n");
    sb.append("    metricDenominator: ").append(toIndentedString(metricDenominator)).append("\n");
    sb.append("    evaluationType: ").append(toIndentedString(evaluationType)).append("\n");
    sb.append("    errorBudgetBurnRate: ").append(toIndentedString(errorBudgetBurnRate)).append("\n");
    sb.append("    burnRateMetricKey: ").append(toIndentedString(burnRateMetricKey)).append("\n");
    sb.append("    errorBudgetMetricKey: ").append(toIndentedString(errorBudgetMetricKey)).append("\n");
    sb.append("    normalizedErrorBudgetMetricKey: ").append(toIndentedString(normalizedErrorBudgetMetricKey)).append("\n");
    sb.append("    numeratorValue: ").append(toIndentedString(numeratorValue)).append("\n");
    sb.append("    denominatorValue: ").append(toIndentedString(denominatorValue)).append("\n");
    sb.append("    relatedOpenProblems: ").append(toIndentedString(relatedOpenProblems)).append("\n");
    sb.append("    relatedTotalProblems: ").append(toIndentedString(relatedTotalProblems)).append("\n");
    sb.append("    errorBudget: ").append(toIndentedString(errorBudget)).append("\n");
    sb.append("    evaluatedPercentage: ").append(toIndentedString(evaluatedPercentage)).append("\n");
    sb.append("    timeframe: ").append(toIndentedString(timeframe)).append("\n");
    sb.append("    metricKey: ").append(toIndentedString(metricKey)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    warning: ").append(toIndentedString(warning)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

