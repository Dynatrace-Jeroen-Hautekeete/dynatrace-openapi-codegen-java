/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.LinkedHashSet;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Configuration of a network zone.
 */
@ApiModel(description = "Configuration of a network zone.")
@JsonPropertyOrder({
  NetworkZone.JSON_PROPERTY_ALTERNATIVE_ZONES,
  NetworkZone.JSON_PROPERTY_NUM_OF_ONE_AGENTS_USING,
  NetworkZone.JSON_PROPERTY_NUM_OF_CONFIGURED_ONE_AGENTS,
  NetworkZone.JSON_PROPERTY_NUM_OF_ONE_AGENTS_FROM_OTHER_ZONES,
  NetworkZone.JSON_PROPERTY_NUM_OF_CONFIGURED_ACTIVE_GATES,
  NetworkZone.JSON_PROPERTY_ID,
  NetworkZone.JSON_PROPERTY_DESCRIPTION
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class NetworkZone {
  public static final String JSON_PROPERTY_ALTERNATIVE_ZONES = "alternativeZones";
  private Set<String> alternativeZones = null;

  public static final String JSON_PROPERTY_NUM_OF_ONE_AGENTS_USING = "numOfOneAgentsUsing";
  private Integer numOfOneAgentsUsing;

  public static final String JSON_PROPERTY_NUM_OF_CONFIGURED_ONE_AGENTS = "numOfConfiguredOneAgents";
  private Integer numOfConfiguredOneAgents;

  public static final String JSON_PROPERTY_NUM_OF_ONE_AGENTS_FROM_OTHER_ZONES = "numOfOneAgentsFromOtherZones";
  private Integer numOfOneAgentsFromOtherZones;

  public static final String JSON_PROPERTY_NUM_OF_CONFIGURED_ACTIVE_GATES = "numOfConfiguredActiveGates";
  private Integer numOfConfiguredActiveGates;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public NetworkZone() { 
  }

  @JsonCreator
  public NetworkZone(
    @JsonProperty(JSON_PROPERTY_NUM_OF_ONE_AGENTS_USING) Integer numOfOneAgentsUsing, 
    @JsonProperty(JSON_PROPERTY_NUM_OF_CONFIGURED_ONE_AGENTS) Integer numOfConfiguredOneAgents, 
    @JsonProperty(JSON_PROPERTY_NUM_OF_ONE_AGENTS_FROM_OTHER_ZONES) Integer numOfOneAgentsFromOtherZones, 
    @JsonProperty(JSON_PROPERTY_NUM_OF_CONFIGURED_ACTIVE_GATES) Integer numOfConfiguredActiveGates, 
    @JsonProperty(JSON_PROPERTY_ID) String id
  ) {
  this();
    this.numOfOneAgentsUsing = numOfOneAgentsUsing;
    this.numOfConfiguredOneAgents = numOfConfiguredOneAgents;
    this.numOfOneAgentsFromOtherZones = numOfOneAgentsFromOtherZones;
    this.numOfConfiguredActiveGates = numOfConfiguredActiveGates;
    this.id = id;
  }

  public NetworkZone alternativeZones(Set<String> alternativeZones) {
    this.alternativeZones = alternativeZones;
    return this;
  }

  public NetworkZone addAlternativeZonesItem(String alternativeZonesItem) {
    if (this.alternativeZones == null) {
      this.alternativeZones = new LinkedHashSet<>();
    }
    this.alternativeZones.add(alternativeZonesItem);
    return this;
  }

   /**
   * A list of alternative network zones.
   * @return alternativeZones
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of alternative network zones.")
  @JsonProperty(JSON_PROPERTY_ALTERNATIVE_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getAlternativeZones() {
    return alternativeZones;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_ALTERNATIVE_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlternativeZones(Set<String> alternativeZones) {
    this.alternativeZones = alternativeZones;
  }


   /**
   * The number of OneAgents that are using ActiveGates in the network zone.
   * @return numOfOneAgentsUsing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of OneAgents that are using ActiveGates in the network zone.")
  @JsonProperty(JSON_PROPERTY_NUM_OF_ONE_AGENTS_USING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumOfOneAgentsUsing() {
    return numOfOneAgentsUsing;
  }




   /**
   * The number of OneAgents that are configured to use the network zone as primary.
   * @return numOfConfiguredOneAgents
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of OneAgents that are configured to use the network zone as primary.")
  @JsonProperty(JSON_PROPERTY_NUM_OF_CONFIGURED_ONE_AGENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumOfConfiguredOneAgents() {
    return numOfConfiguredOneAgents;
  }




   /**
   * The number of OneAgents from other network zones that are using ActiveGates in the network zone.    This is a fraction of **numOfOneAgentsUsing**.   One possible reason for switching to another zone is that a firewall is preventing a OneAgent from connecting to any ActiveGate in the preferred network zone.  
   * @return numOfOneAgentsFromOtherZones
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of OneAgents from other network zones that are using ActiveGates in the network zone.    This is a fraction of **numOfOneAgentsUsing**.   One possible reason for switching to another zone is that a firewall is preventing a OneAgent from connecting to any ActiveGate in the preferred network zone.  ")
  @JsonProperty(JSON_PROPERTY_NUM_OF_ONE_AGENTS_FROM_OTHER_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumOfOneAgentsFromOtherZones() {
    return numOfOneAgentsFromOtherZones;
  }




   /**
   * The number of ActiveGates in the network zone.
   * @return numOfConfiguredActiveGates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of ActiveGates in the network zone.")
  @JsonProperty(JSON_PROPERTY_NUM_OF_CONFIGURED_ACTIVE_GATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumOfConfiguredActiveGates() {
    return numOfConfiguredActiveGates;
  }




   /**
   * The ID of the network zone
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the network zone")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }




  public NetworkZone description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A short description of the network zone
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A short description of the network zone")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  /**
   * Return true if this NetworkZone object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkZone networkZone = (NetworkZone) o;
    return Objects.equals(this.alternativeZones, networkZone.alternativeZones) &&
        Objects.equals(this.numOfOneAgentsUsing, networkZone.numOfOneAgentsUsing) &&
        Objects.equals(this.numOfConfiguredOneAgents, networkZone.numOfConfiguredOneAgents) &&
        Objects.equals(this.numOfOneAgentsFromOtherZones, networkZone.numOfOneAgentsFromOtherZones) &&
        Objects.equals(this.numOfConfiguredActiveGates, networkZone.numOfConfiguredActiveGates) &&
        Objects.equals(this.id, networkZone.id) &&
        Objects.equals(this.description, networkZone.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alternativeZones, numOfOneAgentsUsing, numOfConfiguredOneAgents, numOfOneAgentsFromOtherZones, numOfConfiguredActiveGates, id, description);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkZone {\n");
    sb.append("    alternativeZones: ").append(toIndentedString(alternativeZones)).append("\n");
    sb.append("    numOfOneAgentsUsing: ").append(toIndentedString(numOfOneAgentsUsing)).append("\n");
    sb.append("    numOfConfiguredOneAgents: ").append(toIndentedString(numOfConfiguredOneAgents)).append("\n");
    sb.append("    numOfOneAgentsFromOtherZones: ").append(toIndentedString(numOfOneAgentsFromOtherZones)).append("\n");
    sb.append("    numOfConfiguredActiveGates: ").append(toIndentedString(numOfConfiguredActiveGates)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

