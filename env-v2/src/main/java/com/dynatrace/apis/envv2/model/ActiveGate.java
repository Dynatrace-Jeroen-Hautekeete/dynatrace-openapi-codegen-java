/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv2.model.ActiveGateAutoUpdateConfig;
import com.dynatrace.apis.envv2.model.ActiveGateConnectedHosts;
import com.dynatrace.apis.envv2.model.ActiveGateModule;
import com.dynatrace.apis.envv2.model.ActiveGateTokenInfoDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Parameters of the ActiveGate.
 */
@ApiModel(description = "Parameters of the ActiveGate.")
@JsonPropertyOrder({
  ActiveGate.JSON_PROPERTY_ID,
  ActiveGate.JSON_PROPERTY_NETWORK_ADDRESSES,
  ActiveGate.JSON_PROPERTY_LOAD_BALANCER_ADDRESSES,
  ActiveGate.JSON_PROPERTY_OS_TYPE,
  ActiveGate.JSON_PROPERTY_OS_ARCHITECTURE,
  ActiveGate.JSON_PROPERTY_OS_BITNESS,
  ActiveGate.JSON_PROPERTY_AUTO_UPDATE_STATUS,
  ActiveGate.JSON_PROPERTY_OFFLINE_SINCE,
  ActiveGate.JSON_PROPERTY_VERSION,
  ActiveGate.JSON_PROPERTY_TYPE,
  ActiveGate.JSON_PROPERTY_HOSTNAME,
  ActiveGate.JSON_PROPERTY_MAIN_ENVIRONMENT,
  ActiveGate.JSON_PROPERTY_ENVIRONMENTS,
  ActiveGate.JSON_PROPERTY_AUTO_UPDATE_SETTINGS,
  ActiveGate.JSON_PROPERTY_NETWORK_ZONE,
  ActiveGate.JSON_PROPERTY_GROUP,
  ActiveGate.JSON_PROPERTY_MODULES,
  ActiveGate.JSON_PROPERTY_CONTAINERIZED,
  ActiveGate.JSON_PROPERTY_CONNECTED_HOSTS,
  ActiveGate.JSON_PROPERTY_ACTIVE_GATE_TOKENS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class ActiveGate {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NETWORK_ADDRESSES = "networkAddresses";
  private List<String> networkAddresses = null;

  public static final String JSON_PROPERTY_LOAD_BALANCER_ADDRESSES = "loadBalancerAddresses";
  private List<String> loadBalancerAddresses = null;

  /**
   * The OS type that the ActiveGate is running on.
   */
  public enum OsTypeEnum {
    LINUX("LINUX"),
    
    WINDOWS("WINDOWS");

    private String value;

    OsTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OsTypeEnum fromValue(String value) {
      for (OsTypeEnum b : OsTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_OS_TYPE = "osType";
  private OsTypeEnum osType;

  /**
   * The OS architecture that the ActiveGate is running on.
   */
  public enum OsArchitectureEnum {
    S390("S390"),
    
    X86("X86");

    private String value;

    OsArchitectureEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OsArchitectureEnum fromValue(String value) {
      for (OsArchitectureEnum b : OsArchitectureEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_OS_ARCHITECTURE = "osArchitecture";
  private OsArchitectureEnum osArchitecture;

  /**
   * The OS bitness that the ActiveGate is running on.
   */
  public enum OsBitnessEnum {
    _64("64");

    private String value;

    OsBitnessEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OsBitnessEnum fromValue(String value) {
      for (OsBitnessEnum b : OsBitnessEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_OS_BITNESS = "osBitness";
  private OsBitnessEnum osBitness;

  /**
   * The current status of auto-updates of the ActiveGate.
   */
  public enum AutoUpdateStatusEnum {
    INCOMPATIBLE("INCOMPATIBLE"),
    
    OUTDATED("OUTDATED"),
    
    SCHEDULED("SCHEDULED"),
    
    SUPPRESSED("SUPPRESSED"),
    
    UNKNOWN("UNKNOWN"),
    
    UP2DATE("UP2DATE"),
    
    UPDATE_IN_PROGRESS("UPDATE_IN_PROGRESS"),
    
    UPDATE_PENDING("UPDATE_PENDING"),
    
    UPDATE_PROBLEM("UPDATE_PROBLEM");

    private String value;

    AutoUpdateStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AutoUpdateStatusEnum fromValue(String value) {
      for (AutoUpdateStatusEnum b : AutoUpdateStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AUTO_UPDATE_STATUS = "autoUpdateStatus";
  private AutoUpdateStatusEnum autoUpdateStatus;

  public static final String JSON_PROPERTY_OFFLINE_SINCE = "offlineSince";
  private Long offlineSince;

  public static final String JSON_PROPERTY_VERSION = "version";
  private String version;

  /**
   * The type of the ActiveGate.
   */
  public enum TypeEnum {
    CLUSTER("CLUSTER"),
    
    ENVIRONMENT("ENVIRONMENT"),
    
    ENVIRONMENT_MULTI("ENVIRONMENT_MULTI");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_HOSTNAME = "hostname";
  private String hostname;

  public static final String JSON_PROPERTY_MAIN_ENVIRONMENT = "mainEnvironment";
  private String mainEnvironment;

  public static final String JSON_PROPERTY_ENVIRONMENTS = "environments";
  private List<String> environments = null;

  public static final String JSON_PROPERTY_AUTO_UPDATE_SETTINGS = "autoUpdateSettings";
  private ActiveGateAutoUpdateConfig autoUpdateSettings;

  public static final String JSON_PROPERTY_NETWORK_ZONE = "networkZone";
  private String networkZone;

  public static final String JSON_PROPERTY_GROUP = "group";
  private String group;

  public static final String JSON_PROPERTY_MODULES = "modules";
  private List<ActiveGateModule> modules = null;

  public static final String JSON_PROPERTY_CONTAINERIZED = "containerized";
  private Boolean containerized;

  public static final String JSON_PROPERTY_CONNECTED_HOSTS = "connectedHosts";
  private ActiveGateConnectedHosts connectedHosts;

  public static final String JSON_PROPERTY_ACTIVE_GATE_TOKENS = "activeGateTokens";
  private List<ActiveGateTokenInfoDto> activeGateTokens = null;

  public ActiveGate() { 
  }

  @JsonCreator
  public ActiveGate(
    @JsonProperty(JSON_PROPERTY_ID) String id, 
    @JsonProperty(JSON_PROPERTY_NETWORK_ADDRESSES) List<String> networkAddresses, 
    @JsonProperty(JSON_PROPERTY_LOAD_BALANCER_ADDRESSES) List<String> loadBalancerAddresses, 
    @JsonProperty(JSON_PROPERTY_OS_TYPE) OsTypeEnum osType, 
    @JsonProperty(JSON_PROPERTY_OS_ARCHITECTURE) OsArchitectureEnum osArchitecture, 
    @JsonProperty(JSON_PROPERTY_OS_BITNESS) OsBitnessEnum osBitness, 
    @JsonProperty(JSON_PROPERTY_AUTO_UPDATE_STATUS) AutoUpdateStatusEnum autoUpdateStatus, 
    @JsonProperty(JSON_PROPERTY_OFFLINE_SINCE) Long offlineSince, 
    @JsonProperty(JSON_PROPERTY_VERSION) String version, 
    @JsonProperty(JSON_PROPERTY_TYPE) TypeEnum type, 
    @JsonProperty(JSON_PROPERTY_HOSTNAME) String hostname, 
    @JsonProperty(JSON_PROPERTY_MAIN_ENVIRONMENT) String mainEnvironment, 
    @JsonProperty(JSON_PROPERTY_ENVIRONMENTS) List<String> environments, 
    @JsonProperty(JSON_PROPERTY_NETWORK_ZONE) String networkZone, 
    @JsonProperty(JSON_PROPERTY_GROUP) String group, 
    @JsonProperty(JSON_PROPERTY_MODULES) List<ActiveGateModule> modules, 
    @JsonProperty(JSON_PROPERTY_CONTAINERIZED) Boolean containerized, 
    @JsonProperty(JSON_PROPERTY_ACTIVE_GATE_TOKENS) List<ActiveGateTokenInfoDto> activeGateTokens
  ) {
  this();
    this.id = id;
    this.networkAddresses = networkAddresses;
    this.loadBalancerAddresses = loadBalancerAddresses;
    this.osType = osType;
    this.osArchitecture = osArchitecture;
    this.osBitness = osBitness;
    this.autoUpdateStatus = autoUpdateStatus;
    this.offlineSince = offlineSince;
    this.version = version;
    this.type = type;
    this.hostname = hostname;
    this.mainEnvironment = mainEnvironment;
    this.environments = environments;
    this.networkZone = networkZone;
    this.group = group;
    this.modules = modules;
    this.containerized = containerized;
    this.activeGateTokens = activeGateTokens;
  }

   /**
   * The ID of the ActiveGate.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0x3efdd091", value = "The ID of the ActiveGate.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }




   /**
   * A list of network addresses of the ActiveGate.
   * @return networkAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of network addresses of the ActiveGate.")
  @JsonProperty(JSON_PROPERTY_NETWORK_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getNetworkAddresses() {
    return networkAddresses;
  }




   /**
   * A list of Load Balancer addresses of the ActiveGate.
   * @return loadBalancerAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of Load Balancer addresses of the ActiveGate.")
  @JsonProperty(JSON_PROPERTY_LOAD_BALANCER_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getLoadBalancerAddresses() {
    return loadBalancerAddresses;
  }




   /**
   * The OS type that the ActiveGate is running on.
   * @return osType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "WINDOWS", value = "The OS type that the ActiveGate is running on.")
  @JsonProperty(JSON_PROPERTY_OS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OsTypeEnum getOsType() {
    return osType;
  }




   /**
   * The OS architecture that the ActiveGate is running on.
   * @return osArchitecture
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "X86", value = "The OS architecture that the ActiveGate is running on.")
  @JsonProperty(JSON_PROPERTY_OS_ARCHITECTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OsArchitectureEnum getOsArchitecture() {
    return osArchitecture;
  }




   /**
   * The OS bitness that the ActiveGate is running on.
   * @return osBitness
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "64", value = "The OS bitness that the ActiveGate is running on.")
  @JsonProperty(JSON_PROPERTY_OS_BITNESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OsBitnessEnum getOsBitness() {
    return osBitness;
  }




   /**
   * The current status of auto-updates of the ActiveGate.
   * @return autoUpdateStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "OUTDATED", value = "The current status of auto-updates of the ActiveGate.")
  @JsonProperty(JSON_PROPERTY_AUTO_UPDATE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AutoUpdateStatusEnum getAutoUpdateStatus() {
    return autoUpdateStatus;
  }




   /**
   * The timestamp since when the ActiveGate is offline.    The &#x60;null&#x60; value means the ActiveGate is online.
   * @return offlineSince
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1582031917814", value = "The timestamp since when the ActiveGate is offline.    The `null` value means the ActiveGate is online.")
  @JsonProperty(JSON_PROPERTY_OFFLINE_SINCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getOfflineSince() {
    return offlineSince;
  }




   /**
   * The current version of the ActiveGate in the &#x60;&lt;major&gt;.&lt;minor&gt;.&lt;revision&gt;.&lt;timestamp&gt;&#x60; format.
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1.185.0.20200201-120000", value = "The current version of the ActiveGate in the `<major>.<minor>.<revision>.<timestamp>` format.")
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersion() {
    return version;
  }




   /**
   * The type of the ActiveGate.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ENVIRONMENT", value = "The type of the ActiveGate.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }




   /**
   * The name of the host the ActiveGate is running on.
   * @return hostname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "exampleHostname", value = "The name of the host the ActiveGate is running on.")
  @JsonProperty(JSON_PROPERTY_HOSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHostname() {
    return hostname;
  }




   /**
   * The ID of the main environment for a multi-environment ActiveGate.
   * @return mainEnvironment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "d1bf4a7e-666b-43af-9f45-718g98372e2f", value = "The ID of the main environment for a multi-environment ActiveGate.")
  @JsonProperty(JSON_PROPERTY_MAIN_ENVIRONMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMainEnvironment() {
    return mainEnvironment;
  }




   /**
   * A list of environments (specified by IDs) the ActiveGate can connect to.
   * @return environments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of environments (specified by IDs) the ActiveGate can connect to.")
  @JsonProperty(JSON_PROPERTY_ENVIRONMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getEnvironments() {
    return environments;
  }




  public ActiveGate autoUpdateSettings(ActiveGateAutoUpdateConfig autoUpdateSettings) {
    this.autoUpdateSettings = autoUpdateSettings;
    return this;
  }

   /**
   * Get autoUpdateSettings
   * @return autoUpdateSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AUTO_UPDATE_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ActiveGateAutoUpdateConfig getAutoUpdateSettings() {
    return autoUpdateSettings;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_UPDATE_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutoUpdateSettings(ActiveGateAutoUpdateConfig autoUpdateSettings) {
    this.autoUpdateSettings = autoUpdateSettings;
  }


   /**
   * The network zone of the ActiveGate.
   * @return networkZone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "exampleNetworkZone", value = "The network zone of the ActiveGate.")
  @JsonProperty(JSON_PROPERTY_NETWORK_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNetworkZone() {
    return networkZone;
  }




   /**
   * The group of the ActiveGate.
   * @return group
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "default", value = "The group of the ActiveGate.")
  @JsonProperty(JSON_PROPERTY_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGroup() {
    return group;
  }




   /**
   * A list of modules of the ActiveGate.
   * @return modules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of modules of the ActiveGate.")
  @JsonProperty(JSON_PROPERTY_MODULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ActiveGateModule> getModules() {
    return modules;
  }




   /**
   * ActiveGate is deployed in container (&#x60;true&#x60;) or not (&#x60;false&#x60;).
   * @return containerized
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ActiveGate is deployed in container (`true`) or not (`false`).")
  @JsonProperty(JSON_PROPERTY_CONTAINERIZED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getContainerized() {
    return containerized;
  }




  public ActiveGate connectedHosts(ActiveGateConnectedHosts connectedHosts) {
    this.connectedHosts = connectedHosts;
    return this;
  }

   /**
   * Get connectedHosts
   * @return connectedHosts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONNECTED_HOSTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ActiveGateConnectedHosts getConnectedHosts() {
    return connectedHosts;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTED_HOSTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectedHosts(ActiveGateConnectedHosts connectedHosts) {
    this.connectedHosts = connectedHosts;
  }


   /**
   * A list of the ActiveGate tokens.
   * @return activeGateTokens
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of the ActiveGate tokens.")
  @JsonProperty(JSON_PROPERTY_ACTIVE_GATE_TOKENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ActiveGateTokenInfoDto> getActiveGateTokens() {
    return activeGateTokens;
  }




  /**
   * Return true if this ActiveGate object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActiveGate activeGate = (ActiveGate) o;
    return Objects.equals(this.id, activeGate.id) &&
        Objects.equals(this.networkAddresses, activeGate.networkAddresses) &&
        Objects.equals(this.loadBalancerAddresses, activeGate.loadBalancerAddresses) &&
        Objects.equals(this.osType, activeGate.osType) &&
        Objects.equals(this.osArchitecture, activeGate.osArchitecture) &&
        Objects.equals(this.osBitness, activeGate.osBitness) &&
        Objects.equals(this.autoUpdateStatus, activeGate.autoUpdateStatus) &&
        Objects.equals(this.offlineSince, activeGate.offlineSince) &&
        Objects.equals(this.version, activeGate.version) &&
        Objects.equals(this.type, activeGate.type) &&
        Objects.equals(this.hostname, activeGate.hostname) &&
        Objects.equals(this.mainEnvironment, activeGate.mainEnvironment) &&
        Objects.equals(this.environments, activeGate.environments) &&
        Objects.equals(this.autoUpdateSettings, activeGate.autoUpdateSettings) &&
        Objects.equals(this.networkZone, activeGate.networkZone) &&
        Objects.equals(this.group, activeGate.group) &&
        Objects.equals(this.modules, activeGate.modules) &&
        Objects.equals(this.containerized, activeGate.containerized) &&
        Objects.equals(this.connectedHosts, activeGate.connectedHosts) &&
        Objects.equals(this.activeGateTokens, activeGate.activeGateTokens);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, networkAddresses, loadBalancerAddresses, osType, osArchitecture, osBitness, autoUpdateStatus, offlineSince, version, type, hostname, mainEnvironment, environments, autoUpdateSettings, networkZone, group, modules, containerized, connectedHosts, activeGateTokens);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActiveGate {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    networkAddresses: ").append(toIndentedString(networkAddresses)).append("\n");
    sb.append("    loadBalancerAddresses: ").append(toIndentedString(loadBalancerAddresses)).append("\n");
    sb.append("    osType: ").append(toIndentedString(osType)).append("\n");
    sb.append("    osArchitecture: ").append(toIndentedString(osArchitecture)).append("\n");
    sb.append("    osBitness: ").append(toIndentedString(osBitness)).append("\n");
    sb.append("    autoUpdateStatus: ").append(toIndentedString(autoUpdateStatus)).append("\n");
    sb.append("    offlineSince: ").append(toIndentedString(offlineSince)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    mainEnvironment: ").append(toIndentedString(mainEnvironment)).append("\n");
    sb.append("    environments: ").append(toIndentedString(environments)).append("\n");
    sb.append("    autoUpdateSettings: ").append(toIndentedString(autoUpdateSettings)).append("\n");
    sb.append("    networkZone: ").append(toIndentedString(networkZone)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    modules: ").append(toIndentedString(modules)).append("\n");
    sb.append("    containerized: ").append(toIndentedString(containerized)).append("\n");
    sb.append("    connectedHosts: ").append(toIndentedString(connectedHosts)).append("\n");
    sb.append("    activeGateTokens: ").append(toIndentedString(activeGateTokens)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

