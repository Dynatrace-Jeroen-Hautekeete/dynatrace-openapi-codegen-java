/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Metadata of an ActiveGate token.
 */
@ApiModel(description = "Metadata of an ActiveGate token.")
@JsonPropertyOrder({
  ActiveGateToken.JSON_PROPERTY_ID,
  ActiveGateToken.JSON_PROPERTY_NAME,
  ActiveGateToken.JSON_PROPERTY_OWNER,
  ActiveGateToken.JSON_PROPERTY_CREATION_DATE,
  ActiveGateToken.JSON_PROPERTY_EXPIRATION_DATE,
  ActiveGateToken.JSON_PROPERTY_LAST_USED_DATE,
  ActiveGateToken.JSON_PROPERTY_SEED_TOKEN,
  ActiveGateToken.JSON_PROPERTY_ACTIVE_GATE_TYPE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class ActiveGateToken {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_OWNER = "owner";
  private String owner;

  public static final String JSON_PROPERTY_CREATION_DATE = "creationDate";
  private String creationDate;

  public static final String JSON_PROPERTY_EXPIRATION_DATE = "expirationDate";
  private String expirationDate;

  public static final String JSON_PROPERTY_LAST_USED_DATE = "lastUsedDate";
  private String lastUsedDate;

  public static final String JSON_PROPERTY_SEED_TOKEN = "seedToken";
  private Boolean seedToken;

  /**
   * The type of the ActiveGate for which the token is valid.
   */
  public enum ActiveGateTypeEnum {
    ENVIRONMENT("ENVIRONMENT"),
    
    CLUSTER("CLUSTER");

    private String value;

    ActiveGateTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ActiveGateTypeEnum fromValue(String value) {
      for (ActiveGateTypeEnum b : ActiveGateTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ACTIVE_GATE_TYPE = "activeGateType";
  private ActiveGateTypeEnum activeGateType;

  public ActiveGateToken() { 
  }

  public ActiveGateToken id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token.
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "dt0g02.4KWZO5EF", required = true, value = "The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public ActiveGateToken name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the token.
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "myToken", required = true, value = "The name of the token.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public ActiveGateToken owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * The owner of the token.
   * @return owner
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "john.smith", required = true, value = "The owner of the token.")
  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOwner() {
    return owner;
  }


  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOwner(String owner) {
    this.owner = owner;
  }


  public ActiveGateToken creationDate(String creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * The token creation date in ISO 8601 format (&#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;&#x60;).
   * @return creationDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2020-11-22T08:15:30.144Z", required = true, value = "The token creation date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`).")
  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCreationDate() {
    return creationDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreationDate(String creationDate) {
    this.creationDate = creationDate;
  }


  public ActiveGateToken expirationDate(String expirationDate) {
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * The token expiration date in ISO 8601 format (&#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;&#x60;).    If not set, the token never expires.
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-11-24T08:15:30.144Z", value = "The token expiration date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`).    If not set, the token never expires.")
  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpirationDate() {
    return expirationDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpirationDate(String expirationDate) {
    this.expirationDate = expirationDate;
  }


  public ActiveGateToken lastUsedDate(String lastUsedDate) {
    this.lastUsedDate = lastUsedDate;
    return this;
  }

   /**
   * The token last used date in ISO 8601 format (&#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;&#x60;).
   * @return lastUsedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-11-23T08:15:30.144Z", value = "The token last used date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`).")
  @JsonProperty(JSON_PROPERTY_LAST_USED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastUsedDate() {
    return lastUsedDate;
  }


  @JsonProperty(JSON_PROPERTY_LAST_USED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastUsedDate(String lastUsedDate) {
    this.lastUsedDate = lastUsedDate;
  }


  public ActiveGateToken seedToken(Boolean seedToken) {
    this.seedToken = seedToken;
    return this;
  }

   /**
   * The token is a seed token (&#x60;true&#x60;) or an individual token (&#x60;false&#x60;).
   * @return seedToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "The token is a seed token (`true`) or an individual token (`false`).")
  @JsonProperty(JSON_PROPERTY_SEED_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSeedToken() {
    return seedToken;
  }


  @JsonProperty(JSON_PROPERTY_SEED_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSeedToken(Boolean seedToken) {
    this.seedToken = seedToken;
  }


  public ActiveGateToken activeGateType(ActiveGateTypeEnum activeGateType) {
    this.activeGateType = activeGateType;
    return this;
  }

   /**
   * The type of the ActiveGate for which the token is valid.
   * @return activeGateType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The type of the ActiveGate for which the token is valid.")
  @JsonProperty(JSON_PROPERTY_ACTIVE_GATE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ActiveGateTypeEnum getActiveGateType() {
    return activeGateType;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_GATE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setActiveGateType(ActiveGateTypeEnum activeGateType) {
    this.activeGateType = activeGateType;
  }


  /**
   * Return true if this ActiveGateToken object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActiveGateToken activeGateToken = (ActiveGateToken) o;
    return Objects.equals(this.id, activeGateToken.id) &&
        Objects.equals(this.name, activeGateToken.name) &&
        Objects.equals(this.owner, activeGateToken.owner) &&
        Objects.equals(this.creationDate, activeGateToken.creationDate) &&
        Objects.equals(this.expirationDate, activeGateToken.expirationDate) &&
        Objects.equals(this.lastUsedDate, activeGateToken.lastUsedDate) &&
        Objects.equals(this.seedToken, activeGateToken.seedToken) &&
        Objects.equals(this.activeGateType, activeGateToken.activeGateType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, owner, creationDate, expirationDate, lastUsedDate, seedToken, activeGateType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActiveGateToken {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    lastUsedDate: ").append(toIndentedString(lastUsedDate)).append("\n");
    sb.append("    seedToken: ").append(toIndentedString(seedToken)).append("\n");
    sb.append("    activeGateType: ").append(toIndentedString(activeGateType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

