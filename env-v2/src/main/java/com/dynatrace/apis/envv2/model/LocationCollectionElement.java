/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * A synthetic location.
 */
@ApiModel(description = "A synthetic location.")
@JsonPropertyOrder({
  LocationCollectionElement.JSON_PROPERTY_NAME,
  LocationCollectionElement.JSON_PROPERTY_ENTITY_ID,
  LocationCollectionElement.JSON_PROPERTY_TYPE,
  LocationCollectionElement.JSON_PROPERTY_CLOUD_PLATFORM,
  LocationCollectionElement.JSON_PROPERTY_IPS,
  LocationCollectionElement.JSON_PROPERTY_STAGE,
  LocationCollectionElement.JSON_PROPERTY_STATUS,
  LocationCollectionElement.JSON_PROPERTY_GEO_LOCATION_ID
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class LocationCollectionElement {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ENTITY_ID = "entityId";
  private String entityId;

  /**
   * The type of the location.
   */
  public enum TypeEnum {
    CLUSTER("CLUSTER"),
    
    PRIVATE("PRIVATE"),
    
    PUBLIC("PUBLIC");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  /**
   * The cloud provider where the location is hosted.    Only applicable to &#x60;PUBLIC&#x60; locations.
   */
  public enum CloudPlatformEnum {
    ALIBABA("ALIBABA"),
    
    AMAZON_EC2("AMAZON_EC2"),
    
    AZURE("AZURE"),
    
    DYNATRACE_CLOUD("DYNATRACE_CLOUD"),
    
    GOOGLE_CLOUD("GOOGLE_CLOUD"),
    
    INTEROUTE("INTEROUTE"),
    
    OTHER("OTHER"),
    
    UNDEFINED("UNDEFINED");

    private String value;

    CloudPlatformEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CloudPlatformEnum fromValue(String value) {
      for (CloudPlatformEnum b : CloudPlatformEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CLOUD_PLATFORM = "cloudPlatform";
  private CloudPlatformEnum cloudPlatform;

  public static final String JSON_PROPERTY_IPS = "ips";
  private List<String> ips = null;

  /**
   * The release stage of the location.
   */
  public enum StageEnum {
    BETA("BETA"),
    
    COMING_SOON("COMING_SOON"),
    
    DELETED("DELETED"),
    
    GA("GA");

    private String value;

    StageEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StageEnum fromValue(String value) {
      for (StageEnum b : StageEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STAGE = "stage";
  private StageEnum stage;

  /**
   * The status of the location.
   */
  public enum StatusEnum {
    DISABLED("DISABLED"),
    
    ENABLED("ENABLED"),
    
    HIDDEN("HIDDEN");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_GEO_LOCATION_ID = "geoLocationId";
  private String geoLocationId;

  public LocationCollectionElement() { 
  }

  public LocationCollectionElement name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the location.
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name of the location.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public LocationCollectionElement entityId(String entityId) {
    this.entityId = entityId;
    return this;
  }

   /**
   * The Dynatrace entity ID of the location.
   * @return entityId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The Dynatrace entity ID of the location.")
  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEntityId() {
    return entityId;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }


  public LocationCollectionElement type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The type of the location.
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The type of the location.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public LocationCollectionElement cloudPlatform(CloudPlatformEnum cloudPlatform) {
    this.cloudPlatform = cloudPlatform;
    return this;
  }

   /**
   * The cloud provider where the location is hosted.    Only applicable to &#x60;PUBLIC&#x60; locations.
   * @return cloudPlatform
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The cloud provider where the location is hosted.    Only applicable to `PUBLIC` locations.")
  @JsonProperty(JSON_PROPERTY_CLOUD_PLATFORM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CloudPlatformEnum getCloudPlatform() {
    return cloudPlatform;
  }


  @JsonProperty(JSON_PROPERTY_CLOUD_PLATFORM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCloudPlatform(CloudPlatformEnum cloudPlatform) {
    this.cloudPlatform = cloudPlatform;
  }


  public LocationCollectionElement ips(List<String> ips) {
    this.ips = ips;
    return this;
  }

  public LocationCollectionElement addIpsItem(String ipsItem) {
    if (this.ips == null) {
      this.ips = new ArrayList<>();
    }
    this.ips.add(ipsItem);
    return this;
  }

   /**
   * The list of IP addresses assigned to the location.    Only applicable to &#x60;PUBLIC&#x60; locations.
   * @return ips
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of IP addresses assigned to the location.    Only applicable to `PUBLIC` locations.")
  @JsonProperty(JSON_PROPERTY_IPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getIps() {
    return ips;
  }


  @JsonProperty(JSON_PROPERTY_IPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIps(List<String> ips) {
    this.ips = ips;
  }


  public LocationCollectionElement stage(StageEnum stage) {
    this.stage = stage;
    return this;
  }

   /**
   * The release stage of the location.
   * @return stage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The release stage of the location.")
  @JsonProperty(JSON_PROPERTY_STAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StageEnum getStage() {
    return stage;
  }


  @JsonProperty(JSON_PROPERTY_STAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStage(StageEnum stage) {
    this.stage = stage;
  }


  public LocationCollectionElement status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The status of the location.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The status of the location.")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public LocationCollectionElement geoLocationId(String geoLocationId) {
    this.geoLocationId = geoLocationId;
    return this;
  }

   /**
   * The Dynatrace GeoLocation ID of the location.
   * @return geoLocationId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The Dynatrace GeoLocation ID of the location.")
  @JsonProperty(JSON_PROPERTY_GEO_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getGeoLocationId() {
    return geoLocationId;
  }


  @JsonProperty(JSON_PROPERTY_GEO_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGeoLocationId(String geoLocationId) {
    this.geoLocationId = geoLocationId;
  }


  /**
   * Return true if this LocationCollectionElement object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LocationCollectionElement locationCollectionElement = (LocationCollectionElement) o;
    return Objects.equals(this.name, locationCollectionElement.name) &&
        Objects.equals(this.entityId, locationCollectionElement.entityId) &&
        Objects.equals(this.type, locationCollectionElement.type) &&
        Objects.equals(this.cloudPlatform, locationCollectionElement.cloudPlatform) &&
        Objects.equals(this.ips, locationCollectionElement.ips) &&
        Objects.equals(this.stage, locationCollectionElement.stage) &&
        Objects.equals(this.status, locationCollectionElement.status) &&
        Objects.equals(this.geoLocationId, locationCollectionElement.geoLocationId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, entityId, type, cloudPlatform, ips, stage, status, geoLocationId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LocationCollectionElement {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    cloudPlatform: ").append(toIndentedString(cloudPlatform)).append("\n");
    sb.append("    ips: ").append(toIndentedString(ips)).append("\n");
    sb.append("    stage: ").append(toIndentedString(stage)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    geoLocationId: ").append(toIndentedString(geoLocationId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

