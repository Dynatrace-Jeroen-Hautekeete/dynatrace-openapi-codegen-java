/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv2.model.Error;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The response to a creation- or update-request.
 */
@ApiModel(description = "The response to a creation- or update-request.")
@JsonPropertyOrder({
  SettingsObjectResponse.JSON_PROPERTY_INVALID_VALUE,
  SettingsObjectResponse.JSON_PROPERTY_CODE,
  SettingsObjectResponse.JSON_PROPERTY_ERROR,
  SettingsObjectResponse.JSON_PROPERTY_OBJECT_ID
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class SettingsObjectResponse {
  public static final String JSON_PROPERTY_INVALID_VALUE = "invalidValue";
  private Object invalidValue;

  public static final String JSON_PROPERTY_CODE = "code";
  private Integer code;

  public static final String JSON_PROPERTY_ERROR = "error";
  private Error error;

  public static final String JSON_PROPERTY_OBJECT_ID = "objectId";
  private String objectId;

  public SettingsObjectResponse() { 
  }

  public SettingsObjectResponse invalidValue(Object invalidValue) {
    this.invalidValue = invalidValue;
    return this;
  }

   /**
   * The value of the setting.    It defines the actual values of settings&#39; parameters.   The actual content depends on the object&#39;s schema.
   * @return invalidValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"autoMonitoring\":true}", value = "The value of the setting.    It defines the actual values of settings' parameters.   The actual content depends on the object's schema.")
  @JsonProperty(JSON_PROPERTY_INVALID_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getInvalidValue() {
    return invalidValue;
  }


  @JsonProperty(JSON_PROPERTY_INVALID_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvalidValue(Object invalidValue) {
    this.invalidValue = invalidValue;
  }


  public SettingsObjectResponse code(Integer code) {
    this.code = code;
    return this;
  }

   /**
   * The HTTP status code for the object.
   * @return code
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The HTTP status code for the object.")
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCode(Integer code) {
    this.code = code;
  }


  public SettingsObjectResponse error(Error error) {
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Error getError() {
    return error;
  }


  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setError(Error error) {
    this.error = error;
  }


  public SettingsObjectResponse objectId(String objectId) {
    this.objectId = objectId;
    return this;
  }

   /**
   * For a successful request, the ID of the created or modified settings object.
   * @return objectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=", value = "For a successful request, the ID of the created or modified settings object.")
  @JsonProperty(JSON_PROPERTY_OBJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getObjectId() {
    return objectId;
  }


  @JsonProperty(JSON_PROPERTY_OBJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setObjectId(String objectId) {
    this.objectId = objectId;
  }


  /**
   * Return true if this SettingsObjectResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SettingsObjectResponse settingsObjectResponse = (SettingsObjectResponse) o;
    return Objects.equals(this.invalidValue, settingsObjectResponse.invalidValue) &&
        Objects.equals(this.code, settingsObjectResponse.code) &&
        Objects.equals(this.error, settingsObjectResponse.error) &&
        Objects.equals(this.objectId, settingsObjectResponse.objectId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(invalidValue, code, error, objectId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SettingsObjectResponse {\n");
    sb.append("    invalidValue: ").append(toIndentedString(invalidValue)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    objectId: ").append(toIndentedString(objectId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

