/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Customization for UI table columns
 */
@ApiModel(description = "Customization for UI table columns")
@JsonPropertyOrder({
  UiTableColumnCustomization.JSON_PROPERTY_PROPERTY_REF,
  UiTableColumnCustomization.JSON_PROPERTY_BUILTIN_COLUMN_REF,
  UiTableColumnCustomization.JSON_PROPERTY_DISPLAY_NAME,
  UiTableColumnCustomization.JSON_PROPERTY_TYPE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class UiTableColumnCustomization {
  public static final String JSON_PROPERTY_PROPERTY_REF = "propertyRef";
  private String propertyRef;

  public static final String JSON_PROPERTY_BUILTIN_COLUMN_REF = "builtinColumnRef";
  private String builtinColumnRef;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public UiTableColumnCustomization() { 
  }

  public UiTableColumnCustomization propertyRef(String propertyRef) {
    this.propertyRef = propertyRef;
    return this;
  }

   /**
   * The referenced property for this column.
   * @return propertyRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "apiColor", value = "The referenced property for this column.")
  @JsonProperty(JSON_PROPERTY_PROPERTY_REF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPropertyRef() {
    return propertyRef;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTY_REF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPropertyRef(String propertyRef) {
    this.propertyRef = propertyRef;
  }


  public UiTableColumnCustomization builtinColumnRef(String builtinColumnRef) {
    this.builtinColumnRef = builtinColumnRef;
    return this;
  }

   /**
   * The ui specific builtin column-implementation for this column.
   * @return builtinColumnRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "summary", value = "The ui specific builtin column-implementation for this column.")
  @JsonProperty(JSON_PROPERTY_BUILTIN_COLUMN_REF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBuiltinColumnRef() {
    return builtinColumnRef;
  }


  @JsonProperty(JSON_PROPERTY_BUILTIN_COLUMN_REF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuiltinColumnRef(String builtinColumnRef) {
    this.builtinColumnRef = builtinColumnRef;
  }


  public UiTableColumnCustomization displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * The display name for this column.
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Color", value = "The display name for this column.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public UiTableColumnCustomization type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The ui specific type for this column.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "cell-color-picker", value = "The ui specific type for this column.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  /**
   * Return true if this UiTableColumnCustomization object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UiTableColumnCustomization uiTableColumnCustomization = (UiTableColumnCustomization) o;
    return Objects.equals(this.propertyRef, uiTableColumnCustomization.propertyRef) &&
        Objects.equals(this.builtinColumnRef, uiTableColumnCustomization.builtinColumnRef) &&
        Objects.equals(this.displayName, uiTableColumnCustomization.displayName) &&
        Objects.equals(this.type, uiTableColumnCustomization.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(propertyRef, builtinColumnRef, displayName, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UiTableColumnCustomization {\n");
    sb.append("    propertyRef: ").append(toIndentedString(propertyRef)).append("\n");
    sb.append("    builtinColumnRef: ").append(toIndentedString(builtinColumnRef)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

