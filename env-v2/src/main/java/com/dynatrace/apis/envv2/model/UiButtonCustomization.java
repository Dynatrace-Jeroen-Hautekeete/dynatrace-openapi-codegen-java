/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * UI customization for defining a button that calls a function when pressed
 */
@ApiModel(description = "UI customization for defining a button that calls a function when pressed")
@JsonPropertyOrder({
  UiButtonCustomization.JSON_PROPERTY_INSERT_AFTER,
  UiButtonCustomization.JSON_PROPERTY_FUNCTION,
  UiButtonCustomization.JSON_PROPERTY_TITLE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class UiButtonCustomization {
  public static final String JSON_PROPERTY_INSERT_AFTER = "insertAfter";
  private String insertAfter;

  public static final String JSON_PROPERTY_FUNCTION = "function";
  private String function;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public UiButtonCustomization() { 
  }

  public UiButtonCustomization insertAfter(String insertAfter) {
    this.insertAfter = insertAfter;
    return this;
  }

   /**
   * The path of a property where the button should be shown in the UI
   * @return insertAfter
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The path of a property where the button should be shown in the UI")
  @JsonProperty(JSON_PROPERTY_INSERT_AFTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getInsertAfter() {
    return insertAfter;
  }


  @JsonProperty(JSON_PROPERTY_INSERT_AFTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInsertAfter(String insertAfter) {
    this.insertAfter = insertAfter;
  }


  public UiButtonCustomization function(String function) {
    this.function = function;
    return this;
  }

   /**
   * The function to be called when the button is pressed
   * @return function
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The function to be called when the button is pressed")
  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFunction() {
    return function;
  }


  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFunction(String function) {
    this.function = function;
  }


  public UiButtonCustomization title(String title) {
    this.title = title;
    return this;
  }

   /**
   * The title of the button
   * @return title
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The title of the button")
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTitle(String title) {
    this.title = title;
  }


  /**
   * Return true if this UiButtonCustomization object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UiButtonCustomization uiButtonCustomization = (UiButtonCustomization) o;
    return Objects.equals(this.insertAfter, uiButtonCustomization.insertAfter) &&
        Objects.equals(this.function, uiButtonCustomization.function) &&
        Objects.equals(this.title, uiButtonCustomization.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(insertAfter, function, title);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UiButtonCustomization {\n");
    sb.append("    insertAfter: ").append(toIndentedString(insertAfter)).append("\n");
    sb.append("    function: ").append(toIndentedString(function)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

