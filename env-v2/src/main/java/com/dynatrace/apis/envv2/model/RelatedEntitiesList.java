/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv2.model.RelatedEntity;
import com.dynatrace.apis.envv2.model.RelatedService;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * A list of related entities of the security problem.   A related entity is a monitored entity that is directly or indirectly related to an *affected entity* (for example, it could be a host where an affected process runs).   Each related entity contains a list of corresponding affected entities (for example, an affected process running on this host).
 */
@ApiModel(description = "A list of related entities of the security problem.   A related entity is a monitored entity that is directly or indirectly related to an *affected entity* (for example, it could be a host where an affected process runs).   Each related entity contains a list of corresponding affected entities (for example, an affected process running on this host).")
@JsonPropertyOrder({
  RelatedEntitiesList.JSON_PROPERTY_APPLICATIONS,
  RelatedEntitiesList.JSON_PROPERTY_SERVICES,
  RelatedEntitiesList.JSON_PROPERTY_HOSTS,
  RelatedEntitiesList.JSON_PROPERTY_DATABASES,
  RelatedEntitiesList.JSON_PROPERTY_KUBERNETES_WORKLOADS,
  RelatedEntitiesList.JSON_PROPERTY_KUBERNETES_CLUSTERS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class RelatedEntitiesList {
  public static final String JSON_PROPERTY_APPLICATIONS = "applications";
  private List<RelatedEntity> applications = null;

  public static final String JSON_PROPERTY_SERVICES = "services";
  private List<RelatedService> services = null;

  public static final String JSON_PROPERTY_HOSTS = "hosts";
  private List<RelatedEntity> hosts = null;

  public static final String JSON_PROPERTY_DATABASES = "databases";
  private List<String> databases = null;

  public static final String JSON_PROPERTY_KUBERNETES_WORKLOADS = "kubernetesWorkloads";
  private List<RelatedEntity> kubernetesWorkloads = null;

  public static final String JSON_PROPERTY_KUBERNETES_CLUSTERS = "kubernetesClusters";
  private List<RelatedEntity> kubernetesClusters = null;

  public RelatedEntitiesList() { 
  }

  @JsonCreator
  public RelatedEntitiesList(
    @JsonProperty(JSON_PROPERTY_APPLICATIONS) List<RelatedEntity> applications, 
    @JsonProperty(JSON_PROPERTY_SERVICES) List<RelatedService> services, 
    @JsonProperty(JSON_PROPERTY_HOSTS) List<RelatedEntity> hosts, 
    @JsonProperty(JSON_PROPERTY_DATABASES) List<String> databases, 
    @JsonProperty(JSON_PROPERTY_KUBERNETES_WORKLOADS) List<RelatedEntity> kubernetesWorkloads, 
    @JsonProperty(JSON_PROPERTY_KUBERNETES_CLUSTERS) List<RelatedEntity> kubernetesClusters
  ) {
  this();
    this.applications = applications;
    this.services = services;
    this.hosts = hosts;
    this.databases = databases;
    this.kubernetesWorkloads = kubernetesWorkloads;
    this.kubernetesClusters = kubernetesClusters;
  }

   /**
   * A list of related applications.
   * @return applications
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of related applications.")
  @JsonProperty(JSON_PROPERTY_APPLICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RelatedEntity> getApplications() {
    return applications;
  }




   /**
   * A list of related services.
   * @return services
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of related services.")
  @JsonProperty(JSON_PROPERTY_SERVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RelatedService> getServices() {
    return services;
  }




   /**
   * A list of related hosts.
   * @return hosts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of related hosts.")
  @JsonProperty(JSON_PROPERTY_HOSTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RelatedEntity> getHosts() {
    return hosts;
  }




   /**
   * A list of related databases.
   * @return databases
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of related databases.")
  @JsonProperty(JSON_PROPERTY_DATABASES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getDatabases() {
    return databases;
  }




   /**
   * A list of related Kubernetes workloads.
   * @return kubernetesWorkloads
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of related Kubernetes workloads.")
  @JsonProperty(JSON_PROPERTY_KUBERNETES_WORKLOADS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RelatedEntity> getKubernetesWorkloads() {
    return kubernetesWorkloads;
  }




   /**
   * A list of related Kubernetes clusters.
   * @return kubernetesClusters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of related Kubernetes clusters.")
  @JsonProperty(JSON_PROPERTY_KUBERNETES_CLUSTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RelatedEntity> getKubernetesClusters() {
    return kubernetesClusters;
  }




  /**
   * Return true if this RelatedEntitiesList object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RelatedEntitiesList relatedEntitiesList = (RelatedEntitiesList) o;
    return Objects.equals(this.applications, relatedEntitiesList.applications) &&
        Objects.equals(this.services, relatedEntitiesList.services) &&
        Objects.equals(this.hosts, relatedEntitiesList.hosts) &&
        Objects.equals(this.databases, relatedEntitiesList.databases) &&
        Objects.equals(this.kubernetesWorkloads, relatedEntitiesList.kubernetesWorkloads) &&
        Objects.equals(this.kubernetesClusters, relatedEntitiesList.kubernetesClusters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applications, services, hosts, databases, kubernetesWorkloads, kubernetesClusters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RelatedEntitiesList {\n");
    sb.append("    applications: ").append(toIndentedString(applications)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("    hosts: ").append(toIndentedString(hosts)).append("\n");
    sb.append("    databases: ").append(toIndentedString(databases)).append("\n");
    sb.append("    kubernetesWorkloads: ").append(toIndentedString(kubernetesWorkloads)).append("\n");
    sb.append("    kubernetesClusters: ").append(toIndentedString(kubernetesClusters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

