/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * TransactionalEvidenceAllOf
 */
@JsonPropertyOrder({
  TransactionalEvidenceAllOf.JSON_PROPERTY_VALUE_BEFORE_CHANGE_POINT,
  TransactionalEvidenceAllOf.JSON_PROPERTY_VALUE_AFTER_CHANGE_POINT,
  TransactionalEvidenceAllOf.JSON_PROPERTY_END_TIME,
  TransactionalEvidenceAllOf.JSON_PROPERTY_UNIT
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class TransactionalEvidenceAllOf {
  public static final String JSON_PROPERTY_VALUE_BEFORE_CHANGE_POINT = "valueBeforeChangePoint";
  private Float valueBeforeChangePoint;

  public static final String JSON_PROPERTY_VALUE_AFTER_CHANGE_POINT = "valueAfterChangePoint";
  private Float valueAfterChangePoint;

  public static final String JSON_PROPERTY_END_TIME = "endTime";
  private Long endTime;

  public static final String JSON_PROPERTY_UNIT = "unit";
  private String unit;

  public TransactionalEvidenceAllOf() { 
  }

  public TransactionalEvidenceAllOf valueBeforeChangePoint(Float valueBeforeChangePoint) {
    this.valueBeforeChangePoint = valueBeforeChangePoint;
    return this;
  }

   /**
   * The metric&#39;s value before the problem start.
   * @return valueBeforeChangePoint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The metric's value before the problem start.")
  @JsonProperty(JSON_PROPERTY_VALUE_BEFORE_CHANGE_POINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getValueBeforeChangePoint() {
    return valueBeforeChangePoint;
  }


  @JsonProperty(JSON_PROPERTY_VALUE_BEFORE_CHANGE_POINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValueBeforeChangePoint(Float valueBeforeChangePoint) {
    this.valueBeforeChangePoint = valueBeforeChangePoint;
  }


  public TransactionalEvidenceAllOf valueAfterChangePoint(Float valueAfterChangePoint) {
    this.valueAfterChangePoint = valueAfterChangePoint;
    return this;
  }

   /**
   * The metric&#39;s value after the problem start.
   * @return valueAfterChangePoint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The metric's value after the problem start.")
  @JsonProperty(JSON_PROPERTY_VALUE_AFTER_CHANGE_POINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getValueAfterChangePoint() {
    return valueAfterChangePoint;
  }


  @JsonProperty(JSON_PROPERTY_VALUE_AFTER_CHANGE_POINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValueAfterChangePoint(Float valueAfterChangePoint) {
    this.valueAfterChangePoint = valueAfterChangePoint;
  }


  public TransactionalEvidenceAllOf endTime(Long endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * The end time of the evidence, in UTC milliseconds
   * @return endTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The end time of the evidence, in UTC milliseconds")
  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getEndTime() {
    return endTime;
  }


  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndTime(Long endTime) {
    this.endTime = endTime;
  }


  public TransactionalEvidenceAllOf unit(String unit) {
    this.unit = unit;
    return this;
  }

   /**
   * The unit of the metric.
   * @return unit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unit of the metric.")
  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUnit() {
    return unit;
  }


  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnit(String unit) {
    this.unit = unit;
  }


  /**
   * Return true if this TransactionalEvidence_allOf object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionalEvidenceAllOf transactionalEvidenceAllOf = (TransactionalEvidenceAllOf) o;
    return Objects.equals(this.valueBeforeChangePoint, transactionalEvidenceAllOf.valueBeforeChangePoint) &&
        Objects.equals(this.valueAfterChangePoint, transactionalEvidenceAllOf.valueAfterChangePoint) &&
        Objects.equals(this.endTime, transactionalEvidenceAllOf.endTime) &&
        Objects.equals(this.unit, transactionalEvidenceAllOf.unit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(valueBeforeChangePoint, valueAfterChangePoint, endTime, unit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionalEvidenceAllOf {\n");
    sb.append("    valueBeforeChangePoint: ").append(toIndentedString(valueBeforeChangePoint)).append("\n");
    sb.append("    valueAfterChangePoint: ").append(toIndentedString(valueAfterChangePoint)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

