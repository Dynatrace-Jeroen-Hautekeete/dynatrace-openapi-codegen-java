/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv2.model.VulnerableFunction;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.LinkedHashSet;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Assessment of the remediation item.
 */
@ApiModel(description = "Assessment of the remediation item.")
@JsonPropertyOrder({
  RemediationAssessment.JSON_PROPERTY_EXPOSURE,
  RemediationAssessment.JSON_PROPERTY_DATA_ASSETS,
  RemediationAssessment.JSON_PROPERTY_NUMBER_OF_DATA_ASSETS,
  RemediationAssessment.JSON_PROPERTY_VULNERABLE_FUNCTION_USAGE,
  RemediationAssessment.JSON_PROPERTY_VULNERABLE_FUNCTIONS_IN_USE,
  RemediationAssessment.JSON_PROPERTY_VULNERABLE_FUNCTIONS_NOT_IN_USE,
  RemediationAssessment.JSON_PROPERTY_VULNERABLE_FUNCTIONS_NOT_AVAILABLE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class RemediationAssessment {
  /**
   * The level of exposure of affected entities.
   */
  public enum ExposureEnum {
    NOT_AVAILABLE("NOT_AVAILABLE"),
    
    NOT_DETECTED("NOT_DETECTED"),
    
    PUBLIC_NETWORK("PUBLIC_NETWORK");

    private String value;

    ExposureEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ExposureEnum fromValue(String value) {
      for (ExposureEnum b : ExposureEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_EXPOSURE = "exposure";
  private ExposureEnum exposure;

  /**
   * The reachability of related data assets by affected entities.
   */
  public enum DataAssetsEnum {
    NOT_AVAILABLE("NOT_AVAILABLE"),
    
    NOT_DETECTED("NOT_DETECTED"),
    
    REACHABLE("REACHABLE");

    private String value;

    DataAssetsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DataAssetsEnum fromValue(String value) {
      for (DataAssetsEnum b : DataAssetsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DATA_ASSETS = "dataAssets";
  private DataAssetsEnum dataAssets;

  public static final String JSON_PROPERTY_NUMBER_OF_DATA_ASSETS = "numberOfDataAssets";
  private Long numberOfDataAssets;

  /**
   * The usage of vulnerable functions
   */
  public enum VulnerableFunctionUsageEnum {
    IN_USE("IN_USE"),
    
    NOT_AVAILABLE("NOT_AVAILABLE"),
    
    NOT_IN_USE("NOT_IN_USE");

    private String value;

    VulnerableFunctionUsageEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VulnerableFunctionUsageEnum fromValue(String value) {
      for (VulnerableFunctionUsageEnum b : VulnerableFunctionUsageEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VULNERABLE_FUNCTION_USAGE = "vulnerableFunctionUsage";
  private VulnerableFunctionUsageEnum vulnerableFunctionUsage;

  public static final String JSON_PROPERTY_VULNERABLE_FUNCTIONS_IN_USE = "vulnerableFunctionsInUse";
  private Set<VulnerableFunction> vulnerableFunctionsInUse = null;

  public static final String JSON_PROPERTY_VULNERABLE_FUNCTIONS_NOT_IN_USE = "vulnerableFunctionsNotInUse";
  private Set<VulnerableFunction> vulnerableFunctionsNotInUse = null;

  public static final String JSON_PROPERTY_VULNERABLE_FUNCTIONS_NOT_AVAILABLE = "vulnerableFunctionsNotAvailable";
  private Set<VulnerableFunction> vulnerableFunctionsNotAvailable = null;

  public RemediationAssessment() { 
  }

  @JsonCreator
  public RemediationAssessment(
    @JsonProperty(JSON_PROPERTY_EXPOSURE) ExposureEnum exposure, 
    @JsonProperty(JSON_PROPERTY_DATA_ASSETS) DataAssetsEnum dataAssets, 
    @JsonProperty(JSON_PROPERTY_NUMBER_OF_DATA_ASSETS) Long numberOfDataAssets, 
    @JsonProperty(JSON_PROPERTY_VULNERABLE_FUNCTION_USAGE) VulnerableFunctionUsageEnum vulnerableFunctionUsage, 
    @JsonProperty(JSON_PROPERTY_VULNERABLE_FUNCTIONS_IN_USE) Set<VulnerableFunction> vulnerableFunctionsInUse, 
    @JsonProperty(JSON_PROPERTY_VULNERABLE_FUNCTIONS_NOT_IN_USE) Set<VulnerableFunction> vulnerableFunctionsNotInUse, 
    @JsonProperty(JSON_PROPERTY_VULNERABLE_FUNCTIONS_NOT_AVAILABLE) Set<VulnerableFunction> vulnerableFunctionsNotAvailable
  ) {
  this();
    this.exposure = exposure;
    this.dataAssets = dataAssets;
    this.numberOfDataAssets = numberOfDataAssets;
    this.vulnerableFunctionUsage = vulnerableFunctionUsage;
    this.vulnerableFunctionsInUse = vulnerableFunctionsInUse;
    this.vulnerableFunctionsNotInUse = vulnerableFunctionsNotInUse;
    this.vulnerableFunctionsNotAvailable = vulnerableFunctionsNotAvailable;
  }

   /**
   * The level of exposure of affected entities.
   * @return exposure
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The level of exposure of affected entities.")
  @JsonProperty(JSON_PROPERTY_EXPOSURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExposureEnum getExposure() {
    return exposure;
  }




   /**
   * The reachability of related data assets by affected entities.
   * @return dataAssets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The reachability of related data assets by affected entities.")
  @JsonProperty(JSON_PROPERTY_DATA_ASSETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataAssetsEnum getDataAssets() {
    return dataAssets;
  }




   /**
   * The number of related data assets.
   * @return numberOfDataAssets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of related data assets.")
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_DATA_ASSETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getNumberOfDataAssets() {
    return numberOfDataAssets;
  }




   /**
   * The usage of vulnerable functions
   * @return vulnerableFunctionUsage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The usage of vulnerable functions")
  @JsonProperty(JSON_PROPERTY_VULNERABLE_FUNCTION_USAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VulnerableFunctionUsageEnum getVulnerableFunctionUsage() {
    return vulnerableFunctionUsage;
  }




   /**
   * A list of vulnerable functions that are in use.
   * @return vulnerableFunctionsInUse
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of vulnerable functions that are in use.")
  @JsonProperty(JSON_PROPERTY_VULNERABLE_FUNCTIONS_IN_USE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<VulnerableFunction> getVulnerableFunctionsInUse() {
    return vulnerableFunctionsInUse;
  }




   /**
   * A list of vulnerable functions that are not in use.
   * @return vulnerableFunctionsNotInUse
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of vulnerable functions that are not in use.")
  @JsonProperty(JSON_PROPERTY_VULNERABLE_FUNCTIONS_NOT_IN_USE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<VulnerableFunction> getVulnerableFunctionsNotInUse() {
    return vulnerableFunctionsNotInUse;
  }




   /**
   * A list of vulnerable functions that are not available.
   * @return vulnerableFunctionsNotAvailable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of vulnerable functions that are not available.")
  @JsonProperty(JSON_PROPERTY_VULNERABLE_FUNCTIONS_NOT_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<VulnerableFunction> getVulnerableFunctionsNotAvailable() {
    return vulnerableFunctionsNotAvailable;
  }




  /**
   * Return true if this RemediationAssessment object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RemediationAssessment remediationAssessment = (RemediationAssessment) o;
    return Objects.equals(this.exposure, remediationAssessment.exposure) &&
        Objects.equals(this.dataAssets, remediationAssessment.dataAssets) &&
        Objects.equals(this.numberOfDataAssets, remediationAssessment.numberOfDataAssets) &&
        Objects.equals(this.vulnerableFunctionUsage, remediationAssessment.vulnerableFunctionUsage) &&
        Objects.equals(this.vulnerableFunctionsInUse, remediationAssessment.vulnerableFunctionsInUse) &&
        Objects.equals(this.vulnerableFunctionsNotInUse, remediationAssessment.vulnerableFunctionsNotInUse) &&
        Objects.equals(this.vulnerableFunctionsNotAvailable, remediationAssessment.vulnerableFunctionsNotAvailable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(exposure, dataAssets, numberOfDataAssets, vulnerableFunctionUsage, vulnerableFunctionsInUse, vulnerableFunctionsNotInUse, vulnerableFunctionsNotAvailable);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RemediationAssessment {\n");
    sb.append("    exposure: ").append(toIndentedString(exposure)).append("\n");
    sb.append("    dataAssets: ").append(toIndentedString(dataAssets)).append("\n");
    sb.append("    numberOfDataAssets: ").append(toIndentedString(numberOfDataAssets)).append("\n");
    sb.append("    vulnerableFunctionUsage: ").append(toIndentedString(vulnerableFunctionUsage)).append("\n");
    sb.append("    vulnerableFunctionsInUse: ").append(toIndentedString(vulnerableFunctionsInUse)).append("\n");
    sb.append("    vulnerableFunctionsNotInUse: ").append(toIndentedString(vulnerableFunctionsNotInUse)).append("\n");
    sb.append("    vulnerableFunctionsNotAvailable: ").append(toIndentedString(vulnerableFunctionsNotAvailable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

