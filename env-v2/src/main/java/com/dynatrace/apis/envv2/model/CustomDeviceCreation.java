/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Configuration of a custom device.
 */
@ApiModel(description = "Configuration of a custom device.")
@JsonPropertyOrder({
  CustomDeviceCreation.JSON_PROPERTY_CUSTOM_DEVICE_ID,
  CustomDeviceCreation.JSON_PROPERTY_DISPLAY_NAME,
  CustomDeviceCreation.JSON_PROPERTY_GROUP,
  CustomDeviceCreation.JSON_PROPERTY_IP_ADDRESSES,
  CustomDeviceCreation.JSON_PROPERTY_LISTEN_PORTS,
  CustomDeviceCreation.JSON_PROPERTY_TYPE,
  CustomDeviceCreation.JSON_PROPERTY_FAVICON_URL,
  CustomDeviceCreation.JSON_PROPERTY_CONFIG_URL,
  CustomDeviceCreation.JSON_PROPERTY_PROPERTIES,
  CustomDeviceCreation.JSON_PROPERTY_DNS_NAMES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class CustomDeviceCreation {
  public static final String JSON_PROPERTY_CUSTOM_DEVICE_ID = "customDeviceId";
  private String customDeviceId;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_GROUP = "group";
  private String group;

  public static final String JSON_PROPERTY_IP_ADDRESSES = "ipAddresses";
  private Set<String> ipAddresses = null;

  public static final String JSON_PROPERTY_LISTEN_PORTS = "listenPorts";
  private Set<Integer> listenPorts = null;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_FAVICON_URL = "faviconUrl";
  private String faviconUrl;

  public static final String JSON_PROPERTY_CONFIG_URL = "configUrl";
  private String configUrl;

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  private Map<String, String> properties = null;

  public static final String JSON_PROPERTY_DNS_NAMES = "dnsNames";
  private Set<String> dnsNames = null;

  public CustomDeviceCreation() { 
  }

  public CustomDeviceCreation customDeviceId(String customDeviceId) {
    this.customDeviceId = customDeviceId;
    return this;
  }

   /**
   * The internal ID of the custom device.    If you use the ID of an existing device, the respective parameters will be updated.
   * @return customDeviceId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The internal ID of the custom device.    If you use the ID of an existing device, the respective parameters will be updated.")
  @JsonProperty(JSON_PROPERTY_CUSTOM_DEVICE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCustomDeviceId() {
    return customDeviceId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_DEVICE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomDeviceId(String customDeviceId) {
    this.customDeviceId = customDeviceId;
  }


  public CustomDeviceCreation displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * The name of the custom device to be displayed in the user interface.
   * @return displayName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name of the custom device to be displayed in the user interface.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public CustomDeviceCreation group(String group) {
    this.group = group;
    return this;
  }

   /**
   * User defined group ID of entity.   The group ID helps to keep a consistent picture of device-group relations. One of many cases where a proper group is important is service detection: you can define which custom devices should lead to the same service by defining the same group ID for them.   If you set a group ID, it will be hashed into the Dynatrace entity ID of the custom device. In that case the custom device can only be part of one custom device group.   If you don&#39;t set the group ID, Dynatrace will create it based on the ID or type of the custom device. Also, the group will not be hashed into the device ID which means the device may switch groups.
   * @return group
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User defined group ID of entity.   The group ID helps to keep a consistent picture of device-group relations. One of many cases where a proper group is important is service detection: you can define which custom devices should lead to the same service by defining the same group ID for them.   If you set a group ID, it will be hashed into the Dynatrace entity ID of the custom device. In that case the custom device can only be part of one custom device group.   If you don't set the group ID, Dynatrace will create it based on the ID or type of the custom device. Also, the group will not be hashed into the device ID which means the device may switch groups.")
  @JsonProperty(JSON_PROPERTY_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGroup() {
    return group;
  }


  @JsonProperty(JSON_PROPERTY_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroup(String group) {
    this.group = group;
  }


  public CustomDeviceCreation ipAddresses(Set<String> ipAddresses) {
    this.ipAddresses = ipAddresses;
    return this;
  }

  public CustomDeviceCreation addIpAddressesItem(String ipAddressesItem) {
    if (this.ipAddresses == null) {
      this.ipAddresses = new LinkedHashSet<>();
    }
    this.ipAddresses.add(ipAddressesItem);
    return this;
  }

   /**
   * The list of IP addresses that belong to the custom device.   These addresses are used to automatically discover the horizontal communication relationship between this component and all other observed components within Smartscape. Once a connection is discovered, it is automatically mapped and shown within Smartscape.   If you send a value (including an empty value), the existing values will be overwritten.   If you send &#x60;null&#x60; or omit this field, the existing values will be kept.
   * @return ipAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of IP addresses that belong to the custom device.   These addresses are used to automatically discover the horizontal communication relationship between this component and all other observed components within Smartscape. Once a connection is discovered, it is automatically mapped and shown within Smartscape.   If you send a value (including an empty value), the existing values will be overwritten.   If you send `null` or omit this field, the existing values will be kept.")
  @JsonProperty(JSON_PROPERTY_IP_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getIpAddresses() {
    return ipAddresses;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_IP_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpAddresses(Set<String> ipAddresses) {
    this.ipAddresses = ipAddresses;
  }


  public CustomDeviceCreation listenPorts(Set<Integer> listenPorts) {
    this.listenPorts = listenPorts;
    return this;
  }

  public CustomDeviceCreation addListenPortsItem(Integer listenPortsItem) {
    if (this.listenPorts == null) {
      this.listenPorts = new LinkedHashSet<>();
    }
    this.listenPorts.add(listenPortsItem);
    return this;
  }

   /**
   * The list of ports the custom devices listens to.   These ports are used to discover the horizontal communication relationship between this component and all other observed components within Smartscape.   Once a connection is discovered, it is automatically mapped and shown within Smartscape.   If ports are specified, you should also add at least one IP address or a DNS name for the custom device.   If you send a value, the existing values will be overwritten.   If you send &#x60;null&#x60;, or an empty value, or omit this field, the existing values will be kept.
   * @return listenPorts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of ports the custom devices listens to.   These ports are used to discover the horizontal communication relationship between this component and all other observed components within Smartscape.   Once a connection is discovered, it is automatically mapped and shown within Smartscape.   If ports are specified, you should also add at least one IP address or a DNS name for the custom device.   If you send a value, the existing values will be overwritten.   If you send `null`, or an empty value, or omit this field, the existing values will be kept.")
  @JsonProperty(JSON_PROPERTY_LISTEN_PORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<Integer> getListenPorts() {
    return listenPorts;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_LISTEN_PORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setListenPorts(Set<Integer> listenPorts) {
    this.listenPorts = listenPorts;
  }


  public CustomDeviceCreation type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The technology type definition of the custom device.   It must be the same technology type of the metric you&#39;re reporting.   If you send a value, the existing value will be overwritten.   If you send &#x60;null&#x60;, empty or omit this field, the existing value will be kept.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The technology type definition of the custom device.   It must be the same technology type of the metric you're reporting.   If you send a value, the existing value will be overwritten.   If you send `null`, empty or omit this field, the existing value will be kept.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public CustomDeviceCreation faviconUrl(String faviconUrl) {
    this.faviconUrl = faviconUrl;
    return this;
  }

   /**
   * The icon to be displayed for your custom component within Smartscape. Provide the full URL of the icon file.
   * @return faviconUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The icon to be displayed for your custom component within Smartscape. Provide the full URL of the icon file.")
  @JsonProperty(JSON_PROPERTY_FAVICON_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFaviconUrl() {
    return faviconUrl;
  }


  @JsonProperty(JSON_PROPERTY_FAVICON_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFaviconUrl(String faviconUrl) {
    this.faviconUrl = faviconUrl;
  }


  public CustomDeviceCreation configUrl(String configUrl) {
    this.configUrl = configUrl;
    return this;
  }

   /**
   * The URL of a configuration web page for the custom device, such as a login page for a firewall or router.
   * @return configUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URL of a configuration web page for the custom device, such as a login page for a firewall or router.")
  @JsonProperty(JSON_PROPERTY_CONFIG_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConfigUrl() {
    return configUrl;
  }


  @JsonProperty(JSON_PROPERTY_CONFIG_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConfigUrl(String configUrl) {
    this.configUrl = configUrl;
  }


  public CustomDeviceCreation properties(Map<String, String> properties) {
    this.properties = properties;
    return this;
  }

  public CustomDeviceCreation putPropertiesItem(String key, String propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * The list of key-value pair properties that will be shown beneath the infographics of your custom device.
   * @return properties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of key-value pair properties that will be shown beneath the infographics of your custom device.")
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getProperties() {
    return properties;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperties(Map<String, String> properties) {
    this.properties = properties;
  }


  public CustomDeviceCreation dnsNames(Set<String> dnsNames) {
    this.dnsNames = dnsNames;
    return this;
  }

  public CustomDeviceCreation addDnsNamesItem(String dnsNamesItem) {
    if (this.dnsNames == null) {
      this.dnsNames = new LinkedHashSet<>();
    }
    this.dnsNames.add(dnsNamesItem);
    return this;
  }

   /**
   * The list of DNS names related to the custom device.   These names are used to automatically discover the horizontal communication relationship between this component and all other observed components within Smartscape. Once a connection is discovered, it is automatically mapped and shown within Smartscape.   If you send a value, the existing values will be overwritten.   If you send &#x60;null&#x60; or an empty value; or omit this field, the existing values will be kept.
   * @return dnsNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of DNS names related to the custom device.   These names are used to automatically discover the horizontal communication relationship between this component and all other observed components within Smartscape. Once a connection is discovered, it is automatically mapped and shown within Smartscape.   If you send a value, the existing values will be overwritten.   If you send `null` or an empty value; or omit this field, the existing values will be kept.")
  @JsonProperty(JSON_PROPERTY_DNS_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getDnsNames() {
    return dnsNames;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_DNS_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDnsNames(Set<String> dnsNames) {
    this.dnsNames = dnsNames;
  }


  /**
   * Return true if this CustomDeviceCreation object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomDeviceCreation customDeviceCreation = (CustomDeviceCreation) o;
    return Objects.equals(this.customDeviceId, customDeviceCreation.customDeviceId) &&
        Objects.equals(this.displayName, customDeviceCreation.displayName) &&
        Objects.equals(this.group, customDeviceCreation.group) &&
        Objects.equals(this.ipAddresses, customDeviceCreation.ipAddresses) &&
        Objects.equals(this.listenPorts, customDeviceCreation.listenPorts) &&
        Objects.equals(this.type, customDeviceCreation.type) &&
        Objects.equals(this.faviconUrl, customDeviceCreation.faviconUrl) &&
        Objects.equals(this.configUrl, customDeviceCreation.configUrl) &&
        Objects.equals(this.properties, customDeviceCreation.properties) &&
        Objects.equals(this.dnsNames, customDeviceCreation.dnsNames);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customDeviceId, displayName, group, ipAddresses, listenPorts, type, faviconUrl, configUrl, properties, dnsNames);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomDeviceCreation {\n");
    sb.append("    customDeviceId: ").append(toIndentedString(customDeviceId)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    ipAddresses: ").append(toIndentedString(ipAddresses)).append("\n");
    sb.append("    listenPorts: ").append(toIndentedString(listenPorts)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    faviconUrl: ").append(toIndentedString(faviconUrl)).append("\n");
    sb.append("    configUrl: ").append(toIndentedString(configUrl)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    dnsNames: ").append(toIndentedString(dnsNames)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

