/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Metadata of an API token.
 */
@ApiModel(description = "Metadata of an API token.")
@JsonPropertyOrder({
  ApiToken.JSON_PROPERTY_LAST_USED_IP_ADDRESS,
  ApiToken.JSON_PROPERTY_MODIFIED_DATE,
  ApiToken.JSON_PROPERTY_ADDITIONAL_METADATA,
  ApiToken.JSON_PROPERTY_EXPIRATION_DATE,
  ApiToken.JSON_PROPERTY_PERSONAL_ACCESS_TOKEN,
  ApiToken.JSON_PROPERTY_LAST_USED_DATE,
  ApiToken.JSON_PROPERTY_CREATION_DATE,
  ApiToken.JSON_PROPERTY_NAME,
  ApiToken.JSON_PROPERTY_ID,
  ApiToken.JSON_PROPERTY_OWNER,
  ApiToken.JSON_PROPERTY_ENABLED,
  ApiToken.JSON_PROPERTY_SCOPES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class ApiToken {
  public static final String JSON_PROPERTY_LAST_USED_IP_ADDRESS = "lastUsedIpAddress";
  private String lastUsedIpAddress;

  public static final String JSON_PROPERTY_MODIFIED_DATE = "modifiedDate";
  private String modifiedDate;

  public static final String JSON_PROPERTY_ADDITIONAL_METADATA = "additionalMetadata";
  private Object additionalMetadata;

  public static final String JSON_PROPERTY_EXPIRATION_DATE = "expirationDate";
  private String expirationDate;

  public static final String JSON_PROPERTY_PERSONAL_ACCESS_TOKEN = "personalAccessToken";
  private Boolean personalAccessToken;

  public static final String JSON_PROPERTY_LAST_USED_DATE = "lastUsedDate";
  private String lastUsedDate;

  public static final String JSON_PROPERTY_CREATION_DATE = "creationDate";
  private String creationDate;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_OWNER = "owner";
  private String owner;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  /**
   * Gets or Sets scopes
   */
  public enum ScopesEnum {
    ACTIVEGATECERTMANAGEMENT("ActiveGateCertManagement"),
    
    ADVANCEDSYNTHETICINTEGRATION("AdvancedSyntheticIntegration"),
    
    APPMONINTEGRATION("AppMonIntegration"),
    
    CAPTUREREQUESTDATA("CaptureRequestData"),
    
    DTAQLACCESS("DTAQLAccess"),
    
    DATAEXPORT("DataExport"),
    
    DATAIMPORT("DataImport"),
    
    DATAPRIVACY("DataPrivacy"),
    
    DAVIS("Davis"),
    
    DIAGNOSTICEXPORT("DiagnosticExport"),
    
    DSSFILEMANAGEMENT("DssFileManagement"),
    
    EXTERNALSYNTHETICINTEGRATION("ExternalSyntheticIntegration"),
    
    INSTALLERDOWNLOAD("InstallerDownload"),
    
    LOGEXPORT("LogExport"),
    
    MEMORYDUMP("MemoryDump"),
    
    MOBILE("Mobile"),
    
    PLUGINUPLOAD("PluginUpload"),
    
    READCONFIG("ReadConfig"),
    
    READSYNTHETICDATA("ReadSyntheticData"),
    
    RESTREQUESTFORWARDING("RestRequestForwarding"),
    
    RUMBROWSEREXTENSION("RumBrowserExtension"),
    
    RUMJAVASCRIPTTAGMANAGEMENT("RumJavaScriptTagManagement"),
    
    SUPPORTALERT("SupportAlert"),
    
    TENANTTOKENMANAGEMENT("TenantTokenManagement"),
    
    USERSESSIONANONYMIZATION("UserSessionAnonymization"),
    
    VIEWDASHBOARD("ViewDashboard"),
    
    VIEWREPORT("ViewReport"),
    
    WRITECONFIG("WriteConfig"),
    
    WRITESYNTHETICDATA("WriteSyntheticData"),
    
    ACTIVEGATETOKENMANAGEMENT_CREATE("activeGateTokenManagement.create"),
    
    ACTIVEGATETOKENMANAGEMENT_READ("activeGateTokenManagement.read"),
    
    ACTIVEGATETOKENMANAGEMENT_WRITE("activeGateTokenManagement.write"),
    
    ACTIVEGATES_READ("activeGates.read"),
    
    ACTIVEGATES_WRITE("activeGates.write"),
    
    APITOKENS_READ("apiTokens.read"),
    
    APITOKENS_WRITE("apiTokens.write"),
    
    AUDITLOGS_READ("auditLogs.read"),
    
    CREDENTIALVAULT_READ("credentialVault.read"),
    
    CREDENTIALVAULT_WRITE("credentialVault.write"),
    
    ENTITIES_READ("entities.read"),
    
    ENTITIES_WRITE("entities.write"),
    
    EVENTS_INGEST("events.ingest"),
    
    EVENTS_READ("events.read"),
    
    EXTENSIONCONFIGURATIONS_READ("extensionConfigurations.read"),
    
    EXTENSIONCONFIGURATIONS_WRITE("extensionConfigurations.write"),
    
    EXTENSIONENVIRONMENT_READ("extensionEnvironment.read"),
    
    EXTENSIONENVIRONMENT_WRITE("extensionEnvironment.write"),
    
    EXTENSIONS_READ("extensions.read"),
    
    EXTENSIONS_WRITE("extensions.write"),
    
    GEOGRAPHICREGIONS_READ("geographicRegions.read"),
    
    HUB_READ("hub.read"),
    
    HUB_WRITE("hub.write"),
    
    LOGS_INGEST("logs.ingest"),
    
    LOGS_READ("logs.read"),
    
    METRICS_INGEST("metrics.ingest"),
    
    METRICS_READ("metrics.read"),
    
    METRICS_WRITE("metrics.write"),
    
    NETWORKZONES_READ("networkZones.read"),
    
    NETWORKZONES_WRITE("networkZones.write"),
    
    ONEAGENTS_READ("oneAgents.read"),
    
    ONEAGENTS_WRITE("oneAgents.write"),
    
    OPENTELEMETRYTRACE_INGEST("openTelemetryTrace.ingest"),
    
    PROBLEMS_READ("problems.read"),
    
    PROBLEMS_WRITE("problems.write"),
    
    RELEASES_READ("releases.read"),
    
    SECURITYPROBLEMS_READ("securityProblems.read"),
    
    SECURITYPROBLEMS_WRITE("securityProblems.write"),
    
    SETTINGS_READ("settings.read"),
    
    SETTINGS_WRITE("settings.write"),
    
    SLO_READ("slo.read"),
    
    SLO_WRITE("slo.write"),
    
    SYNTHETICEXECUTIONS_READ("syntheticExecutions.read"),
    
    SYNTHETICEXECUTIONS_WRITE("syntheticExecutions.write"),
    
    SYNTHETICLOCATIONS_READ("syntheticLocations.read"),
    
    SYNTHETICLOCATIONS_WRITE("syntheticLocations.write"),
    
    TENANTTOKENROTATION_WRITE("tenantTokenRotation.write"),
    
    TRACES_LOOKUP("traces.lookup");

    private String value;

    ScopesEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ScopesEnum fromValue(String value) {
      for (ScopesEnum b : ScopesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SCOPES = "scopes";
  private List<ScopesEnum> scopes = null;

  public ApiToken() { 
  }

  public ApiToken lastUsedIpAddress(String lastUsedIpAddress) {
    this.lastUsedIpAddress = lastUsedIpAddress;
    return this;
  }

   /**
   * Token last used IP address.
   * @return lastUsedIpAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "34.197.2.44", value = "Token last used IP address.")
  @JsonProperty(JSON_PROPERTY_LAST_USED_IP_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastUsedIpAddress() {
    return lastUsedIpAddress;
  }


  @JsonProperty(JSON_PROPERTY_LAST_USED_IP_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastUsedIpAddress(String lastUsedIpAddress) {
    this.lastUsedIpAddress = lastUsedIpAddress;
  }


  public ApiToken modifiedDate(String modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * Token last modified date in ISO 8601 format (&#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;&#x60;). Updating scopes or name counts as modification, enabling or disabling a token does not.
   * @return modifiedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-11-12T08:15:30.144Z", value = "Token last modified date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`). Updating scopes or name counts as modification, enabling or disabling a token does not.")
  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getModifiedDate() {
    return modifiedDate;
  }


  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModifiedDate(String modifiedDate) {
    this.modifiedDate = modifiedDate;
  }


  public ApiToken additionalMetadata(Object additionalMetadata) {
    this.additionalMetadata = additionalMetadata;
    return this;
  }

   /**
   * Contains additional properties for specific kinds of token. Examples:  * A &#x60;dashboardId&#x60; property for dashboard sharing tokens. * A &#x60;reportId&#x60; property for report sharing tokens
   * @return additionalMetadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"dashboardId\":\"82402bab-7370-4359-924d-88ed13c8919a\"}", value = "Contains additional properties for specific kinds of token. Examples:  * A `dashboardId` property for dashboard sharing tokens. * A `reportId` property for report sharing tokens")
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getAdditionalMetadata() {
    return additionalMetadata;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalMetadata(Object additionalMetadata) {
    this.additionalMetadata = additionalMetadata;
  }


  public ApiToken expirationDate(String expirationDate) {
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Token expiration date in ISO 8601 format (&#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;&#x60;).    If not set, the token never expires.
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-11-12T08:15:30.144Z", value = "Token expiration date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`).    If not set, the token never expires.")
  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpirationDate() {
    return expirationDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpirationDate(String expirationDate) {
    this.expirationDate = expirationDate;
  }


  public ApiToken personalAccessToken(Boolean personalAccessToken) {
    this.personalAccessToken = personalAccessToken;
    return this;
  }

   /**
   * The token is a [personal access token](https://dt-url.net/wm03sop) (&#x60;true&#x60;) or an API token (&#x60;false&#x60;).
   * @return personalAccessToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "The token is a [personal access token](https://dt-url.net/wm03sop) (`true`) or an API token (`false`).")
  @JsonProperty(JSON_PROPERTY_PERSONAL_ACCESS_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPersonalAccessToken() {
    return personalAccessToken;
  }


  @JsonProperty(JSON_PROPERTY_PERSONAL_ACCESS_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPersonalAccessToken(Boolean personalAccessToken) {
    this.personalAccessToken = personalAccessToken;
  }


  public ApiToken lastUsedDate(String lastUsedDate) {
    this.lastUsedDate = lastUsedDate;
    return this;
  }

   /**
   * Token last used date in ISO 8601 format (&#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;&#x60;)
   * @return lastUsedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-11-12T08:15:30.144Z", value = "Token last used date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`)")
  @JsonProperty(JSON_PROPERTY_LAST_USED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastUsedDate() {
    return lastUsedDate;
  }


  @JsonProperty(JSON_PROPERTY_LAST_USED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastUsedDate(String lastUsedDate) {
    this.lastUsedDate = lastUsedDate;
  }


  public ApiToken creationDate(String creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Token creation date in ISO 8601 format (&#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;&#x60;)
   * @return creationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-11-05T08:15:30.144Z", value = "Token creation date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`)")
  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreationDate() {
    return creationDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreationDate(String creationDate) {
    this.creationDate = creationDate;
  }


  public ApiToken name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the token.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "myToken", value = "The name of the token.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ApiToken id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of the token, consisting of prefix and public part of the token.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "dt0c01.ST2EY72KQINMH574WMNVI7YN", value = "The ID of the token, consisting of prefix and public part of the token.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public ApiToken owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * The owner of the token.
   * @return owner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "john.smith", value = "The owner of the token.")
  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOwner() {
    return owner;
  }


  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwner(String owner) {
    this.owner = owner;
  }


  public ApiToken enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * The token is enabled (&#x60;true&#x60;) or disabled (&#x60;false&#x60;).
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "The token is enabled (`true`) or disabled (`false`).")
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public ApiToken scopes(List<ScopesEnum> scopes) {
    this.scopes = scopes;
    return this;
  }

  public ApiToken addScopesItem(ScopesEnum scopesItem) {
    if (this.scopes == null) {
      this.scopes = new ArrayList<>();
    }
    this.scopes.add(scopesItem);
    return this;
  }

   /**
   * A list of scopes assigned to the token.
   * @return scopes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of scopes assigned to the token.")
  @JsonProperty(JSON_PROPERTY_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ScopesEnum> getScopes() {
    return scopes;
  }


  @JsonProperty(JSON_PROPERTY_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScopes(List<ScopesEnum> scopes) {
    this.scopes = scopes;
  }


  /**
   * Return true if this ApiToken object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiToken apiToken = (ApiToken) o;
    return Objects.equals(this.lastUsedIpAddress, apiToken.lastUsedIpAddress) &&
        Objects.equals(this.modifiedDate, apiToken.modifiedDate) &&
        Objects.equals(this.additionalMetadata, apiToken.additionalMetadata) &&
        Objects.equals(this.expirationDate, apiToken.expirationDate) &&
        Objects.equals(this.personalAccessToken, apiToken.personalAccessToken) &&
        Objects.equals(this.lastUsedDate, apiToken.lastUsedDate) &&
        Objects.equals(this.creationDate, apiToken.creationDate) &&
        Objects.equals(this.name, apiToken.name) &&
        Objects.equals(this.id, apiToken.id) &&
        Objects.equals(this.owner, apiToken.owner) &&
        Objects.equals(this.enabled, apiToken.enabled) &&
        Objects.equals(this.scopes, apiToken.scopes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lastUsedIpAddress, modifiedDate, additionalMetadata, expirationDate, personalAccessToken, lastUsedDate, creationDate, name, id, owner, enabled, scopes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiToken {\n");
    sb.append("    lastUsedIpAddress: ").append(toIndentedString(lastUsedIpAddress)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    additionalMetadata: ").append(toIndentedString(additionalMetadata)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    personalAccessToken: ").append(toIndentedString(personalAccessToken)).append("\n");
    sb.append("    lastUsedDate: ").append(toIndentedString(lastUsedDate)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

