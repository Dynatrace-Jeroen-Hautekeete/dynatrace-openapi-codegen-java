/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * A settings object.
 */
@ApiModel(description = "A settings object.")
@JsonPropertyOrder({
  SettingsObject.JSON_PROPERTY_SCHEMA_VERSION,
  SettingsObject.JSON_PROPERTY_UPDATE_TOKEN,
  SettingsObject.JSON_PROPERTY_MODIFIED,
  SettingsObject.JSON_PROPERTY_EXTERNAL_ID,
  SettingsObject.JSON_PROPERTY_AUTHOR,
  SettingsObject.JSON_PROPERTY_SCHEMA_ID,
  SettingsObject.JSON_PROPERTY_SCOPE,
  SettingsObject.JSON_PROPERTY_VALUE,
  SettingsObject.JSON_PROPERTY_CREATED,
  SettingsObject.JSON_PROPERTY_SUMMARY,
  SettingsObject.JSON_PROPERTY_OBJECT_ID
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class SettingsObject {
  public static final String JSON_PROPERTY_SCHEMA_VERSION = "schemaVersion";
  private String schemaVersion;

  public static final String JSON_PROPERTY_UPDATE_TOKEN = "updateToken";
  private String updateToken;

  public static final String JSON_PROPERTY_MODIFIED = "modified";
  private Long modified;

  public static final String JSON_PROPERTY_EXTERNAL_ID = "externalId";
  private String externalId;

  public static final String JSON_PROPERTY_AUTHOR = "author";
  private String author;

  public static final String JSON_PROPERTY_SCHEMA_ID = "schemaId";
  private String schemaId;

  public static final String JSON_PROPERTY_SCOPE = "scope";
  private String scope;

  public static final String JSON_PROPERTY_VALUE = "value";
  private Object value;

  public static final String JSON_PROPERTY_CREATED = "created";
  private Long created;

  public static final String JSON_PROPERTY_SUMMARY = "summary";
  private String summary;

  public static final String JSON_PROPERTY_OBJECT_ID = "objectId";
  private String objectId;

  public SettingsObject() { 
  }

  public SettingsObject schemaVersion(String schemaVersion) {
    this.schemaVersion = schemaVersion;
    return this;
  }

   /**
   * The version of the schema on which the object is based.
   * @return schemaVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1.0.0", value = "The version of the schema on which the object is based.")
  @JsonProperty(JSON_PROPERTY_SCHEMA_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSchemaVersion() {
    return schemaVersion;
  }


  @JsonProperty(JSON_PROPERTY_SCHEMA_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSchemaVersion(String schemaVersion) {
    this.schemaVersion = schemaVersion;
  }


  public SettingsObject updateToken(String updateToken) {
    this.updateToken = updateToken;
    return this;
  }

   /**
   * The update token of the object. You can use it to detect simultaneous modifications by different users.   It is generated upon retrieval (GET requests). If set on update (PUT request) or deletion, the update/deletion will be allowed only if there wasn&#39;t any change between the retrieval and the update.   If omitted on update/deletion, the operation overrides the current value or deletes it without any checks.
   * @return updateToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=", value = "The update token of the object. You can use it to detect simultaneous modifications by different users.   It is generated upon retrieval (GET requests). If set on update (PUT request) or deletion, the update/deletion will be allowed only if there wasn't any change between the retrieval and the update.   If omitted on update/deletion, the operation overrides the current value or deletes it without any checks.")
  @JsonProperty(JSON_PROPERTY_UPDATE_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdateToken() {
    return updateToken;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateToken(String updateToken) {
    this.updateToken = updateToken;
  }


  public SettingsObject modified(Long modified) {
    this.modified = modified;
    return this;
  }

   /**
   * The timestamp of the last modification.
   * @return modified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp of the last modification.")
  @JsonProperty(JSON_PROPERTY_MODIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getModified() {
    return modified;
  }


  @JsonProperty(JSON_PROPERTY_MODIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModified(Long modified) {
    this.modified = modified;
  }


  public SettingsObject externalId(String externalId) {
    this.externalId = externalId;
    return this;
  }

   /**
   * The external identifier of the settings object.
   * @return externalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The external identifier of the settings object.")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalId() {
    return externalId;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  public SettingsObject author(String author) {
    this.author = author;
    return this;
  }

   /**
   * The user (identified by a user ID or a public token ID) who performed that most recent modification.
   * @return author
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "john.doe@example.com", value = "The user (identified by a user ID or a public token ID) who performed that most recent modification.")
  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAuthor() {
    return author;
  }


  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthor(String author) {
    this.author = author;
  }


  public SettingsObject schemaId(String schemaId) {
    this.schemaId = schemaId;
    return this;
  }

   /**
   * The schema on which the object is based.
   * @return schemaId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "builtin:container.built-in-monitoring-rule", value = "The schema on which the object is based.")
  @JsonProperty(JSON_PROPERTY_SCHEMA_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSchemaId() {
    return schemaId;
  }


  @JsonProperty(JSON_PROPERTY_SCHEMA_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSchemaId(String schemaId) {
    this.schemaId = schemaId;
  }


  public SettingsObject scope(String scope) {
    this.scope = scope;
    return this;
  }

   /**
   * The scope that the object targets.
   * @return scope
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "HOST-D3A3C5A146830A79", value = "The scope that the object targets.")
  @JsonProperty(JSON_PROPERTY_SCOPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getScope() {
    return scope;
  }


  @JsonProperty(JSON_PROPERTY_SCOPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScope(String scope) {
    this.scope = scope;
  }


  public SettingsObject value(Object value) {
    this.value = value;
    return this;
  }

   /**
   * The value of the setting.    It defines the actual values of settings&#39; parameters.   The actual content depends on the object&#39;s schema.
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"autoMonitoring\":true}", value = "The value of the setting.    It defines the actual values of settings' parameters.   The actual content depends on the object's schema.")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(Object value) {
    this.value = value;
  }


  public SettingsObject created(Long created) {
    this.created = created;
    return this;
  }

   /**
   * The timestamp of the creation.
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp of the creation.")
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getCreated() {
    return created;
  }


  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreated(Long created) {
    this.created = created;
  }


  public SettingsObject summary(String summary) {
    this.summary = summary;
    return this;
  }

   /**
   * A short summary of settings.
   * @return summary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A short summary of settings.")
  @JsonProperty(JSON_PROPERTY_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSummary() {
    return summary;
  }


  @JsonProperty(JSON_PROPERTY_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSummary(String summary) {
    this.summary = summary;
  }


  public SettingsObject objectId(String objectId) {
    this.objectId = objectId;
    return this;
  }

   /**
   * The ID of the settings object.
   * @return objectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=", value = "The ID of the settings object.")
  @JsonProperty(JSON_PROPERTY_OBJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getObjectId() {
    return objectId;
  }


  @JsonProperty(JSON_PROPERTY_OBJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setObjectId(String objectId) {
    this.objectId = objectId;
  }


  /**
   * Return true if this SettingsObject object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SettingsObject settingsObject = (SettingsObject) o;
    return Objects.equals(this.schemaVersion, settingsObject.schemaVersion) &&
        Objects.equals(this.updateToken, settingsObject.updateToken) &&
        Objects.equals(this.modified, settingsObject.modified) &&
        Objects.equals(this.externalId, settingsObject.externalId) &&
        Objects.equals(this.author, settingsObject.author) &&
        Objects.equals(this.schemaId, settingsObject.schemaId) &&
        Objects.equals(this.scope, settingsObject.scope) &&
        Objects.equals(this.value, settingsObject.value) &&
        Objects.equals(this.created, settingsObject.created) &&
        Objects.equals(this.summary, settingsObject.summary) &&
        Objects.equals(this.objectId, settingsObject.objectId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(schemaVersion, updateToken, modified, externalId, author, schemaId, scope, value, created, summary, objectId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SettingsObject {\n");
    sb.append("    schemaVersion: ").append(toIndentedString(schemaVersion)).append("\n");
    sb.append("    updateToken: ").append(toIndentedString(updateToken)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    schemaId: ").append(toIndentedString(schemaId)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    objectId: ").append(toIndentedString(objectId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

