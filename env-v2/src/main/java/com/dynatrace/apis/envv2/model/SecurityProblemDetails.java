/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv2.model.CodeLevelVulnerabilityDetails;
import com.dynatrace.apis.envv2.model.ManagementZone;
import com.dynatrace.apis.envv2.model.RelatedAttacksList;
import com.dynatrace.apis.envv2.model.RelatedEntitiesList;
import com.dynatrace.apis.envv2.model.RiskAssessment;
import com.dynatrace.apis.envv2.model.SecurityProblemDetailsRelatedContainerImagesInner;
import com.dynatrace.apis.envv2.model.SecurityProblemEvent;
import com.dynatrace.apis.envv2.model.VulnerableComponent;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Parameters of a security problem
 */
@ApiModel(description = "Parameters of a security problem")
@JsonPropertyOrder({
  SecurityProblemDetails.JSON_PROPERTY_SECURITY_PROBLEM_ID,
  SecurityProblemDetails.JSON_PROPERTY_DISPLAY_ID,
  SecurityProblemDetails.JSON_PROPERTY_STATUS,
  SecurityProblemDetails.JSON_PROPERTY_MUTED,
  SecurityProblemDetails.JSON_PROPERTY_EXTERNAL_VULNERABILITY_ID,
  SecurityProblemDetails.JSON_PROPERTY_VULNERABILITY_TYPE,
  SecurityProblemDetails.JSON_PROPERTY_TITLE,
  SecurityProblemDetails.JSON_PROPERTY_PACKAGE_NAME,
  SecurityProblemDetails.JSON_PROPERTY_URL,
  SecurityProblemDetails.JSON_PROPERTY_DESCRIPTION,
  SecurityProblemDetails.JSON_PROPERTY_TECHNOLOGY,
  SecurityProblemDetails.JSON_PROPERTY_FIRST_SEEN_TIMESTAMP,
  SecurityProblemDetails.JSON_PROPERTY_LAST_UPDATED_TIMESTAMP,
  SecurityProblemDetails.JSON_PROPERTY_RISK_ASSESSMENT,
  SecurityProblemDetails.JSON_PROPERTY_MANAGEMENT_ZONES,
  SecurityProblemDetails.JSON_PROPERTY_CVE_IDS,
  SecurityProblemDetails.JSON_PROPERTY_CODE_LEVEL_VULNERABILITY_DETAILS,
  SecurityProblemDetails.JSON_PROPERTY_EVENTS,
  SecurityProblemDetails.JSON_PROPERTY_VULNERABLE_COMPONENTS,
  SecurityProblemDetails.JSON_PROPERTY_AFFECTED_ENTITIES,
  SecurityProblemDetails.JSON_PROPERTY_EXPOSED_ENTITIES,
  SecurityProblemDetails.JSON_PROPERTY_REACHABLE_DATA_ASSETS,
  SecurityProblemDetails.JSON_PROPERTY_RELATED_ENTITIES,
  SecurityProblemDetails.JSON_PROPERTY_RELATED_CONTAINER_IMAGES,
  SecurityProblemDetails.JSON_PROPERTY_RELATED_ATTACKS,
  SecurityProblemDetails.JSON_PROPERTY_MUTE_STATE_CHANGE_IN_PROGRESS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class SecurityProblemDetails {
  public static final String JSON_PROPERTY_SECURITY_PROBLEM_ID = "securityProblemId";
  private String securityProblemId;

  public static final String JSON_PROPERTY_DISPLAY_ID = "displayId";
  private String displayId;

  /**
   * The status of the security problem.
   */
  public enum StatusEnum {
    OPEN("OPEN"),
    
    RESOLVED("RESOLVED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_MUTED = "muted";
  private Boolean muted;

  public static final String JSON_PROPERTY_EXTERNAL_VULNERABILITY_ID = "externalVulnerabilityId";
  private String externalVulnerabilityId;

  /**
   * The type of the vulnerability.
   */
  public enum VulnerabilityTypeEnum {
    CODE_LEVEL("CODE_LEVEL"),
    
    RUNTIME("RUNTIME"),
    
    THIRD_PARTY("THIRD_PARTY");

    private String value;

    VulnerabilityTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VulnerabilityTypeEnum fromValue(String value) {
      for (VulnerabilityTypeEnum b : VulnerabilityTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VULNERABILITY_TYPE = "vulnerabilityType";
  private VulnerabilityTypeEnum vulnerabilityType;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_PACKAGE_NAME = "packageName";
  private String packageName;

  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  /**
   * The technology of the security problem.
   */
  public enum TechnologyEnum {
    DOTNET("DOTNET"),
    
    GO("GO"),
    
    JAVA("JAVA"),
    
    KUBERNETES("KUBERNETES"),
    
    NODE_JS("NODE_JS"),
    
    PHP("PHP");

    private String value;

    TechnologyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TechnologyEnum fromValue(String value) {
      for (TechnologyEnum b : TechnologyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TECHNOLOGY = "technology";
  private TechnologyEnum technology;

  public static final String JSON_PROPERTY_FIRST_SEEN_TIMESTAMP = "firstSeenTimestamp";
  private Long firstSeenTimestamp;

  public static final String JSON_PROPERTY_LAST_UPDATED_TIMESTAMP = "lastUpdatedTimestamp";
  private Long lastUpdatedTimestamp;

  public static final String JSON_PROPERTY_RISK_ASSESSMENT = "riskAssessment";
  private RiskAssessment riskAssessment;

  public static final String JSON_PROPERTY_MANAGEMENT_ZONES = "managementZones";
  private List<ManagementZone> managementZones = null;

  public static final String JSON_PROPERTY_CVE_IDS = "cveIds";
  private List<String> cveIds = null;

  public static final String JSON_PROPERTY_CODE_LEVEL_VULNERABILITY_DETAILS = "codeLevelVulnerabilityDetails";
  private CodeLevelVulnerabilityDetails codeLevelVulnerabilityDetails;

  public static final String JSON_PROPERTY_EVENTS = "events";
  private List<SecurityProblemEvent> events = null;

  public static final String JSON_PROPERTY_VULNERABLE_COMPONENTS = "vulnerableComponents";
  private List<VulnerableComponent> vulnerableComponents = null;

  public static final String JSON_PROPERTY_AFFECTED_ENTITIES = "affectedEntities";
  private List<String> affectedEntities = null;

  public static final String JSON_PROPERTY_EXPOSED_ENTITIES = "exposedEntities";
  private List<String> exposedEntities = null;

  public static final String JSON_PROPERTY_REACHABLE_DATA_ASSETS = "reachableDataAssets";
  private List<String> reachableDataAssets = null;

  public static final String JSON_PROPERTY_RELATED_ENTITIES = "relatedEntities";
  private RelatedEntitiesList relatedEntities;

  public static final String JSON_PROPERTY_RELATED_CONTAINER_IMAGES = "relatedContainerImages";
  private List<SecurityProblemDetailsRelatedContainerImagesInner> relatedContainerImages = null;

  public static final String JSON_PROPERTY_RELATED_ATTACKS = "relatedAttacks";
  private RelatedAttacksList relatedAttacks;

  public static final String JSON_PROPERTY_MUTE_STATE_CHANGE_IN_PROGRESS = "muteStateChangeInProgress";
  private Boolean muteStateChangeInProgress;

  public SecurityProblemDetails() { 
  }

  @JsonCreator
  public SecurityProblemDetails(
    @JsonProperty(JSON_PROPERTY_SECURITY_PROBLEM_ID) String securityProblemId, 
    @JsonProperty(JSON_PROPERTY_DISPLAY_ID) String displayId, 
    @JsonProperty(JSON_PROPERTY_STATUS) StatusEnum status, 
    @JsonProperty(JSON_PROPERTY_MUTED) Boolean muted, 
    @JsonProperty(JSON_PROPERTY_EXTERNAL_VULNERABILITY_ID) String externalVulnerabilityId, 
    @JsonProperty(JSON_PROPERTY_VULNERABILITY_TYPE) VulnerabilityTypeEnum vulnerabilityType, 
    @JsonProperty(JSON_PROPERTY_TITLE) String title, 
    @JsonProperty(JSON_PROPERTY_PACKAGE_NAME) String packageName, 
    @JsonProperty(JSON_PROPERTY_URL) String url, 
    @JsonProperty(JSON_PROPERTY_DESCRIPTION) String description, 
    @JsonProperty(JSON_PROPERTY_TECHNOLOGY) TechnologyEnum technology, 
    @JsonProperty(JSON_PROPERTY_FIRST_SEEN_TIMESTAMP) Long firstSeenTimestamp, 
    @JsonProperty(JSON_PROPERTY_LAST_UPDATED_TIMESTAMP) Long lastUpdatedTimestamp, 
    @JsonProperty(JSON_PROPERTY_MANAGEMENT_ZONES) List<ManagementZone> managementZones, 
    @JsonProperty(JSON_PROPERTY_CVE_IDS) List<String> cveIds, 
    @JsonProperty(JSON_PROPERTY_VULNERABLE_COMPONENTS) List<VulnerableComponent> vulnerableComponents, 
    @JsonProperty(JSON_PROPERTY_AFFECTED_ENTITIES) List<String> affectedEntities, 
    @JsonProperty(JSON_PROPERTY_EXPOSED_ENTITIES) List<String> exposedEntities, 
    @JsonProperty(JSON_PROPERTY_REACHABLE_DATA_ASSETS) List<String> reachableDataAssets, 
    @JsonProperty(JSON_PROPERTY_RELATED_CONTAINER_IMAGES) List<SecurityProblemDetailsRelatedContainerImagesInner> relatedContainerImages, 
    @JsonProperty(JSON_PROPERTY_MUTE_STATE_CHANGE_IN_PROGRESS) Boolean muteStateChangeInProgress
  ) {
  this();
    this.securityProblemId = securityProblemId;
    this.displayId = displayId;
    this.status = status;
    this.muted = muted;
    this.externalVulnerabilityId = externalVulnerabilityId;
    this.vulnerabilityType = vulnerabilityType;
    this.title = title;
    this.packageName = packageName;
    this.url = url;
    this.description = description;
    this.technology = technology;
    this.firstSeenTimestamp = firstSeenTimestamp;
    this.lastUpdatedTimestamp = lastUpdatedTimestamp;
    this.managementZones = managementZones;
    this.cveIds = cveIds;
    this.vulnerableComponents = vulnerableComponents;
    this.affectedEntities = affectedEntities;
    this.exposedEntities = exposedEntities;
    this.reachableDataAssets = reachableDataAssets;
    this.relatedContainerImages = relatedContainerImages;
    this.muteStateChangeInProgress = muteStateChangeInProgress;
  }

   /**
   * The ID of the security problem.
   * @return securityProblemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the security problem.")
  @JsonProperty(JSON_PROPERTY_SECURITY_PROBLEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecurityProblemId() {
    return securityProblemId;
  }




   /**
   * The display ID of the security problem.
   * @return displayId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The display ID of the security problem.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayId() {
    return displayId;
  }




   /**
   * The status of the security problem.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The status of the security problem.")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }




   /**
   * The security problem is (&#x60;true&#x60;) or is not (&#x60;false&#x60;) muted.
   * @return muted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The security problem is (`true`) or is not (`false`) muted.")
  @JsonProperty(JSON_PROPERTY_MUTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMuted() {
    return muted;
  }




   /**
   * The external vulnerability ID of the security problem.
   * @return externalVulnerabilityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The external vulnerability ID of the security problem.")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_VULNERABILITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalVulnerabilityId() {
    return externalVulnerabilityId;
  }




   /**
   * The type of the vulnerability.
   * @return vulnerabilityType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of the vulnerability.")
  @JsonProperty(JSON_PROPERTY_VULNERABILITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VulnerabilityTypeEnum getVulnerabilityType() {
    return vulnerabilityType;
  }




   /**
   * The title of the security problem.
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The title of the security problem.")
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }




   /**
   * The package name of the security problem.
   * @return packageName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The package name of the security problem.")
  @JsonProperty(JSON_PROPERTY_PACKAGE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPackageName() {
    return packageName;
  }




   /**
   * The URL to the security problem details page.
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URL to the security problem details page.")
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUrl() {
    return url;
  }




   /**
   * The description of the security problem.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of the security problem.")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }




   /**
   * The technology of the security problem.
   * @return technology
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The technology of the security problem.")
  @JsonProperty(JSON_PROPERTY_TECHNOLOGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TechnologyEnum getTechnology() {
    return technology;
  }




   /**
   * The timestamp of the first occurrence of the security problem.
   * @return firstSeenTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp of the first occurrence of the security problem.")
  @JsonProperty(JSON_PROPERTY_FIRST_SEEN_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getFirstSeenTimestamp() {
    return firstSeenTimestamp;
  }




   /**
   * The timestamp of the most recent security problem change.
   * @return lastUpdatedTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp of the most recent security problem change.")
  @JsonProperty(JSON_PROPERTY_LAST_UPDATED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getLastUpdatedTimestamp() {
    return lastUpdatedTimestamp;
  }




  public SecurityProblemDetails riskAssessment(RiskAssessment riskAssessment) {
    this.riskAssessment = riskAssessment;
    return this;
  }

   /**
   * Get riskAssessment
   * @return riskAssessment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RISK_ASSESSMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RiskAssessment getRiskAssessment() {
    return riskAssessment;
  }


  @JsonProperty(JSON_PROPERTY_RISK_ASSESSMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRiskAssessment(RiskAssessment riskAssessment) {
    this.riskAssessment = riskAssessment;
  }


   /**
   * A list of management zones which the affected entities belong to.
   * @return managementZones
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of management zones which the affected entities belong to.")
  @JsonProperty(JSON_PROPERTY_MANAGEMENT_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ManagementZone> getManagementZones() {
    return managementZones;
  }




   /**
   * A list of CVE IDs of the security problem.
   * @return cveIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of CVE IDs of the security problem.")
  @JsonProperty(JSON_PROPERTY_CVE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getCveIds() {
    return cveIds;
  }




  public SecurityProblemDetails codeLevelVulnerabilityDetails(CodeLevelVulnerabilityDetails codeLevelVulnerabilityDetails) {
    this.codeLevelVulnerabilityDetails = codeLevelVulnerabilityDetails;
    return this;
  }

   /**
   * Get codeLevelVulnerabilityDetails
   * @return codeLevelVulnerabilityDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CODE_LEVEL_VULNERABILITY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CodeLevelVulnerabilityDetails getCodeLevelVulnerabilityDetails() {
    return codeLevelVulnerabilityDetails;
  }


  @JsonProperty(JSON_PROPERTY_CODE_LEVEL_VULNERABILITY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCodeLevelVulnerabilityDetails(CodeLevelVulnerabilityDetails codeLevelVulnerabilityDetails) {
    this.codeLevelVulnerabilityDetails = codeLevelVulnerabilityDetails;
  }


  public SecurityProblemDetails events(List<SecurityProblemEvent> events) {
    this.events = events;
    return this;
  }

  public SecurityProblemDetails addEventsItem(SecurityProblemEvent eventsItem) {
    if (this.events == null) {
      this.events = new ArrayList<>();
    }
    this.events.add(eventsItem);
    return this;
  }

   /**
   * An ordered (newest first) list of events of the security problem.
   * @return events
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An ordered (newest first) list of events of the security problem.")
  @JsonProperty(JSON_PROPERTY_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SecurityProblemEvent> getEvents() {
    return events;
  }


  @JsonProperty(JSON_PROPERTY_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEvents(List<SecurityProblemEvent> events) {
    this.events = events;
  }


   /**
   * A list of vulnerable components of the security problem.   A vulnerable component is what causes the security problem.
   * @return vulnerableComponents
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of vulnerable components of the security problem.   A vulnerable component is what causes the security problem.")
  @JsonProperty(JSON_PROPERTY_VULNERABLE_COMPONENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<VulnerableComponent> getVulnerableComponents() {
    return vulnerableComponents;
  }




   /**
   * A list of affected entities of the security problem.   An affected entity is an entity where a vulnerable component runs.
   * @return affectedEntities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of affected entities of the security problem.   An affected entity is an entity where a vulnerable component runs.")
  @JsonProperty(JSON_PROPERTY_AFFECTED_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getAffectedEntities() {
    return affectedEntities;
  }




   /**
   * A list of exposed entities of the security problem.   An exposed entity is an affected entity that is exposed to the internet.
   * @return exposedEntities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of exposed entities of the security problem.   An exposed entity is an affected entity that is exposed to the internet.")
  @JsonProperty(JSON_PROPERTY_EXPOSED_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getExposedEntities() {
    return exposedEntities;
  }




   /**
   * A list of data assets reachable by affected entities of the security problem.   A data asset is a service that has database access.
   * @return reachableDataAssets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of data assets reachable by affected entities of the security problem.   A data asset is a service that has database access.")
  @JsonProperty(JSON_PROPERTY_REACHABLE_DATA_ASSETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getReachableDataAssets() {
    return reachableDataAssets;
  }




  public SecurityProblemDetails relatedEntities(RelatedEntitiesList relatedEntities) {
    this.relatedEntities = relatedEntities;
    return this;
  }

   /**
   * Get relatedEntities
   * @return relatedEntities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RELATED_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RelatedEntitiesList getRelatedEntities() {
    return relatedEntities;
  }


  @JsonProperty(JSON_PROPERTY_RELATED_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelatedEntities(RelatedEntitiesList relatedEntities) {
    this.relatedEntities = relatedEntities;
  }


   /**
   * A list of related container images of the security problem.   A related container image is a container image that contains at least one *affected entity*.
   * @return relatedContainerImages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of related container images of the security problem.   A related container image is a container image that contains at least one *affected entity*.")
  @JsonProperty(JSON_PROPERTY_RELATED_CONTAINER_IMAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SecurityProblemDetailsRelatedContainerImagesInner> getRelatedContainerImages() {
    return relatedContainerImages;
  }




  public SecurityProblemDetails relatedAttacks(RelatedAttacksList relatedAttacks) {
    this.relatedAttacks = relatedAttacks;
    return this;
  }

   /**
   * Get relatedAttacks
   * @return relatedAttacks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RELATED_ATTACKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RelatedAttacksList getRelatedAttacks() {
    return relatedAttacks;
  }


  @JsonProperty(JSON_PROPERTY_RELATED_ATTACKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelatedAttacks(RelatedAttacksList relatedAttacks) {
    this.relatedAttacks = relatedAttacks;
  }


   /**
   * If &#x60;true&#x60; a change of the mute state is in progress.
   * @return muteStateChangeInProgress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If `true` a change of the mute state is in progress.")
  @JsonProperty(JSON_PROPERTY_MUTE_STATE_CHANGE_IN_PROGRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMuteStateChangeInProgress() {
    return muteStateChangeInProgress;
  }




  /**
   * Return true if this SecurityProblemDetails object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SecurityProblemDetails securityProblemDetails = (SecurityProblemDetails) o;
    return Objects.equals(this.securityProblemId, securityProblemDetails.securityProblemId) &&
        Objects.equals(this.displayId, securityProblemDetails.displayId) &&
        Objects.equals(this.status, securityProblemDetails.status) &&
        Objects.equals(this.muted, securityProblemDetails.muted) &&
        Objects.equals(this.externalVulnerabilityId, securityProblemDetails.externalVulnerabilityId) &&
        Objects.equals(this.vulnerabilityType, securityProblemDetails.vulnerabilityType) &&
        Objects.equals(this.title, securityProblemDetails.title) &&
        Objects.equals(this.packageName, securityProblemDetails.packageName) &&
        Objects.equals(this.url, securityProblemDetails.url) &&
        Objects.equals(this.description, securityProblemDetails.description) &&
        Objects.equals(this.technology, securityProblemDetails.technology) &&
        Objects.equals(this.firstSeenTimestamp, securityProblemDetails.firstSeenTimestamp) &&
        Objects.equals(this.lastUpdatedTimestamp, securityProblemDetails.lastUpdatedTimestamp) &&
        Objects.equals(this.riskAssessment, securityProblemDetails.riskAssessment) &&
        Objects.equals(this.managementZones, securityProblemDetails.managementZones) &&
        Objects.equals(this.cveIds, securityProblemDetails.cveIds) &&
        Objects.equals(this.codeLevelVulnerabilityDetails, securityProblemDetails.codeLevelVulnerabilityDetails) &&
        Objects.equals(this.events, securityProblemDetails.events) &&
        Objects.equals(this.vulnerableComponents, securityProblemDetails.vulnerableComponents) &&
        Objects.equals(this.affectedEntities, securityProblemDetails.affectedEntities) &&
        Objects.equals(this.exposedEntities, securityProblemDetails.exposedEntities) &&
        Objects.equals(this.reachableDataAssets, securityProblemDetails.reachableDataAssets) &&
        Objects.equals(this.relatedEntities, securityProblemDetails.relatedEntities) &&
        Objects.equals(this.relatedContainerImages, securityProblemDetails.relatedContainerImages) &&
        Objects.equals(this.relatedAttacks, securityProblemDetails.relatedAttacks) &&
        Objects.equals(this.muteStateChangeInProgress, securityProblemDetails.muteStateChangeInProgress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(securityProblemId, displayId, status, muted, externalVulnerabilityId, vulnerabilityType, title, packageName, url, description, technology, firstSeenTimestamp, lastUpdatedTimestamp, riskAssessment, managementZones, cveIds, codeLevelVulnerabilityDetails, events, vulnerableComponents, affectedEntities, exposedEntities, reachableDataAssets, relatedEntities, relatedContainerImages, relatedAttacks, muteStateChangeInProgress);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SecurityProblemDetails {\n");
    sb.append("    securityProblemId: ").append(toIndentedString(securityProblemId)).append("\n");
    sb.append("    displayId: ").append(toIndentedString(displayId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    muted: ").append(toIndentedString(muted)).append("\n");
    sb.append("    externalVulnerabilityId: ").append(toIndentedString(externalVulnerabilityId)).append("\n");
    sb.append("    vulnerabilityType: ").append(toIndentedString(vulnerabilityType)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    packageName: ").append(toIndentedString(packageName)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    technology: ").append(toIndentedString(technology)).append("\n");
    sb.append("    firstSeenTimestamp: ").append(toIndentedString(firstSeenTimestamp)).append("\n");
    sb.append("    lastUpdatedTimestamp: ").append(toIndentedString(lastUpdatedTimestamp)).append("\n");
    sb.append("    riskAssessment: ").append(toIndentedString(riskAssessment)).append("\n");
    sb.append("    managementZones: ").append(toIndentedString(managementZones)).append("\n");
    sb.append("    cveIds: ").append(toIndentedString(cveIds)).append("\n");
    sb.append("    codeLevelVulnerabilityDetails: ").append(toIndentedString(codeLevelVulnerabilityDetails)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    vulnerableComponents: ").append(toIndentedString(vulnerableComponents)).append("\n");
    sb.append("    affectedEntities: ").append(toIndentedString(affectedEntities)).append("\n");
    sb.append("    exposedEntities: ").append(toIndentedString(exposedEntities)).append("\n");
    sb.append("    reachableDataAssets: ").append(toIndentedString(reachableDataAssets)).append("\n");
    sb.append("    relatedEntities: ").append(toIndentedString(relatedEntities)).append("\n");
    sb.append("    relatedContainerImages: ").append(toIndentedString(relatedContainerImages)).append("\n");
    sb.append("    relatedAttacks: ").append(toIndentedString(relatedAttacks)).append("\n");
    sb.append("    muteStateChangeInProgress: ").append(toIndentedString(muteStateChangeInProgress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

