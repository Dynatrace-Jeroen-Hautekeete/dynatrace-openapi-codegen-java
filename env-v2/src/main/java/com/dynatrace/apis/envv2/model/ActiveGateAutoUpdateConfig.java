/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Configuration of the ActiveGate auto-updates.
 */
@ApiModel(description = "Configuration of the ActiveGate auto-updates.")
@JsonPropertyOrder({
  ActiveGateAutoUpdateConfig.JSON_PROPERTY_SETTING,
  ActiveGateAutoUpdateConfig.JSON_PROPERTY_EFFECTIVE_SETTING
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class ActiveGateAutoUpdateConfig {
  /**
   * The state of the ActiveGate auto-update: enabled, disabled, or inherited.   If set to &#x60;INHERITED&#x60;, the setting is inherited from the global configuration set on the environment or Managed cluster level.
   */
  public enum SettingEnum {
    DISABLED("DISABLED"),
    
    ENABLED("ENABLED"),
    
    INHERITED("INHERITED");

    private String value;

    SettingEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SettingEnum fromValue(String value) {
      for (SettingEnum b : SettingEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SETTING = "setting";
  private SettingEnum setting;

  /**
   * The actual state of the ActiveGate auto-update.   Applicable only if the **setting** parameter is set to &#x60;INHERITED&#x60;. In that case, the value is taken from the parent setting. Otherwise, it&#39;s just a duplicate of the **setting** value.
   */
  public enum EffectiveSettingEnum {
    ENABLED("ENABLED"),
    
    DISABLED("DISABLED");

    private String value;

    EffectiveSettingEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EffectiveSettingEnum fromValue(String value) {
      for (EffectiveSettingEnum b : EffectiveSettingEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_EFFECTIVE_SETTING = "effectiveSetting";
  private EffectiveSettingEnum effectiveSetting;

  public ActiveGateAutoUpdateConfig() { 
  }

  @JsonCreator
  public ActiveGateAutoUpdateConfig(
    @JsonProperty(JSON_PROPERTY_EFFECTIVE_SETTING) EffectiveSettingEnum effectiveSetting
  ) {
  this();
    this.effectiveSetting = effectiveSetting;
  }

  public ActiveGateAutoUpdateConfig setting(SettingEnum setting) {
    this.setting = setting;
    return this;
  }

   /**
   * The state of the ActiveGate auto-update: enabled, disabled, or inherited.   If set to &#x60;INHERITED&#x60;, the setting is inherited from the global configuration set on the environment or Managed cluster level.
   * @return setting
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "INHERITED", required = true, value = "The state of the ActiveGate auto-update: enabled, disabled, or inherited.   If set to `INHERITED`, the setting is inherited from the global configuration set on the environment or Managed cluster level.")
  @JsonProperty(JSON_PROPERTY_SETTING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SettingEnum getSetting() {
    return setting;
  }


  @JsonProperty(JSON_PROPERTY_SETTING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSetting(SettingEnum setting) {
    this.setting = setting;
  }


   /**
   * The actual state of the ActiveGate auto-update.   Applicable only if the **setting** parameter is set to &#x60;INHERITED&#x60;. In that case, the value is taken from the parent setting. Otherwise, it&#39;s just a duplicate of the **setting** value.
   * @return effectiveSetting
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ENABLED", value = "The actual state of the ActiveGate auto-update.   Applicable only if the **setting** parameter is set to `INHERITED`. In that case, the value is taken from the parent setting. Otherwise, it's just a duplicate of the **setting** value.")
  @JsonProperty(JSON_PROPERTY_EFFECTIVE_SETTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EffectiveSettingEnum getEffectiveSetting() {
    return effectiveSetting;
  }




  /**
   * Return true if this ActiveGateAutoUpdateConfig object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActiveGateAutoUpdateConfig activeGateAutoUpdateConfig = (ActiveGateAutoUpdateConfig) o;
    return Objects.equals(this.setting, activeGateAutoUpdateConfig.setting) &&
        Objects.equals(this.effectiveSetting, activeGateAutoUpdateConfig.effectiveSetting);
  }

  @Override
  public int hashCode() {
    return Objects.hash(setting, effectiveSetting);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActiveGateAutoUpdateConfig {\n");
    sb.append("    setting: ").append(toIndentedString(setting)).append("\n");
    sb.append("    effectiveSetting: ").append(toIndentedString(effectiveSetting)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

