/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Configuration of the ActiveGate update job.
 */
@ApiModel(description = "Configuration of the ActiveGate update job.")
@JsonPropertyOrder({
  UpdateJob.JSON_PROPERTY_AG_TYPE,
  UpdateJob.JSON_PROPERTY_JOB_STATE,
  UpdateJob.JSON_PROPERTY_UPDATE_METHOD,
  UpdateJob.JSON_PROPERTY_UPDATE_TYPE,
  UpdateJob.JSON_PROPERTY_START_VERSION,
  UpdateJob.JSON_PROPERTY_ENVIRONMENTS,
  UpdateJob.JSON_PROPERTY_JOB_ID,
  UpdateJob.JSON_PROPERTY_CANCELABLE,
  UpdateJob.JSON_PROPERTY_TIMESTAMP,
  UpdateJob.JSON_PROPERTY_DURATION,
  UpdateJob.JSON_PROPERTY_ERROR,
  UpdateJob.JSON_PROPERTY_TARGET_VERSION
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class UpdateJob {
  /**
   * The type of the ActiveGate.
   */
  public enum AgTypeEnum {
    CLUSTER("CLUSTER"),
    
    ENVIRONMENT("ENVIRONMENT"),
    
    ENVIRONMENT_MULTI("ENVIRONMENT_MULTI");

    private String value;

    AgTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AgTypeEnum fromValue(String value) {
      for (AgTypeEnum b : AgTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AG_TYPE = "agType";
  private AgTypeEnum agType;

  /**
   * The status of the update job.
   */
  public enum JobStateEnum {
    FAILED("FAILED"),
    
    IN_PROGRESS("IN_PROGRESS"),
    
    PENDING("PENDING"),
    
    ROLLBACK("ROLLBACK"),
    
    SCHEDULED("SCHEDULED"),
    
    SKIPPED("SKIPPED"),
    
    SUCCEED("SUCCEED");

    private String value;

    JobStateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static JobStateEnum fromValue(String value) {
      for (JobStateEnum b : JobStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_JOB_STATE = "jobState";
  private JobStateEnum jobState;

  /**
   * The method of updating the ActiveGate or its component.
   */
  public enum UpdateMethodEnum {
    AUTOMATIC("AUTOMATIC"),
    
    MANUAL_INSTALLATION("MANUAL_INSTALLATION"),
    
    ON_DEMAND("ON_DEMAND");

    private String value;

    UpdateMethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static UpdateMethodEnum fromValue(String value) {
      for (UpdateMethodEnum b : UpdateMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_UPDATE_METHOD = "updateMethod";
  private UpdateMethodEnum updateMethod;

  /**
   * The component to be updated.
   */
  public enum UpdateTypeEnum {
    ACTIVE_GATE("ACTIVE_GATE"),
    
    REMOTE_PLUGIN_AGENT("REMOTE_PLUGIN_AGENT"),
    
    SYNTHETIC("SYNTHETIC"),
    
    Z_REMOTE("Z_REMOTE");

    private String value;

    UpdateTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static UpdateTypeEnum fromValue(String value) {
      for (UpdateTypeEnum b : UpdateTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_UPDATE_TYPE = "updateType";
  private UpdateTypeEnum updateType;

  public static final String JSON_PROPERTY_START_VERSION = "startVersion";
  private String startVersion;

  public static final String JSON_PROPERTY_ENVIRONMENTS = "environments";
  private List<String> environments = null;

  public static final String JSON_PROPERTY_JOB_ID = "jobId";
  private String jobId;

  public static final String JSON_PROPERTY_CANCELABLE = "cancelable";
  private Boolean cancelable;

  public static final String JSON_PROPERTY_TIMESTAMP = "timestamp";
  private Long timestamp;

  public static final String JSON_PROPERTY_DURATION = "duration";
  private Long duration;

  public static final String JSON_PROPERTY_ERROR = "error";
  private String error;

  public static final String JSON_PROPERTY_TARGET_VERSION = "targetVersion";
  private String targetVersion;

  public UpdateJob() { 
  }

  @JsonCreator
  public UpdateJob(
    @JsonProperty(JSON_PROPERTY_AG_TYPE) AgTypeEnum agType, 
    @JsonProperty(JSON_PROPERTY_JOB_STATE) JobStateEnum jobState, 
    @JsonProperty(JSON_PROPERTY_UPDATE_METHOD) UpdateMethodEnum updateMethod, 
    @JsonProperty(JSON_PROPERTY_UPDATE_TYPE) UpdateTypeEnum updateType, 
    @JsonProperty(JSON_PROPERTY_START_VERSION) String startVersion, 
    @JsonProperty(JSON_PROPERTY_ENVIRONMENTS) List<String> environments, 
    @JsonProperty(JSON_PROPERTY_JOB_ID) String jobId, 
    @JsonProperty(JSON_PROPERTY_CANCELABLE) Boolean cancelable, 
    @JsonProperty(JSON_PROPERTY_TIMESTAMP) Long timestamp, 
    @JsonProperty(JSON_PROPERTY_DURATION) Long duration, 
    @JsonProperty(JSON_PROPERTY_ERROR) String error
  ) {
  this();
    this.agType = agType;
    this.jobState = jobState;
    this.updateMethod = updateMethod;
    this.updateType = updateType;
    this.startVersion = startVersion;
    this.environments = environments;
    this.jobId = jobId;
    this.cancelable = cancelable;
    this.timestamp = timestamp;
    this.duration = duration;
    this.error = error;
  }

   /**
   * The type of the ActiveGate.
   * @return agType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ENVIRONMENT", value = "The type of the ActiveGate.")
  @JsonProperty(JSON_PROPERTY_AG_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AgTypeEnum getAgType() {
    return agType;
  }




   /**
   * The status of the update job.
   * @return jobState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "SUCCEED", value = "The status of the update job.")
  @JsonProperty(JSON_PROPERTY_JOB_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JobStateEnum getJobState() {
    return jobState;
  }




   /**
   * The method of updating the ActiveGate or its component.
   * @return updateMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "AUTOMATIC", value = "The method of updating the ActiveGate or its component.")
  @JsonProperty(JSON_PROPERTY_UPDATE_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateMethodEnum getUpdateMethod() {
    return updateMethod;
  }




   /**
   * The component to be updated.
   * @return updateType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ACTIVE_GATE", value = "The component to be updated.")
  @JsonProperty(JSON_PROPERTY_UPDATE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateTypeEnum getUpdateType() {
    return updateType;
  }




   /**
   * The initial version of the ActiveGate.
   * @return startVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1.185.0.20200201-120000", value = "The initial version of the ActiveGate.")
  @JsonProperty(JSON_PROPERTY_START_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStartVersion() {
    return startVersion;
  }




   /**
   * A list of environments (specified by IDs) the ActiveGate can connect to.
   * @return environments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of environments (specified by IDs) the ActiveGate can connect to.")
  @JsonProperty(JSON_PROPERTY_ENVIRONMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getEnvironments() {
    return environments;
  }




   /**
   * The ID of the update job.
   * @return jobId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "-3524498778810258605", value = "The ID of the update job.")
  @JsonProperty(JSON_PROPERTY_JOB_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getJobId() {
    return jobId;
  }




   /**
   * The job can (&#x60;true&#x60;) or can&#39;t (&#x60;false&#x60;) be cancelled at the moment.
   * @return cancelable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "The job can (`true`) or can't (`false`) be cancelled at the moment.")
  @JsonProperty(JSON_PROPERTY_CANCELABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCancelable() {
    return cancelable;
  }




   /**
   * The timestamp of the update job completion.    The &#x60;null&#x60; value means the job is still running.
   * @return timestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1582031917814", value = "The timestamp of the update job completion.    The `null` value means the job is still running.")
  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTimestamp() {
    return timestamp;
  }




   /**
   * The duration of the update, in milliseconds.
   * @return duration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3608000", value = "The duration of the update, in milliseconds.")
  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getDuration() {
    return duration;
  }




   /**
   * The information about update error.
   * @return error
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The information about update error.")
  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getError() {
    return error;
  }




  public UpdateJob targetVersion(String targetVersion) {
    this.targetVersion = targetVersion;
    return this;
  }

   /**
   * The target version of the update.   Specify the version in the &#x60;&lt;major&gt;.&lt;minor&gt;.&lt;revision&gt;.&lt;timestamp&gt;&#x60; format.   To update to the latest available version, use the &#x60;latest&#x60; value.
   * @return targetVersion
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1.190.0.20200301-130000", required = true, value = "The target version of the update.   Specify the version in the `<major>.<minor>.<revision>.<timestamp>` format.   To update to the latest available version, use the `latest` value.")
  @JsonProperty(JSON_PROPERTY_TARGET_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTargetVersion() {
    return targetVersion;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTargetVersion(String targetVersion) {
    this.targetVersion = targetVersion;
  }


  /**
   * Return true if this UpdateJob object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateJob updateJob = (UpdateJob) o;
    return Objects.equals(this.agType, updateJob.agType) &&
        Objects.equals(this.jobState, updateJob.jobState) &&
        Objects.equals(this.updateMethod, updateJob.updateMethod) &&
        Objects.equals(this.updateType, updateJob.updateType) &&
        Objects.equals(this.startVersion, updateJob.startVersion) &&
        Objects.equals(this.environments, updateJob.environments) &&
        Objects.equals(this.jobId, updateJob.jobId) &&
        Objects.equals(this.cancelable, updateJob.cancelable) &&
        Objects.equals(this.timestamp, updateJob.timestamp) &&
        Objects.equals(this.duration, updateJob.duration) &&
        Objects.equals(this.error, updateJob.error) &&
        Objects.equals(this.targetVersion, updateJob.targetVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agType, jobState, updateMethod, updateType, startVersion, environments, jobId, cancelable, timestamp, duration, error, targetVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateJob {\n");
    sb.append("    agType: ").append(toIndentedString(agType)).append("\n");
    sb.append("    jobState: ").append(toIndentedString(jobState)).append("\n");
    sb.append("    updateMethod: ").append(toIndentedString(updateMethod)).append("\n");
    sb.append("    updateType: ").append(toIndentedString(updateType)).append("\n");
    sb.append("    startVersion: ").append(toIndentedString(startVersion)).append("\n");
    sb.append("    environments: ").append(toIndentedString(environments)).append("\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    cancelable: ").append(toIndentedString(cancelable)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    targetVersion: ").append(toIndentedString(targetVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

