/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv2.model.ExecutionFullResults;
import com.dynatrace.apis.envv2.model.ExecutionSimpleResults;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Describes the status of an on-demand execution.
 */
@ApiModel(description = "Describes the status of an on-demand execution.")
@JsonPropertyOrder({
  SyntheticOnDemandExecution.JSON_PROPERTY_BATCH_ID,
  SyntheticOnDemandExecution.JSON_PROPERTY_EXECUTION_ID,
  SyntheticOnDemandExecution.JSON_PROPERTY_EXECUTION_STAGE,
  SyntheticOnDemandExecution.JSON_PROPERTY_SCHEDULING_TIMESTAMP,
  SyntheticOnDemandExecution.JSON_PROPERTY_EXECUTION_TIMESTAMP,
  SyntheticOnDemandExecution.JSON_PROPERTY_DATA_DELIVERY_TIMESTAMP,
  SyntheticOnDemandExecution.JSON_PROPERTY_MONITOR_ID,
  SyntheticOnDemandExecution.JSON_PROPERTY_LOCATION_ID,
  SyntheticOnDemandExecution.JSON_PROPERTY_USER_ID,
  SyntheticOnDemandExecution.JSON_PROPERTY_METADATA,
  SyntheticOnDemandExecution.JSON_PROPERTY_SOURCE,
  SyntheticOnDemandExecution.JSON_PROPERTY_SIMPLE_RESULTS,
  SyntheticOnDemandExecution.JSON_PROPERTY_FULL_RESULTS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class SyntheticOnDemandExecution {
  public static final String JSON_PROPERTY_BATCH_ID = "batchId";
  private String batchId;

  public static final String JSON_PROPERTY_EXECUTION_ID = "executionId";
  private String executionId;

  /**
   * Execution stage.
   */
  public enum ExecutionStageEnum {
    DATA_RETRIEVED("DATA_RETRIEVED"),
    
    EXECUTED("EXECUTED"),
    
    NOT_TRIGGERED("NOT_TRIGGERED"),
    
    TIMED_OUT("TIMED_OUT"),
    
    TRIGGERED("TRIGGERED");

    private String value;

    ExecutionStageEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ExecutionStageEnum fromValue(String value) {
      for (ExecutionStageEnum b : ExecutionStageEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_EXECUTION_STAGE = "executionStage";
  private ExecutionStageEnum executionStage;

  public static final String JSON_PROPERTY_SCHEDULING_TIMESTAMP = "schedulingTimestamp";
  private Long schedulingTimestamp;

  public static final String JSON_PROPERTY_EXECUTION_TIMESTAMP = "executionTimestamp";
  private Long executionTimestamp;

  public static final String JSON_PROPERTY_DATA_DELIVERY_TIMESTAMP = "dataDeliveryTimestamp";
  private Long dataDeliveryTimestamp;

  public static final String JSON_PROPERTY_MONITOR_ID = "monitorId";
  private String monitorId;

  public static final String JSON_PROPERTY_LOCATION_ID = "locationId";
  private String locationId;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  private String userId;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private Map<String, String> metadata = null;

  /**
   * The source of the triggering request.
   */
  public enum SourceEnum {
    API("API"),
    
    UI("UI");

    private String value;

    SourceEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SourceEnum fromValue(String value) {
      for (SourceEnum b : SourceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SOURCE = "source";
  private SourceEnum source;

  public static final String JSON_PROPERTY_SIMPLE_RESULTS = "simpleResults";
  private ExecutionSimpleResults simpleResults;

  public static final String JSON_PROPERTY_FULL_RESULTS = "fullResults";
  private ExecutionFullResults fullResults;

  public SyntheticOnDemandExecution() { 
  }

  public SyntheticOnDemandExecution batchId(String batchId) {
    this.batchId = batchId;
    return this;
  }

   /**
   * The identifier of the batch.
   * @return batchId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The identifier of the batch.")
  @JsonProperty(JSON_PROPERTY_BATCH_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBatchId() {
    return batchId;
  }


  @JsonProperty(JSON_PROPERTY_BATCH_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBatchId(String batchId) {
    this.batchId = batchId;
  }


  public SyntheticOnDemandExecution executionId(String executionId) {
    this.executionId = executionId;
    return this;
  }

   /**
   * The identifier of the execution.
   * @return executionId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The identifier of the execution.")
  @JsonProperty(JSON_PROPERTY_EXECUTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExecutionId() {
    return executionId;
  }


  @JsonProperty(JSON_PROPERTY_EXECUTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExecutionId(String executionId) {
    this.executionId = executionId;
  }


  public SyntheticOnDemandExecution executionStage(ExecutionStageEnum executionStage) {
    this.executionStage = executionStage;
    return this;
  }

   /**
   * Execution stage.
   * @return executionStage
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Execution stage.")
  @JsonProperty(JSON_PROPERTY_EXECUTION_STAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ExecutionStageEnum getExecutionStage() {
    return executionStage;
  }


  @JsonProperty(JSON_PROPERTY_EXECUTION_STAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExecutionStage(ExecutionStageEnum executionStage) {
    this.executionStage = executionStage;
  }


  public SyntheticOnDemandExecution schedulingTimestamp(Long schedulingTimestamp) {
    this.schedulingTimestamp = schedulingTimestamp;
    return this;
  }

   /**
   * The scheduling timestamp, in UTC milliseconds.
   * @return schedulingTimestamp
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The scheduling timestamp, in UTC milliseconds.")
  @JsonProperty(JSON_PROPERTY_SCHEDULING_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getSchedulingTimestamp() {
    return schedulingTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULING_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSchedulingTimestamp(Long schedulingTimestamp) {
    this.schedulingTimestamp = schedulingTimestamp;
  }


  public SyntheticOnDemandExecution executionTimestamp(Long executionTimestamp) {
    this.executionTimestamp = executionTimestamp;
    return this;
  }

   /**
   * The timestamp when execution was finished, in UTC milliseconds.
   * @return executionTimestamp
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The timestamp when execution was finished, in UTC milliseconds.")
  @JsonProperty(JSON_PROPERTY_EXECUTION_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getExecutionTimestamp() {
    return executionTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_EXECUTION_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExecutionTimestamp(Long executionTimestamp) {
    this.executionTimestamp = executionTimestamp;
  }


  public SyntheticOnDemandExecution dataDeliveryTimestamp(Long dataDeliveryTimestamp) {
    this.dataDeliveryTimestamp = dataDeliveryTimestamp;
    return this;
  }

   /**
   * The timestamp when whole data set has been collected on server, in UTC milliseconds.
   * @return dataDeliveryTimestamp
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The timestamp when whole data set has been collected on server, in UTC milliseconds.")
  @JsonProperty(JSON_PROPERTY_DATA_DELIVERY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getDataDeliveryTimestamp() {
    return dataDeliveryTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_DATA_DELIVERY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDataDeliveryTimestamp(Long dataDeliveryTimestamp) {
    this.dataDeliveryTimestamp = dataDeliveryTimestamp;
  }


  public SyntheticOnDemandExecution monitorId(String monitorId) {
    this.monitorId = monitorId;
    return this;
  }

   /**
   * The identifier of the monitor.
   * @return monitorId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The identifier of the monitor.")
  @JsonProperty(JSON_PROPERTY_MONITOR_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMonitorId() {
    return monitorId;
  }


  @JsonProperty(JSON_PROPERTY_MONITOR_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMonitorId(String monitorId) {
    this.monitorId = monitorId;
  }


  public SyntheticOnDemandExecution locationId(String locationId) {
    this.locationId = locationId;
    return this;
  }

   /**
   * The identifier of the location from where the monitor is to be executed.
   * @return locationId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The identifier of the location from where the monitor is to be executed.")
  @JsonProperty(JSON_PROPERTY_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLocationId() {
    return locationId;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocationId(String locationId) {
    this.locationId = locationId;
  }


  public SyntheticOnDemandExecution userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * The name of the user who triggered the on-demand execution.
   * @return userId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name of the user who triggered the on-demand execution.")
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserId(String userId) {
    this.userId = userId;
  }


  public SyntheticOnDemandExecution metadata(Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  public SyntheticOnDemandExecution putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Metadata map for the execution batch.
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Metadata map for the execution batch.")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }


  public SyntheticOnDemandExecution source(SourceEnum source) {
    this.source = source;
    return this;
  }

   /**
   * The source of the triggering request.
   * @return source
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The source of the triggering request.")
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SourceEnum getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSource(SourceEnum source) {
    this.source = source;
  }


  public SyntheticOnDemandExecution simpleResults(ExecutionSimpleResults simpleResults) {
    this.simpleResults = simpleResults;
    return this;
  }

   /**
   * Get simpleResults
   * @return simpleResults
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SIMPLE_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExecutionSimpleResults getSimpleResults() {
    return simpleResults;
  }


  @JsonProperty(JSON_PROPERTY_SIMPLE_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSimpleResults(ExecutionSimpleResults simpleResults) {
    this.simpleResults = simpleResults;
  }


  public SyntheticOnDemandExecution fullResults(ExecutionFullResults fullResults) {
    this.fullResults = fullResults;
    return this;
  }

   /**
   * Get fullResults
   * @return fullResults
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FULL_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExecutionFullResults getFullResults() {
    return fullResults;
  }


  @JsonProperty(JSON_PROPERTY_FULL_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFullResults(ExecutionFullResults fullResults) {
    this.fullResults = fullResults;
  }


  /**
   * Return true if this SyntheticOnDemandExecution object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SyntheticOnDemandExecution syntheticOnDemandExecution = (SyntheticOnDemandExecution) o;
    return Objects.equals(this.batchId, syntheticOnDemandExecution.batchId) &&
        Objects.equals(this.executionId, syntheticOnDemandExecution.executionId) &&
        Objects.equals(this.executionStage, syntheticOnDemandExecution.executionStage) &&
        Objects.equals(this.schedulingTimestamp, syntheticOnDemandExecution.schedulingTimestamp) &&
        Objects.equals(this.executionTimestamp, syntheticOnDemandExecution.executionTimestamp) &&
        Objects.equals(this.dataDeliveryTimestamp, syntheticOnDemandExecution.dataDeliveryTimestamp) &&
        Objects.equals(this.monitorId, syntheticOnDemandExecution.monitorId) &&
        Objects.equals(this.locationId, syntheticOnDemandExecution.locationId) &&
        Objects.equals(this.userId, syntheticOnDemandExecution.userId) &&
        Objects.equals(this.metadata, syntheticOnDemandExecution.metadata) &&
        Objects.equals(this.source, syntheticOnDemandExecution.source) &&
        Objects.equals(this.simpleResults, syntheticOnDemandExecution.simpleResults) &&
        Objects.equals(this.fullResults, syntheticOnDemandExecution.fullResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(batchId, executionId, executionStage, schedulingTimestamp, executionTimestamp, dataDeliveryTimestamp, monitorId, locationId, userId, metadata, source, simpleResults, fullResults);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SyntheticOnDemandExecution {\n");
    sb.append("    batchId: ").append(toIndentedString(batchId)).append("\n");
    sb.append("    executionId: ").append(toIndentedString(executionId)).append("\n");
    sb.append("    executionStage: ").append(toIndentedString(executionStage)).append("\n");
    sb.append("    schedulingTimestamp: ").append(toIndentedString(schedulingTimestamp)).append("\n");
    sb.append("    executionTimestamp: ").append(toIndentedString(executionTimestamp)).append("\n");
    sb.append("    dataDeliveryTimestamp: ").append(toIndentedString(dataDeliveryTimestamp)).append("\n");
    sb.append("    monitorId: ").append(toIndentedString(monitorId)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    simpleResults: ").append(toIndentedString(simpleResults)).append("\n");
    sb.append("    fullResults: ").append(toIndentedString(fullResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

