/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv2.model.AssetInfo;
import com.dynatrace.apis.envv2.model.AuthorDto;
import com.dynatrace.apis.envv2.model.FeatureSetDetails;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ExtensionUploadResponseDto
 */
@JsonPropertyOrder({
  ExtensionUploadResponseDto.JSON_PROPERTY_EXTENSION_NAME,
  ExtensionUploadResponseDto.JSON_PROPERTY_VERSION,
  ExtensionUploadResponseDto.JSON_PROPERTY_AUTHOR,
  ExtensionUploadResponseDto.JSON_PROPERTY_DATA_SOURCES,
  ExtensionUploadResponseDto.JSON_PROPERTY_VARIABLES,
  ExtensionUploadResponseDto.JSON_PROPERTY_FEATURE_SETS,
  ExtensionUploadResponseDto.JSON_PROPERTY_FEATURE_SETS_DETAILS,
  ExtensionUploadResponseDto.JSON_PROPERTY_MIN_DYNATRACE_VERSION,
  ExtensionUploadResponseDto.JSON_PROPERTY_MIN_E_E_C_VERSION,
  ExtensionUploadResponseDto.JSON_PROPERTY_FILE_HASH,
  ExtensionUploadResponseDto.JSON_PROPERTY_ASSETS_INFO
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class ExtensionUploadResponseDto {
  public static final String JSON_PROPERTY_EXTENSION_NAME = "extensionName";
  private String extensionName;

  public static final String JSON_PROPERTY_VERSION = "version";
  private String version;

  public static final String JSON_PROPERTY_AUTHOR = "author";
  private AuthorDto author;

  public static final String JSON_PROPERTY_DATA_SOURCES = "dataSources";
  private List<String> dataSources = null;

  public static final String JSON_PROPERTY_VARIABLES = "variables";
  private List<String> variables = null;

  public static final String JSON_PROPERTY_FEATURE_SETS = "featureSets";
  private Set<String> featureSets = null;

  public static final String JSON_PROPERTY_FEATURE_SETS_DETAILS = "featureSetsDetails";
  private Map<String, FeatureSetDetails> featureSetsDetails = null;

  public static final String JSON_PROPERTY_MIN_DYNATRACE_VERSION = "minDynatraceVersion";
  private String minDynatraceVersion;

  public static final String JSON_PROPERTY_MIN_E_E_C_VERSION = "minEECVersion";
  private String minEECVersion;

  public static final String JSON_PROPERTY_FILE_HASH = "fileHash";
  private String fileHash;

  public static final String JSON_PROPERTY_ASSETS_INFO = "assetsInfo";
  private Set<AssetInfo> assetsInfo = null;

  public ExtensionUploadResponseDto() { 
  }

  public ExtensionUploadResponseDto extensionName(String extensionName) {
    this.extensionName = extensionName;
    return this;
  }

   /**
   * Extension name
   * @return extensionName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Extension name")
  @JsonProperty(JSON_PROPERTY_EXTENSION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExtensionName() {
    return extensionName;
  }


  @JsonProperty(JSON_PROPERTY_EXTENSION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtensionName(String extensionName) {
    this.extensionName = extensionName;
  }


  public ExtensionUploadResponseDto version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Extension version
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1.2.3", value = "Extension version")
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(String version) {
    this.version = version;
  }


  public ExtensionUploadResponseDto author(AuthorDto author) {
    this.author = author;
    return this;
  }

   /**
   * Get author
   * @return author
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AuthorDto getAuthor() {
    return author;
  }


  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthor(AuthorDto author) {
    this.author = author;
  }


  public ExtensionUploadResponseDto dataSources(List<String> dataSources) {
    this.dataSources = dataSources;
    return this;
  }

  public ExtensionUploadResponseDto addDataSourcesItem(String dataSourcesItem) {
    if (this.dataSources == null) {
      this.dataSources = new ArrayList<>();
    }
    this.dataSources.add(dataSourcesItem);
    return this;
  }

   /**
   * Data sources that extension uses to gather data
   * @return dataSources
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Data sources that extension uses to gather data")
  @JsonProperty(JSON_PROPERTY_DATA_SOURCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getDataSources() {
    return dataSources;
  }


  @JsonProperty(JSON_PROPERTY_DATA_SOURCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataSources(List<String> dataSources) {
    this.dataSources = dataSources;
  }


  public ExtensionUploadResponseDto variables(List<String> variables) {
    this.variables = variables;
    return this;
  }

  public ExtensionUploadResponseDto addVariablesItem(String variablesItem) {
    if (this.variables == null) {
      this.variables = new ArrayList<>();
    }
    this.variables.add(variablesItem);
    return this;
  }

   /**
   * Custom variables used in extension configuration
   * @return variables
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom variables used in extension configuration")
  @JsonProperty(JSON_PROPERTY_VARIABLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getVariables() {
    return variables;
  }


  @JsonProperty(JSON_PROPERTY_VARIABLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVariables(List<String> variables) {
    this.variables = variables;
  }


  public ExtensionUploadResponseDto featureSets(Set<String> featureSets) {
    this.featureSets = featureSets;
    return this;
  }

  public ExtensionUploadResponseDto addFeatureSetsItem(String featureSetsItem) {
    if (this.featureSets == null) {
      this.featureSets = new LinkedHashSet<>();
    }
    this.featureSets.add(featureSetsItem);
    return this;
  }

   /**
   * Available feature sets
   * @return featureSets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Available feature sets")
  @JsonProperty(JSON_PROPERTY_FEATURE_SETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getFeatureSets() {
    return featureSets;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_FEATURE_SETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeatureSets(Set<String> featureSets) {
    this.featureSets = featureSets;
  }


  public ExtensionUploadResponseDto featureSetsDetails(Map<String, FeatureSetDetails> featureSetsDetails) {
    this.featureSetsDetails = featureSetsDetails;
    return this;
  }

  public ExtensionUploadResponseDto putFeatureSetsDetailsItem(String key, FeatureSetDetails featureSetsDetailsItem) {
    if (this.featureSetsDetails == null) {
      this.featureSetsDetails = new HashMap<>();
    }
    this.featureSetsDetails.put(key, featureSetsDetailsItem);
    return this;
  }

   /**
   * Details of feature sets
   * @return featureSetsDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Details of feature sets")
  @JsonProperty(JSON_PROPERTY_FEATURE_SETS_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, FeatureSetDetails> getFeatureSetsDetails() {
    return featureSetsDetails;
  }


  @JsonProperty(JSON_PROPERTY_FEATURE_SETS_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeatureSetsDetails(Map<String, FeatureSetDetails> featureSetsDetails) {
    this.featureSetsDetails = featureSetsDetails;
  }


  public ExtensionUploadResponseDto minDynatraceVersion(String minDynatraceVersion) {
    this.minDynatraceVersion = minDynatraceVersion;
    return this;
  }

   /**
   * Minimal Dynatrace version that works with the extension
   * @return minDynatraceVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimal Dynatrace version that works with the extension")
  @JsonProperty(JSON_PROPERTY_MIN_DYNATRACE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMinDynatraceVersion() {
    return minDynatraceVersion;
  }


  @JsonProperty(JSON_PROPERTY_MIN_DYNATRACE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinDynatraceVersion(String minDynatraceVersion) {
    this.minDynatraceVersion = minDynatraceVersion;
  }


  public ExtensionUploadResponseDto minEECVersion(String minEECVersion) {
    this.minEECVersion = minEECVersion;
    return this;
  }

   /**
   * Minimal Extension Execution Controller version that works with the extension
   * @return minEECVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimal Extension Execution Controller version that works with the extension")
  @JsonProperty(JSON_PROPERTY_MIN_E_E_C_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMinEECVersion() {
    return minEECVersion;
  }


  @JsonProperty(JSON_PROPERTY_MIN_E_E_C_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinEECVersion(String minEECVersion) {
    this.minEECVersion = minEECVersion;
  }


  public ExtensionUploadResponseDto fileHash(String fileHash) {
    this.fileHash = fileHash;
    return this;
  }

   /**
   * SHA-256 hash of uploaded Extension file
   * @return fileHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "SHA-256 hash of uploaded Extension file")
  @JsonProperty(JSON_PROPERTY_FILE_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFileHash() {
    return fileHash;
  }


  @JsonProperty(JSON_PROPERTY_FILE_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileHash(String fileHash) {
    this.fileHash = fileHash;
  }


  public ExtensionUploadResponseDto assetsInfo(Set<AssetInfo> assetsInfo) {
    this.assetsInfo = assetsInfo;
    return this;
  }

  public ExtensionUploadResponseDto addAssetsInfoItem(AssetInfo assetsInfoItem) {
    if (this.assetsInfo == null) {
      this.assetsInfo = new LinkedHashSet<>();
    }
    this.assetsInfo.add(assetsInfoItem);
    return this;
  }

   /**
   * Information about extension assets included
   * @return assetsInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Information about extension assets included")
  @JsonProperty(JSON_PROPERTY_ASSETS_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<AssetInfo> getAssetsInfo() {
    return assetsInfo;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_ASSETS_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssetsInfo(Set<AssetInfo> assetsInfo) {
    this.assetsInfo = assetsInfo;
  }


  /**
   * Return true if this ExtensionUploadResponseDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExtensionUploadResponseDto extensionUploadResponseDto = (ExtensionUploadResponseDto) o;
    return Objects.equals(this.extensionName, extensionUploadResponseDto.extensionName) &&
        Objects.equals(this.version, extensionUploadResponseDto.version) &&
        Objects.equals(this.author, extensionUploadResponseDto.author) &&
        Objects.equals(this.dataSources, extensionUploadResponseDto.dataSources) &&
        Objects.equals(this.variables, extensionUploadResponseDto.variables) &&
        Objects.equals(this.featureSets, extensionUploadResponseDto.featureSets) &&
        Objects.equals(this.featureSetsDetails, extensionUploadResponseDto.featureSetsDetails) &&
        Objects.equals(this.minDynatraceVersion, extensionUploadResponseDto.minDynatraceVersion) &&
        Objects.equals(this.minEECVersion, extensionUploadResponseDto.minEECVersion) &&
        Objects.equals(this.fileHash, extensionUploadResponseDto.fileHash) &&
        Objects.equals(this.assetsInfo, extensionUploadResponseDto.assetsInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(extensionName, version, author, dataSources, variables, featureSets, featureSetsDetails, minDynatraceVersion, minEECVersion, fileHash, assetsInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExtensionUploadResponseDto {\n");
    sb.append("    extensionName: ").append(toIndentedString(extensionName)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    dataSources: ").append(toIndentedString(dataSources)).append("\n");
    sb.append("    variables: ").append(toIndentedString(variables)).append("\n");
    sb.append("    featureSets: ").append(toIndentedString(featureSets)).append("\n");
    sb.append("    featureSetsDetails: ").append(toIndentedString(featureSetsDetails)).append("\n");
    sb.append("    minDynatraceVersion: ").append(toIndentedString(minDynatraceVersion)).append("\n");
    sb.append("    minEECVersion: ").append(toIndentedString(minEECVersion)).append("\n");
    sb.append("    fileHash: ").append(toIndentedString(fileHash)).append("\n");
    sb.append("    assetsInfo: ").append(toIndentedString(assetsInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

