/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Contains information about the used software technology.
 */
@ApiModel(description = "Contains information about the used software technology.")
@JsonPropertyOrder({
  SoftwareTechs.JSON_PROPERTY_TECHNOLOGY,
  SoftwareTechs.JSON_PROPERTY_EDITION,
  SoftwareTechs.JSON_PROPERTY_VERBATIM_TYPE,
  SoftwareTechs.JSON_PROPERTY_VERSION
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class SoftwareTechs {
  public static final String JSON_PROPERTY_TECHNOLOGY = "technology";
  private String technology;

  public static final String JSON_PROPERTY_EDITION = "edition";
  private String edition;

  public static final String JSON_PROPERTY_VERBATIM_TYPE = "verbatimType";
  private String verbatimType;

  public static final String JSON_PROPERTY_VERSION = "version";
  private String version;

  public SoftwareTechs() { 
  }

  public SoftwareTechs technology(String technology) {
    this.technology = technology;
    return this;
  }

   /**
   * The type of the technology.
   * @return technology
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "JAVA", value = "The type of the technology.")
  @JsonProperty(JSON_PROPERTY_TECHNOLOGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTechnology() {
    return technology;
  }


  @JsonProperty(JSON_PROPERTY_TECHNOLOGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTechnology(String technology) {
    this.technology = technology;
  }


  public SoftwareTechs edition(String edition) {
    this.edition = edition;
    return this;
  }

   /**
   * The edition of the technology.
   * @return edition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "OpenJDK", value = "The edition of the technology.")
  @JsonProperty(JSON_PROPERTY_EDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEdition() {
    return edition;
  }


  @JsonProperty(JSON_PROPERTY_EDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEdition(String edition) {
    this.edition = edition;
  }


  public SoftwareTechs verbatimType(String verbatimType) {
    this.verbatimType = verbatimType;
    return this;
  }

   /**
   * The verbatim type of the technology.
   * @return verbatimType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Java", value = "The verbatim type of the technology.")
  @JsonProperty(JSON_PROPERTY_VERBATIM_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVerbatimType() {
    return verbatimType;
  }


  @JsonProperty(JSON_PROPERTY_VERBATIM_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVerbatimType(String verbatimType) {
    this.verbatimType = verbatimType;
  }


  public SoftwareTechs version(String version) {
    this.version = version;
    return this;
  }

   /**
   * The version of the technology.
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "11.0.10", value = "The version of the technology.")
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(String version) {
    this.version = version;
  }


  /**
   * Return true if this SoftwareTechs object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SoftwareTechs softwareTechs = (SoftwareTechs) o;
    return Objects.equals(this.technology, softwareTechs.technology) &&
        Objects.equals(this.edition, softwareTechs.edition) &&
        Objects.equals(this.verbatimType, softwareTechs.verbatimType) &&
        Objects.equals(this.version, softwareTechs.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(technology, edition, verbatimType, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SoftwareTechs {\n");
    sb.append("    technology: ").append(toIndentedString(technology)).append("\n");
    sb.append("    edition: ").append(toIndentedString(edition)).append("\n");
    sb.append("    verbatimType: ").append(toIndentedString(verbatimType)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

