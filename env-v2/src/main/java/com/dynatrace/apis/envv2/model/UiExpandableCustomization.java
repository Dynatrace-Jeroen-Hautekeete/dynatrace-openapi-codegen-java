/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv2.model.UiExpandableSectionCustomization;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * UI customization for expandable section
 */
@ApiModel(description = "UI customization for expandable section")
@JsonPropertyOrder({
  UiExpandableCustomization.JSON_PROPERTY_EXPANDED,
  UiExpandableCustomization.JSON_PROPERTY_DISPLAY_NAME,
  UiExpandableCustomization.JSON_PROPERTY_SECTIONS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class UiExpandableCustomization {
  public static final String JSON_PROPERTY_EXPANDED = "expanded";
  private Boolean expanded;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_SECTIONS = "sections";
  private List<UiExpandableSectionCustomization> sections = null;

  public UiExpandableCustomization() { 
  }

  public UiExpandableCustomization expanded(Boolean expanded) {
    this.expanded = expanded;
    return this;
  }

   /**
   * Defines if the item should be expanded by default
   * @return expanded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines if the item should be expanded by default")
  @JsonProperty(JSON_PROPERTY_EXPANDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExpanded() {
    return expanded;
  }


  @JsonProperty(JSON_PROPERTY_EXPANDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpanded(Boolean expanded) {
    this.expanded = expanded;
  }


  public UiExpandableCustomization displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * The display name
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The display name")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public UiExpandableCustomization sections(List<UiExpandableSectionCustomization> sections) {
    this.sections = sections;
    return this;
  }

  public UiExpandableCustomization addSectionsItem(UiExpandableSectionCustomization sectionsItem) {
    if (this.sections == null) {
      this.sections = new ArrayList<>();
    }
    this.sections.add(sectionsItem);
    return this;
  }

   /**
   * A list of sections
   * @return sections
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of sections")
  @JsonProperty(JSON_PROPERTY_SECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UiExpandableSectionCustomization> getSections() {
    return sections;
  }


  @JsonProperty(JSON_PROPERTY_SECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSections(List<UiExpandableSectionCustomization> sections) {
    this.sections = sections;
  }


  /**
   * Return true if this UiExpandableCustomization object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UiExpandableCustomization uiExpandableCustomization = (UiExpandableCustomization) o;
    return Objects.equals(this.expanded, uiExpandableCustomization.expanded) &&
        Objects.equals(this.displayName, uiExpandableCustomization.displayName) &&
        Objects.equals(this.sections, uiExpandableCustomization.sections);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expanded, displayName, sections);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UiExpandableCustomization {\n");
    sb.append("    expanded: ").append(toIndentedString(expanded)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    sections: ").append(toIndentedString(sections)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

