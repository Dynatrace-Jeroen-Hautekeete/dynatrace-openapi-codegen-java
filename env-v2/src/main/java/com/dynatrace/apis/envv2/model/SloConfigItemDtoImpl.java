/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv2.model.SloBurnRateConfig;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * SloConfigItemDtoImpl
 */
@JsonPropertyOrder({
  SloConfigItemDtoImpl.JSON_PROPERTY_ENABLED,
  SloConfigItemDtoImpl.JSON_PROPERTY_NAME,
  SloConfigItemDtoImpl.JSON_PROPERTY_DESCRIPTION,
  SloConfigItemDtoImpl.JSON_PROPERTY_METRIC_NAME,
  SloConfigItemDtoImpl.JSON_PROPERTY_METRIC_EXPRESSION,
  SloConfigItemDtoImpl.JSON_PROPERTY_EVALUATION_TYPE,
  SloConfigItemDtoImpl.JSON_PROPERTY_FILTER,
  SloConfigItemDtoImpl.JSON_PROPERTY_TARGET,
  SloConfigItemDtoImpl.JSON_PROPERTY_WARNING,
  SloConfigItemDtoImpl.JSON_PROPERTY_ERROR_BUDGET_BURN_RATE,
  SloConfigItemDtoImpl.JSON_PROPERTY_TIMEFRAME,
  SloConfigItemDtoImpl.JSON_PROPERTY_USE_RATE_METRIC,
  SloConfigItemDtoImpl.JSON_PROPERTY_METRIC_RATE,
  SloConfigItemDtoImpl.JSON_PROPERTY_METRIC_NUMERATOR,
  SloConfigItemDtoImpl.JSON_PROPERTY_METRIC_DENOMINATOR
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class SloConfigItemDtoImpl {
  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_METRIC_NAME = "metricName";
  private String metricName;

  public static final String JSON_PROPERTY_METRIC_EXPRESSION = "metricExpression";
  private String metricExpression;

  /**
   * The evaluation type of the SLO.
   */
  public enum EvaluationTypeEnum {
    AGGREGATE("AGGREGATE");

    private String value;

    EvaluationTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EvaluationTypeEnum fromValue(String value) {
      for (EvaluationTypeEnum b : EvaluationTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_EVALUATION_TYPE = "evaluationType";
  private EvaluationTypeEnum evaluationType;

  public static final String JSON_PROPERTY_FILTER = "filter";
  private String filter;

  public static final String JSON_PROPERTY_TARGET = "target";
  private Double target;

  public static final String JSON_PROPERTY_WARNING = "warning";
  private Double warning;

  public static final String JSON_PROPERTY_ERROR_BUDGET_BURN_RATE = "errorBudgetBurnRate";
  private SloBurnRateConfig errorBudgetBurnRate;

  public static final String JSON_PROPERTY_TIMEFRAME = "timeframe";
  private String timeframe;

  public static final String JSON_PROPERTY_USE_RATE_METRIC = "useRateMetric";
  private JsonNullable<Boolean> useRateMetric = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_METRIC_RATE = "metricRate";
  private String metricRate;

  public static final String JSON_PROPERTY_METRIC_NUMERATOR = "metricNumerator";
  private String metricNumerator;

  public static final String JSON_PROPERTY_METRIC_DENOMINATOR = "metricDenominator";
  private String metricDenominator;

  public SloConfigItemDtoImpl() { 
  }

  public SloConfigItemDtoImpl enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * The SLO is enabled (&#x60;true&#x60;) or disabled (&#x60;false&#x60;).
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "The SLO is enabled (`true`) or disabled (`false`).")
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public SloConfigItemDtoImpl name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the SLO.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Payment service availability", value = "The name of the SLO.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public SloConfigItemDtoImpl description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description of the SLO (optional).
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Rate of successful payments per week", value = "The description of the SLO (optional).")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public SloConfigItemDtoImpl metricName(String metricName) {
    this.metricName = metricName;
    return this;
  }

   /**
   * The name for a metric expression
   * @return metricName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "payment_service_availability", value = "The name for a metric expression")
  @JsonProperty(JSON_PROPERTY_METRIC_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMetricName() {
    return metricName;
  }


  @JsonProperty(JSON_PROPERTY_METRIC_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetricName(String metricName) {
    this.metricName = metricName;
  }


  public SloConfigItemDtoImpl metricExpression(String metricExpression) {
    this.metricExpression = metricExpression;
    return this;
  }

   /**
   * The percentage-based metric expression for the calculation of the SLO.
   * @return metricExpression
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())", value = "The percentage-based metric expression for the calculation of the SLO.")
  @JsonProperty(JSON_PROPERTY_METRIC_EXPRESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMetricExpression() {
    return metricExpression;
  }


  @JsonProperty(JSON_PROPERTY_METRIC_EXPRESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetricExpression(String metricExpression) {
    this.metricExpression = metricExpression;
  }


  public SloConfigItemDtoImpl evaluationType(EvaluationTypeEnum evaluationType) {
    this.evaluationType = evaluationType;
    return this;
  }

   /**
   * The evaluation type of the SLO.
   * @return evaluationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "AGGREGATE", value = "The evaluation type of the SLO.")
  @JsonProperty(JSON_PROPERTY_EVALUATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EvaluationTypeEnum getEvaluationType() {
    return evaluationType;
  }


  @JsonProperty(JSON_PROPERTY_EVALUATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEvaluationType(EvaluationTypeEnum evaluationType) {
    this.evaluationType = evaluationType;
  }


  public SloConfigItemDtoImpl filter(String filter) {
    this.filter = filter;
    return this;
  }

   /**
   * The entity filter for the SLO evaluation. Use the [syntax of entity selector](https://dt-url.net/entityselector).
   * @return filter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "type(\"SERVICE\")", value = "The entity filter for the SLO evaluation. Use the [syntax of entity selector](https://dt-url.net/entityselector).")
  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFilter() {
    return filter;
  }


  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilter(String filter) {
    this.filter = filter;
  }


  public SloConfigItemDtoImpl target(Double target) {
    this.target = target;
    return this;
  }

   /**
   * The target value of the SLO.
   * @return target
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "95.0", value = "The target value of the SLO.")
  @JsonProperty(JSON_PROPERTY_TARGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getTarget() {
    return target;
  }


  @JsonProperty(JSON_PROPERTY_TARGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTarget(Double target) {
    this.target = target;
  }


  public SloConfigItemDtoImpl warning(Double warning) {
    this.warning = warning;
    return this;
  }

   /**
   * The warning value of the SLO.    At warning state the SLO is still fulfilled but is getting close to failure.
   * @return warning
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "97.5", value = "The warning value of the SLO.    At warning state the SLO is still fulfilled but is getting close to failure.")
  @JsonProperty(JSON_PROPERTY_WARNING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getWarning() {
    return warning;
  }


  @JsonProperty(JSON_PROPERTY_WARNING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWarning(Double warning) {
    this.warning = warning;
  }


  public SloConfigItemDtoImpl errorBudgetBurnRate(SloBurnRateConfig errorBudgetBurnRate) {
    this.errorBudgetBurnRate = errorBudgetBurnRate;
    return this;
  }

   /**
   * Get errorBudgetBurnRate
   * @return errorBudgetBurnRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ERROR_BUDGET_BURN_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SloBurnRateConfig getErrorBudgetBurnRate() {
    return errorBudgetBurnRate;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_BUDGET_BURN_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorBudgetBurnRate(SloBurnRateConfig errorBudgetBurnRate) {
    this.errorBudgetBurnRate = errorBudgetBurnRate;
  }


  public SloConfigItemDtoImpl timeframe(String timeframe) {
    this.timeframe = timeframe;
    return this;
  }

   /**
   * The timeframe for the SLO evaluation. Use the syntax of the global timeframe selector.
   * @return timeframe
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "-1d", value = "The timeframe for the SLO evaluation. Use the syntax of the global timeframe selector.")
  @JsonProperty(JSON_PROPERTY_TIMEFRAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTimeframe() {
    return timeframe;
  }


  @JsonProperty(JSON_PROPERTY_TIMEFRAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeframe(String timeframe) {
    this.timeframe = timeframe;
  }


  public SloConfigItemDtoImpl useRateMetric(Boolean useRateMetric) {
    this.useRateMetric = JsonNullable.<Boolean>of(useRateMetric);
    return this;
  }

   /**
   * The type of the metric to use for SLO calculation:   * &#x60;true&#x60;: An existing percentage-based metric.  * &#x60;false&#x60;: A ratio of two metrics.   For a list of available metrics, see [Built-in metric page](https://dt-url.net/be03kow) or try the [GET metrics](https://dt-url.net/8e43kxf) API call.
   * @return useRateMetric
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "The type of the metric to use for SLO calculation:   * `true`: An existing percentage-based metric.  * `false`: A ratio of two metrics.   For a list of available metrics, see [Built-in metric page](https://dt-url.net/be03kow) or try the [GET metrics](https://dt-url.net/8e43kxf) API call.")
  @JsonIgnore

  public Boolean getUseRateMetric() {
        return useRateMetric.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USE_RATE_METRIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getUseRateMetric_JsonNullable() {
    return useRateMetric;
  }
  
  @JsonProperty(JSON_PROPERTY_USE_RATE_METRIC)
  public void setUseRateMetric_JsonNullable(JsonNullable<Boolean> useRateMetric) {
    this.useRateMetric = useRateMetric;
  }

  public void setUseRateMetric(Boolean useRateMetric) {
    this.useRateMetric = JsonNullable.<Boolean>of(useRateMetric);
  }


  public SloConfigItemDtoImpl metricRate(String metricRate) {
    this.metricRate = metricRate;
    return this;
  }

   /**
   * The percentage-based metric for the calculation of the SLO.   Required when the **useRateMetric** is set to &#x60;true&#x60;.
   * @return metricRate
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "builtin:service.successes.server.rate", value = "The percentage-based metric for the calculation of the SLO.   Required when the **useRateMetric** is set to `true`.")
  @JsonProperty(JSON_PROPERTY_METRIC_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMetricRate() {
    return metricRate;
  }


  @JsonProperty(JSON_PROPERTY_METRIC_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetricRate(String metricRate) {
    this.metricRate = metricRate;
  }


  public SloConfigItemDtoImpl metricNumerator(String metricNumerator) {
    this.metricNumerator = metricNumerator;
    return this;
  }

   /**
   * The metric for the count of successes (the numerator in rate calculation).   Required when the **useRateMetric** is set to &#x60;false&#x60;.
   * @return metricNumerator
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "builtin:service.errors.server.successCount", value = "The metric for the count of successes (the numerator in rate calculation).   Required when the **useRateMetric** is set to `false`.")
  @JsonProperty(JSON_PROPERTY_METRIC_NUMERATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMetricNumerator() {
    return metricNumerator;
  }


  @JsonProperty(JSON_PROPERTY_METRIC_NUMERATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetricNumerator(String metricNumerator) {
    this.metricNumerator = metricNumerator;
  }


  public SloConfigItemDtoImpl metricDenominator(String metricDenominator) {
    this.metricDenominator = metricDenominator;
    return this;
  }

   /**
   * The total count metric (the denominator in rate calculation).   Required when the **useRateMetric** is set to &#x60;false&#x60;.
   * @return metricDenominator
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "builtin:service.requestCount.server", value = "The total count metric (the denominator in rate calculation).   Required when the **useRateMetric** is set to `false`.")
  @JsonProperty(JSON_PROPERTY_METRIC_DENOMINATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMetricDenominator() {
    return metricDenominator;
  }


  @JsonProperty(JSON_PROPERTY_METRIC_DENOMINATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetricDenominator(String metricDenominator) {
    this.metricDenominator = metricDenominator;
  }


  /**
   * Return true if this SloConfigItemDtoImpl object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SloConfigItemDtoImpl sloConfigItemDtoImpl = (SloConfigItemDtoImpl) o;
    return Objects.equals(this.enabled, sloConfigItemDtoImpl.enabled) &&
        Objects.equals(this.name, sloConfigItemDtoImpl.name) &&
        Objects.equals(this.description, sloConfigItemDtoImpl.description) &&
        Objects.equals(this.metricName, sloConfigItemDtoImpl.metricName) &&
        Objects.equals(this.metricExpression, sloConfigItemDtoImpl.metricExpression) &&
        Objects.equals(this.evaluationType, sloConfigItemDtoImpl.evaluationType) &&
        Objects.equals(this.filter, sloConfigItemDtoImpl.filter) &&
        Objects.equals(this.target, sloConfigItemDtoImpl.target) &&
        Objects.equals(this.warning, sloConfigItemDtoImpl.warning) &&
        Objects.equals(this.errorBudgetBurnRate, sloConfigItemDtoImpl.errorBudgetBurnRate) &&
        Objects.equals(this.timeframe, sloConfigItemDtoImpl.timeframe) &&
        equalsNullable(this.useRateMetric, sloConfigItemDtoImpl.useRateMetric) &&
        Objects.equals(this.metricRate, sloConfigItemDtoImpl.metricRate) &&
        Objects.equals(this.metricNumerator, sloConfigItemDtoImpl.metricNumerator) &&
        Objects.equals(this.metricDenominator, sloConfigItemDtoImpl.metricDenominator);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, name, description, metricName, metricExpression, evaluationType, filter, target, warning, errorBudgetBurnRate, timeframe, hashCodeNullable(useRateMetric), metricRate, metricNumerator, metricDenominator);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SloConfigItemDtoImpl {\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    metricName: ").append(toIndentedString(metricName)).append("\n");
    sb.append("    metricExpression: ").append(toIndentedString(metricExpression)).append("\n");
    sb.append("    evaluationType: ").append(toIndentedString(evaluationType)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    warning: ").append(toIndentedString(warning)).append("\n");
    sb.append("    errorBudgetBurnRate: ").append(toIndentedString(errorBudgetBurnRate)).append("\n");
    sb.append("    timeframe: ").append(toIndentedString(timeframe)).append("\n");
    sb.append("    useRateMetric: ").append(toIndentedString(useRateMetric)).append("\n");
    sb.append("    metricRate: ").append(toIndentedString(metricRate)).append("\n");
    sb.append("    metricNumerator: ").append(toIndentedString(metricNumerator)).append("\n");
    sb.append("    metricDenominator: ").append(toIndentedString(metricDenominator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

