/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv2.model.SyntheticOnDemandTriggeredMonitor;
import com.dynatrace.apis.envv2.model.SyntheticOnDemandTriggeringProblemDetails;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The result of on-demand synthetic monitor execution.
 */
@ApiModel(description = "The result of on-demand synthetic monitor execution.")
@JsonPropertyOrder({
  SyntheticOnDemandExecutionResult.JSON_PROPERTY_BATCH_ID,
  SyntheticOnDemandExecutionResult.JSON_PROPERTY_TRIGGERING_PROBLEMS_COUNT,
  SyntheticOnDemandExecutionResult.JSON_PROPERTY_TRIGGERING_PROBLEMS_DETAILS,
  SyntheticOnDemandExecutionResult.JSON_PROPERTY_TRIGGERED_COUNT,
  SyntheticOnDemandExecutionResult.JSON_PROPERTY_TRIGGERED,
  SyntheticOnDemandExecutionResult.JSON_PROPERTY_METADATA
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class SyntheticOnDemandExecutionResult {
  public static final String JSON_PROPERTY_BATCH_ID = "batchId";
  private String batchId;

  public static final String JSON_PROPERTY_TRIGGERING_PROBLEMS_COUNT = "triggeringProblemsCount";
  private Integer triggeringProblemsCount;

  public static final String JSON_PROPERTY_TRIGGERING_PROBLEMS_DETAILS = "triggeringProblemsDetails";
  private List<SyntheticOnDemandTriggeringProblemDetails> triggeringProblemsDetails = null;

  public static final String JSON_PROPERTY_TRIGGERED_COUNT = "triggeredCount";
  private Integer triggeredCount;

  public static final String JSON_PROPERTY_TRIGGERED = "triggered";
  private List<SyntheticOnDemandTriggeredMonitor> triggered = null;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private Map<String, String> metadata = null;

  public SyntheticOnDemandExecutionResult() { 
  }

  public SyntheticOnDemandExecutionResult batchId(String batchId) {
    this.batchId = batchId;
    return this;
  }

   /**
   * The batch identifier of the triggered executions.
   * @return batchId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The batch identifier of the triggered executions.")
  @JsonProperty(JSON_PROPERTY_BATCH_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBatchId() {
    return batchId;
  }


  @JsonProperty(JSON_PROPERTY_BATCH_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBatchId(String batchId) {
    this.batchId = batchId;
  }


  public SyntheticOnDemandExecutionResult triggeringProblemsCount(Integer triggeringProblemsCount) {
    this.triggeringProblemsCount = triggeringProblemsCount;
    return this;
  }

   /**
   * The total number of problems within the batch.
   * @return triggeringProblemsCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The total number of problems within the batch.")
  @JsonProperty(JSON_PROPERTY_TRIGGERING_PROBLEMS_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getTriggeringProblemsCount() {
    return triggeringProblemsCount;
  }


  @JsonProperty(JSON_PROPERTY_TRIGGERING_PROBLEMS_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTriggeringProblemsCount(Integer triggeringProblemsCount) {
    this.triggeringProblemsCount = triggeringProblemsCount;
  }


  public SyntheticOnDemandExecutionResult triggeringProblemsDetails(List<SyntheticOnDemandTriggeringProblemDetails> triggeringProblemsDetails) {
    this.triggeringProblemsDetails = triggeringProblemsDetails;
    return this;
  }

  public SyntheticOnDemandExecutionResult addTriggeringProblemsDetailsItem(SyntheticOnDemandTriggeringProblemDetails triggeringProblemsDetailsItem) {
    if (this.triggeringProblemsDetails == null) {
      this.triggeringProblemsDetails = new ArrayList<>();
    }
    this.triggeringProblemsDetails.add(triggeringProblemsDetailsItem);
    return this;
  }

   /**
   * List with the entities for which triggering problems occurred.
   * @return triggeringProblemsDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List with the entities for which triggering problems occurred.")
  @JsonProperty(JSON_PROPERTY_TRIGGERING_PROBLEMS_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SyntheticOnDemandTriggeringProblemDetails> getTriggeringProblemsDetails() {
    return triggeringProblemsDetails;
  }


  @JsonProperty(JSON_PROPERTY_TRIGGERING_PROBLEMS_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTriggeringProblemsDetails(List<SyntheticOnDemandTriggeringProblemDetails> triggeringProblemsDetails) {
    this.triggeringProblemsDetails = triggeringProblemsDetails;
  }


  public SyntheticOnDemandExecutionResult triggeredCount(Integer triggeredCount) {
    this.triggeredCount = triggeredCount;
    return this;
  }

   /**
   * The total number of the triggered executions within the batch.
   * @return triggeredCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The total number of the triggered executions within the batch.")
  @JsonProperty(JSON_PROPERTY_TRIGGERED_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getTriggeredCount() {
    return triggeredCount;
  }


  @JsonProperty(JSON_PROPERTY_TRIGGERED_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTriggeredCount(Integer triggeredCount) {
    this.triggeredCount = triggeredCount;
  }


  public SyntheticOnDemandExecutionResult triggered(List<SyntheticOnDemandTriggeredMonitor> triggered) {
    this.triggered = triggered;
    return this;
  }

  public SyntheticOnDemandExecutionResult addTriggeredItem(SyntheticOnDemandTriggeredMonitor triggeredItem) {
    if (this.triggered == null) {
      this.triggered = new ArrayList<>();
    }
    this.triggered.add(triggeredItem);
    return this;
  }

   /**
   * Monitors for which on-demand executions were triggered.
   * @return triggered
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Monitors for which on-demand executions were triggered.")
  @JsonProperty(JSON_PROPERTY_TRIGGERED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SyntheticOnDemandTriggeredMonitor> getTriggered() {
    return triggered;
  }


  @JsonProperty(JSON_PROPERTY_TRIGGERED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTriggered(List<SyntheticOnDemandTriggeredMonitor> triggered) {
    this.triggered = triggered;
  }


  public SyntheticOnDemandExecutionResult metadata(Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  public SyntheticOnDemandExecutionResult putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * String to string map of metadata properties for execution
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "String to string map of metadata properties for execution")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }


  /**
   * Return true if this SyntheticOnDemandExecutionResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SyntheticOnDemandExecutionResult syntheticOnDemandExecutionResult = (SyntheticOnDemandExecutionResult) o;
    return Objects.equals(this.batchId, syntheticOnDemandExecutionResult.batchId) &&
        Objects.equals(this.triggeringProblemsCount, syntheticOnDemandExecutionResult.triggeringProblemsCount) &&
        Objects.equals(this.triggeringProblemsDetails, syntheticOnDemandExecutionResult.triggeringProblemsDetails) &&
        Objects.equals(this.triggeredCount, syntheticOnDemandExecutionResult.triggeredCount) &&
        Objects.equals(this.triggered, syntheticOnDemandExecutionResult.triggered) &&
        Objects.equals(this.metadata, syntheticOnDemandExecutionResult.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(batchId, triggeringProblemsCount, triggeringProblemsDetails, triggeredCount, triggered, metadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SyntheticOnDemandExecutionResult {\n");
    sb.append("    batchId: ").append(toIndentedString(batchId)).append("\n");
    sb.append("    triggeringProblemsCount: ").append(toIndentedString(triggeringProblemsCount)).append("\n");
    sb.append("    triggeringProblemsDetails: ").append(toIndentedString(triggeringProblemsDetails)).append("\n");
    sb.append("    triggeredCount: ").append(toIndentedString(triggeredCount)).append("\n");
    sb.append("    triggered: ").append(toIndentedString(triggered)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

