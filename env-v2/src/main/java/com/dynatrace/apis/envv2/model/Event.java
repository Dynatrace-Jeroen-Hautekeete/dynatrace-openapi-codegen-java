/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv2.model.EntityStub;
import com.dynatrace.apis.envv2.model.EventProperty;
import com.dynatrace.apis.envv2.model.METag;
import com.dynatrace.apis.envv2.model.ManagementZone;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Configuration of an event.
 */
@ApiModel(description = "Configuration of an event.")
@JsonPropertyOrder({
  Event.JSON_PROPERTY_SUPPRESS_ALERT,
  Event.JSON_PROPERTY_UNDER_MAINTENANCE,
  Event.JSON_PROPERTY_SUPPRESS_PROBLEM,
  Event.JSON_PROPERTY_FREQUENT_EVENT,
  Event.JSON_PROPERTY_MANAGEMENT_ZONES,
  Event.JSON_PROPERTY_ENTITY_ID,
  Event.JSON_PROPERTY_EVENT_ID,
  Event.JSON_PROPERTY_ENTITY_TAGS,
  Event.JSON_PROPERTY_EVENT_TYPE,
  Event.JSON_PROPERTY_PROPERTIES,
  Event.JSON_PROPERTY_STATUS,
  Event.JSON_PROPERTY_START_TIME,
  Event.JSON_PROPERTY_END_TIME,
  Event.JSON_PROPERTY_TITLE,
  Event.JSON_PROPERTY_CORRELATION_ID
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class Event {
  public static final String JSON_PROPERTY_SUPPRESS_ALERT = "suppressAlert";
  private Boolean suppressAlert;

  public static final String JSON_PROPERTY_UNDER_MAINTENANCE = "underMaintenance";
  private Boolean underMaintenance;

  public static final String JSON_PROPERTY_SUPPRESS_PROBLEM = "suppressProblem";
  private Boolean suppressProblem;

  public static final String JSON_PROPERTY_FREQUENT_EVENT = "frequentEvent";
  private Boolean frequentEvent;

  public static final String JSON_PROPERTY_MANAGEMENT_ZONES = "managementZones";
  private Set<ManagementZone> managementZones = null;

  public static final String JSON_PROPERTY_ENTITY_ID = "entityId";
  private EntityStub entityId;

  public static final String JSON_PROPERTY_EVENT_ID = "eventId";
  private String eventId;

  public static final String JSON_PROPERTY_ENTITY_TAGS = "entityTags";
  private Set<METag> entityTags = null;

  public static final String JSON_PROPERTY_EVENT_TYPE = "eventType";
  private String eventType;

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  private List<EventProperty> properties = null;

  /**
   * The status of the event.
   */
  public enum StatusEnum {
    CLOSED("CLOSED"),
    
    OPEN("OPEN");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_START_TIME = "startTime";
  private Long startTime;

  public static final String JSON_PROPERTY_END_TIME = "endTime";
  private Long endTime;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_CORRELATION_ID = "correlationId";
  private String correlationId;

  public Event() { 
  }

  public Event suppressAlert(Boolean suppressAlert) {
    this.suppressAlert = suppressAlert;
    return this;
  }

   /**
   * The alerting status during a [maintenance](https://dt-url.net/b2123rg0):    * &#x60;false&#x60;: Alerting works as usual.  * &#x60;true&#x60;: Alerting is disabled.
   * @return suppressAlert
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The alerting status during a [maintenance](https://dt-url.net/b2123rg0):    * `false`: Alerting works as usual.  * `true`: Alerting is disabled.")
  @JsonProperty(JSON_PROPERTY_SUPPRESS_ALERT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSuppressAlert() {
    return suppressAlert;
  }


  @JsonProperty(JSON_PROPERTY_SUPPRESS_ALERT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuppressAlert(Boolean suppressAlert) {
    this.suppressAlert = suppressAlert;
  }


  public Event underMaintenance(Boolean underMaintenance) {
    this.underMaintenance = underMaintenance;
    return this;
  }

   /**
   * If &#x60;true&#x60;, the event happened while the monitored system was under maintenance.
   * @return underMaintenance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If `true`, the event happened while the monitored system was under maintenance.")
  @JsonProperty(JSON_PROPERTY_UNDER_MAINTENANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUnderMaintenance() {
    return underMaintenance;
  }


  @JsonProperty(JSON_PROPERTY_UNDER_MAINTENANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnderMaintenance(Boolean underMaintenance) {
    this.underMaintenance = underMaintenance;
  }


  public Event suppressProblem(Boolean suppressProblem) {
    this.suppressProblem = suppressProblem;
    return this;
  }

   /**
   * The problem detection status during a [maintenance](https://dt-url.net/b2123rg0):    * &#x60;false&#x60;: Problem detection works as usual.  * &#x60;true&#x60;: Problem detection is disabled.
   * @return suppressProblem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The problem detection status during a [maintenance](https://dt-url.net/b2123rg0):    * `false`: Problem detection works as usual.  * `true`: Problem detection is disabled.")
  @JsonProperty(JSON_PROPERTY_SUPPRESS_PROBLEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSuppressProblem() {
    return suppressProblem;
  }


  @JsonProperty(JSON_PROPERTY_SUPPRESS_PROBLEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuppressProblem(Boolean suppressProblem) {
    this.suppressProblem = suppressProblem;
  }


  public Event frequentEvent(Boolean frequentEvent) {
    this.frequentEvent = frequentEvent;
    return this;
  }

   /**
   * If &#x60;true&#x60;, the event happens [frequently](https://dt-url.net/4da3kdg).    A frequent event doesn&#39;t raise a problem.
   * @return frequentEvent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If `true`, the event happens [frequently](https://dt-url.net/4da3kdg).    A frequent event doesn't raise a problem.")
  @JsonProperty(JSON_PROPERTY_FREQUENT_EVENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFrequentEvent() {
    return frequentEvent;
  }


  @JsonProperty(JSON_PROPERTY_FREQUENT_EVENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFrequentEvent(Boolean frequentEvent) {
    this.frequentEvent = frequentEvent;
  }


  public Event managementZones(Set<ManagementZone> managementZones) {
    this.managementZones = managementZones;
    return this;
  }

  public Event addManagementZonesItem(ManagementZone managementZonesItem) {
    if (this.managementZones == null) {
      this.managementZones = new LinkedHashSet<>();
    }
    this.managementZones.add(managementZonesItem);
    return this;
  }

   /**
   * A list of all management zones that the event belongs to.
   * @return managementZones
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of all management zones that the event belongs to.")
  @JsonProperty(JSON_PROPERTY_MANAGEMENT_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<ManagementZone> getManagementZones() {
    return managementZones;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_MANAGEMENT_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManagementZones(Set<ManagementZone> managementZones) {
    this.managementZones = managementZones;
  }


  public Event entityId(EntityStub entityId) {
    this.entityId = entityId;
    return this;
  }

   /**
   * Get entityId
   * @return entityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityStub getEntityId() {
    return entityId;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntityId(EntityStub entityId) {
    this.entityId = entityId;
  }


  public Event eventId(String eventId) {
    this.eventId = eventId;
    return this;
  }

   /**
   * The ID of the event.
   * @return eventId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "4293884258445543163_1564039524182", value = "The ID of the event.")
  @JsonProperty(JSON_PROPERTY_EVENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEventId() {
    return eventId;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventId(String eventId) {
    this.eventId = eventId;
  }


  public Event entityTags(Set<METag> entityTags) {
    this.entityTags = entityTags;
    return this;
  }

  public Event addEntityTagsItem(METag entityTagsItem) {
    if (this.entityTags == null) {
      this.entityTags = new LinkedHashSet<>();
    }
    this.entityTags.add(entityTagsItem);
    return this;
  }

   /**
   * A list of tags of the related entity.
   * @return entityTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of tags of the related entity.")
  @JsonProperty(JSON_PROPERTY_ENTITY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<METag> getEntityTags() {
    return entityTags;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_ENTITY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntityTags(Set<METag> entityTags) {
    this.entityTags = entityTags;
  }


  public Event eventType(String eventType) {
    this.eventType = eventType;
    return this;
  }

   /**
   * The type of the event.
   * @return eventType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "LOW_DISK_SPACE", value = "The type of the event.")
  @JsonProperty(JSON_PROPERTY_EVENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEventType() {
    return eventType;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventType(String eventType) {
    this.eventType = eventType;
  }


  public Event properties(List<EventProperty> properties) {
    this.properties = properties;
    return this;
  }

  public Event addPropertiesItem(EventProperty propertiesItem) {
    if (this.properties == null) {
      this.properties = new ArrayList<>();
    }
    this.properties.add(propertiesItem);
    return this;
  }

   /**
   * A list of event properties.
   * @return properties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of event properties.")
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EventProperty> getProperties() {
    return properties;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperties(List<EventProperty> properties) {
    this.properties = properties;
  }


  public Event status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The status of the event.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "OPEN", value = "The status of the event.")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public Event startTime(Long startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * The timestamp when the event was raised, in UTC milliseconds.
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1564039524182", value = "The timestamp when the event was raised, in UTC milliseconds.")
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getStartTime() {
    return startTime;
  }


  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartTime(Long startTime) {
    this.startTime = startTime;
  }


  public Event endTime(Long endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * The timestamp when the event was closed, in UTC milliseconds.    Has the value of &#x60;null&#x60; if the event is still active.
   * @return endTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1564039524182", value = "The timestamp when the event was closed, in UTC milliseconds.    Has the value of `null` if the event is still active.")
  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getEndTime() {
    return endTime;
  }


  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndTime(Long endTime) {
    this.endTime = endTime;
  }


  public Event title(String title) {
    this.title = title;
    return this;
  }

   /**
   * The title of the event.
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "High CPU load on host X", value = "The title of the event.")
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }


  public Event correlationId(String correlationId) {
    this.correlationId = correlationId;
    return this;
  }

   /**
   * The correlation ID of the event. 
   * @return correlationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "933613657e1c8fcf", value = "The correlation ID of the event. ")
  @JsonProperty(JSON_PROPERTY_CORRELATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCorrelationId() {
    return correlationId;
  }


  @JsonProperty(JSON_PROPERTY_CORRELATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCorrelationId(String correlationId) {
    this.correlationId = correlationId;
  }


  /**
   * Return true if this Event object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Event event = (Event) o;
    return Objects.equals(this.suppressAlert, event.suppressAlert) &&
        Objects.equals(this.underMaintenance, event.underMaintenance) &&
        Objects.equals(this.suppressProblem, event.suppressProblem) &&
        Objects.equals(this.frequentEvent, event.frequentEvent) &&
        Objects.equals(this.managementZones, event.managementZones) &&
        Objects.equals(this.entityId, event.entityId) &&
        Objects.equals(this.eventId, event.eventId) &&
        Objects.equals(this.entityTags, event.entityTags) &&
        Objects.equals(this.eventType, event.eventType) &&
        Objects.equals(this.properties, event.properties) &&
        Objects.equals(this.status, event.status) &&
        Objects.equals(this.startTime, event.startTime) &&
        Objects.equals(this.endTime, event.endTime) &&
        Objects.equals(this.title, event.title) &&
        Objects.equals(this.correlationId, event.correlationId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(suppressAlert, underMaintenance, suppressProblem, frequentEvent, managementZones, entityId, eventId, entityTags, eventType, properties, status, startTime, endTime, title, correlationId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Event {\n");
    sb.append("    suppressAlert: ").append(toIndentedString(suppressAlert)).append("\n");
    sb.append("    underMaintenance: ").append(toIndentedString(underMaintenance)).append("\n");
    sb.append("    suppressProblem: ").append(toIndentedString(suppressProblem)).append("\n");
    sb.append("    frequentEvent: ").append(toIndentedString(frequentEvent)).append("\n");
    sb.append("    managementZones: ").append(toIndentedString(managementZones)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    eventId: ").append(toIndentedString(eventId)).append("\n");
    sb.append("    entityTags: ").append(toIndentedString(entityTags)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    correlationId: ").append(toIndentedString(correlationId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

