/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv2.model.EntityIcon;
import com.dynatrace.apis.envv2.model.EntityId;
import com.dynatrace.apis.envv2.model.METag;
import com.dynatrace.apis.envv2.model.ManagementZone;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The properties of a monitored entity.
 */
@ApiModel(description = "The properties of a monitored entity.")
@JsonPropertyOrder({
  Entity.JSON_PROPERTY_FIRST_SEEN_TMS,
  Entity.JSON_PROPERTY_LAST_SEEN_TMS,
  Entity.JSON_PROPERTY_TAGS,
  Entity.JSON_PROPERTY_MANAGEMENT_ZONES,
  Entity.JSON_PROPERTY_ENTITY_ID,
  Entity.JSON_PROPERTY_FROM_RELATIONSHIPS,
  Entity.JSON_PROPERTY_TO_RELATIONSHIPS,
  Entity.JSON_PROPERTY_DISPLAY_NAME,
  Entity.JSON_PROPERTY_ICON,
  Entity.JSON_PROPERTY_PROPERTIES,
  Entity.JSON_PROPERTY_TYPE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class Entity {
  public static final String JSON_PROPERTY_FIRST_SEEN_TMS = "firstSeenTms";
  private Long firstSeenTms;

  public static final String JSON_PROPERTY_LAST_SEEN_TMS = "lastSeenTms";
  private Long lastSeenTms;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private Set<METag> tags = null;

  public static final String JSON_PROPERTY_MANAGEMENT_ZONES = "managementZones";
  private Set<ManagementZone> managementZones = null;

  public static final String JSON_PROPERTY_ENTITY_ID = "entityId";
  private String entityId;

  public static final String JSON_PROPERTY_FROM_RELATIONSHIPS = "fromRelationships";
  private Map<String, List<EntityId>> fromRelationships = null;

  public static final String JSON_PROPERTY_TO_RELATIONSHIPS = "toRelationships";
  private Map<String, List<EntityId>> toRelationships = null;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_ICON = "icon";
  private EntityIcon icon;

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  private Map<String, Object> properties = null;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public Entity() { 
  }

  public Entity firstSeenTms(Long firstSeenTms) {
    this.firstSeenTms = firstSeenTms;
    return this;
  }

   /**
   * The timestamp at which the entity was first seen, in UTC milliseconds.
   * @return firstSeenTms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp at which the entity was first seen, in UTC milliseconds.")
  @JsonProperty(JSON_PROPERTY_FIRST_SEEN_TMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getFirstSeenTms() {
    return firstSeenTms;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_SEEN_TMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstSeenTms(Long firstSeenTms) {
    this.firstSeenTms = firstSeenTms;
  }


  public Entity lastSeenTms(Long lastSeenTms) {
    this.lastSeenTms = lastSeenTms;
    return this;
  }

   /**
   * The timestamp at which the entity was last seen, in UTC milliseconds.
   * @return lastSeenTms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp at which the entity was last seen, in UTC milliseconds.")
  @JsonProperty(JSON_PROPERTY_LAST_SEEN_TMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getLastSeenTms() {
    return lastSeenTms;
  }


  @JsonProperty(JSON_PROPERTY_LAST_SEEN_TMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastSeenTms(Long lastSeenTms) {
    this.lastSeenTms = lastSeenTms;
  }


  public Entity tags(Set<METag> tags) {
    this.tags = tags;
    return this;
  }

  public Entity addTagsItem(METag tagsItem) {
    if (this.tags == null) {
      this.tags = new LinkedHashSet<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * A set of tags assigned to the entity.
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A set of tags assigned to the entity.")
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<METag> getTags() {
    return tags;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(Set<METag> tags) {
    this.tags = tags;
  }


  public Entity managementZones(Set<ManagementZone> managementZones) {
    this.managementZones = managementZones;
    return this;
  }

  public Entity addManagementZonesItem(ManagementZone managementZonesItem) {
    if (this.managementZones == null) {
      this.managementZones = new LinkedHashSet<>();
    }
    this.managementZones.add(managementZonesItem);
    return this;
  }

   /**
   * A set of management zones to which the entity belongs.
   * @return managementZones
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A set of management zones to which the entity belongs.")
  @JsonProperty(JSON_PROPERTY_MANAGEMENT_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<ManagementZone> getManagementZones() {
    return managementZones;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_MANAGEMENT_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManagementZones(Set<ManagementZone> managementZones) {
    this.managementZones = managementZones;
  }


  public Entity entityId(String entityId) {
    this.entityId = entityId;
    return this;
  }

   /**
   * The ID of the entity.
   * @return entityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the entity.")
  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEntityId() {
    return entityId;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }


  public Entity fromRelationships(Map<String, List<EntityId>> fromRelationships) {
    this.fromRelationships = fromRelationships;
    return this;
  }

  public Entity putFromRelationshipsItem(String key, List<EntityId> fromRelationshipsItem) {
    if (this.fromRelationships == null) {
      this.fromRelationships = new HashMap<>();
    }
    this.fromRelationships.put(key, fromRelationshipsItem);
    return this;
  }

   /**
   * A list of relationships where the entity occupies the FROM position.
   * @return fromRelationships
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of relationships where the entity occupies the FROM position.")
  @JsonProperty(JSON_PROPERTY_FROM_RELATIONSHIPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, List<EntityId>> getFromRelationships() {
    return fromRelationships;
  }


  @JsonProperty(JSON_PROPERTY_FROM_RELATIONSHIPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFromRelationships(Map<String, List<EntityId>> fromRelationships) {
    this.fromRelationships = fromRelationships;
  }


  public Entity toRelationships(Map<String, List<EntityId>> toRelationships) {
    this.toRelationships = toRelationships;
    return this;
  }

  public Entity putToRelationshipsItem(String key, List<EntityId> toRelationshipsItem) {
    if (this.toRelationships == null) {
      this.toRelationships = new HashMap<>();
    }
    this.toRelationships.put(key, toRelationshipsItem);
    return this;
  }

   /**
   * A list of relationships where the entity occupies the TO position.
   * @return toRelationships
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of relationships where the entity occupies the TO position.")
  @JsonProperty(JSON_PROPERTY_TO_RELATIONSHIPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, List<EntityId>> getToRelationships() {
    return toRelationships;
  }


  @JsonProperty(JSON_PROPERTY_TO_RELATIONSHIPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToRelationships(Map<String, List<EntityId>> toRelationships) {
    this.toRelationships = toRelationships;
  }


  public Entity displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * The name of the entity, displayed in the UI.
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the entity, displayed in the UI.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public Entity icon(EntityIcon icon) {
    this.icon = icon;
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityIcon getIcon() {
    return icon;
  }


  @JsonProperty(JSON_PROPERTY_ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIcon(EntityIcon icon) {
    this.icon = icon;
  }


  public Entity properties(Map<String, Object> properties) {
    this.properties = properties;
    return this;
  }

  public Entity putPropertiesItem(String key, Object propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * A list of additional properties of the entity.
   * @return properties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of additional properties of the entity.")
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getProperties() {
    return properties;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperties(Map<String, Object> properties) {
    this.properties = properties;
  }


  public Entity type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The type of the entity.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of the entity.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  /**
   * Return true if this Entity object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Entity entity = (Entity) o;
    return Objects.equals(this.firstSeenTms, entity.firstSeenTms) &&
        Objects.equals(this.lastSeenTms, entity.lastSeenTms) &&
        Objects.equals(this.tags, entity.tags) &&
        Objects.equals(this.managementZones, entity.managementZones) &&
        Objects.equals(this.entityId, entity.entityId) &&
        Objects.equals(this.fromRelationships, entity.fromRelationships) &&
        Objects.equals(this.toRelationships, entity.toRelationships) &&
        Objects.equals(this.displayName, entity.displayName) &&
        Objects.equals(this.icon, entity.icon) &&
        Objects.equals(this.properties, entity.properties) &&
        Objects.equals(this.type, entity.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstSeenTms, lastSeenTms, tags, managementZones, entityId, fromRelationships, toRelationships, displayName, icon, properties, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Entity {\n");
    sb.append("    firstSeenTms: ").append(toIndentedString(firstSeenTms)).append("\n");
    sb.append("    lastSeenTms: ").append(toIndentedString(lastSeenTms)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    managementZones: ").append(toIndentedString(managementZones)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    fromRelationships: ").append(toIndentedString(fromRelationships)).append("\n");
    sb.append("    toRelationships: ").append(toIndentedString(toRelationships)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

