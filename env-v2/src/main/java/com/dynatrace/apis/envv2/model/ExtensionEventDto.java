/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * A list of extension events.
 */
@ApiModel(description = "A list of extension events.")
@JsonPropertyOrder({
  ExtensionEventDto.JSON_PROPERTY_TIMESTAMP,
  ExtensionEventDto.JSON_PROPERTY_SEVERITY,
  ExtensionEventDto.JSON_PROPERTY_CONTENT,
  ExtensionEventDto.JSON_PROPERTY_DT_ENTITY_HOST,
  ExtensionEventDto.JSON_PROPERTY_DT_ACTIVE_GATE_ID,
  ExtensionEventDto.JSON_PROPERTY_DT_EXTENSION_DS,
  ExtensionEventDto.JSON_PROPERTY_STATUS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:06.080821500+01:00[Europe/Brussels]")
public class ExtensionEventDto {
  public static final String JSON_PROPERTY_TIMESTAMP = "timestamp";
  private String timestamp;

  public static final String JSON_PROPERTY_SEVERITY = "severity";
  private String severity;

  public static final String JSON_PROPERTY_CONTENT = "content";
  private String content;

  public static final String JSON_PROPERTY_DT_ENTITY_HOST = "dt.entity.host";
  private String dtEntityHost;

  public static final String JSON_PROPERTY_DT_ACTIVE_GATE_ID = "dt.active_gate.id";
  private String dtActiveGateId;

  public static final String JSON_PROPERTY_DT_EXTENSION_DS = "dt.extension.ds";
  private String dtExtensionDs;

  /**
   * Status of the event
   */
  public enum StatusEnum {
    ERROR("ERROR"),
    
    INFO("INFO"),
    
    NONE("NONE"),
    
    WARN("WARN");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public ExtensionEventDto() { 
  }

  public ExtensionEventDto timestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Timestamp of the event
   * @return timestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Timestamp of the event")
  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTimestamp() {
    return timestamp;
  }


  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }


  public ExtensionEventDto severity(String severity) {
    this.severity = severity;
    return this;
  }

   /**
   * Severity of the event
   * @return severity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Severity of the event")
  @JsonProperty(JSON_PROPERTY_SEVERITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSeverity() {
    return severity;
  }


  @JsonProperty(JSON_PROPERTY_SEVERITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSeverity(String severity) {
    this.severity = severity;
  }


  public ExtensionEventDto content(String content) {
    this.content = content;
    return this;
  }

   /**
   * Content of the event
   * @return content
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Content of the event")
  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContent() {
    return content;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContent(String content) {
    this.content = content;
  }


  public ExtensionEventDto dtEntityHost(String dtEntityHost) {
    this.dtEntityHost = dtEntityHost;
    return this;
  }

   /**
   * Host that uses this monitoring configuration.  Example: &#x60;HOST-ABCDEF0123456789&#x60;
   * @return dtEntityHost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Host that uses this monitoring configuration.  Example: `HOST-ABCDEF0123456789`")
  @JsonProperty(JSON_PROPERTY_DT_ENTITY_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDtEntityHost() {
    return dtEntityHost;
  }


  @JsonProperty(JSON_PROPERTY_DT_ENTITY_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDtEntityHost(String dtEntityHost) {
    this.dtEntityHost = dtEntityHost;
  }


  public ExtensionEventDto dtActiveGateId(String dtActiveGateId) {
    this.dtActiveGateId = dtActiveGateId;
    return this;
  }

   /**
   * Hexadecimal ID of Active Gate that uses this monitoring configuration.  Example: &#x60;0x1a2b3c4d&#x60;
   * @return dtActiveGateId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Hexadecimal ID of Active Gate that uses this monitoring configuration.  Example: `0x1a2b3c4d`")
  @JsonProperty(JSON_PROPERTY_DT_ACTIVE_GATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDtActiveGateId() {
    return dtActiveGateId;
  }


  @JsonProperty(JSON_PROPERTY_DT_ACTIVE_GATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDtActiveGateId(String dtActiveGateId) {
    this.dtActiveGateId = dtActiveGateId;
  }


  public ExtensionEventDto dtExtensionDs(String dtExtensionDs) {
    this.dtExtensionDs = dtExtensionDs;
    return this;
  }

   /**
   * Data source that uses this monitoring configuration.  Example: &#x60;snmp&#x60;
   * @return dtExtensionDs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Data source that uses this monitoring configuration.  Example: `snmp`")
  @JsonProperty(JSON_PROPERTY_DT_EXTENSION_DS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDtExtensionDs() {
    return dtExtensionDs;
  }


  @JsonProperty(JSON_PROPERTY_DT_EXTENSION_DS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDtExtensionDs(String dtExtensionDs) {
    this.dtExtensionDs = dtExtensionDs;
  }


  public ExtensionEventDto status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Status of the event
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Status of the event")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  /**
   * Return true if this ExtensionEventDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExtensionEventDto extensionEventDto = (ExtensionEventDto) o;
    return Objects.equals(this.timestamp, extensionEventDto.timestamp) &&
        Objects.equals(this.severity, extensionEventDto.severity) &&
        Objects.equals(this.content, extensionEventDto.content) &&
        Objects.equals(this.dtEntityHost, extensionEventDto.dtEntityHost) &&
        Objects.equals(this.dtActiveGateId, extensionEventDto.dtActiveGateId) &&
        Objects.equals(this.dtExtensionDs, extensionEventDto.dtExtensionDs) &&
        Objects.equals(this.status, extensionEventDto.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timestamp, severity, content, dtEntityHost, dtActiveGateId, dtExtensionDs, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExtensionEventDto {\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    dtEntityHost: ").append(toIndentedString(dtEntityHost)).append("\n");
    sb.append("    dtActiveGateId: ").append(toIndentedString(dtActiveGateId)).append("\n");
    sb.append("    dtExtensionDs: ").append(toIndentedString(dtExtensionDs)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

