/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for DavisSecurityAdvice
 */
public class DavisSecurityAdviceTest {
    private final DavisSecurityAdvice model = new DavisSecurityAdvice();

    /**
     * Model tests for DavisSecurityAdvice
     */
    @Test
    public void testDavisSecurityAdvice() {
        // TODO: test DavisSecurityAdvice
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'vulnerableComponent'
     */
    @Test
    public void vulnerableComponentTest() {
        // TODO: test vulnerableComponent
    }

    /**
     * Test the property 'technology'
     */
    @Test
    public void technologyTest() {
        // TODO: test technology
    }

    /**
     * Test the property 'adviceType'
     */
    @Test
    public void adviceTypeTest() {
        // TODO: test adviceType
    }

    /**
     * Test the property 'critical'
     */
    @Test
    public void criticalTest() {
        // TODO: test critical
    }

    /**
     * Test the property 'high'
     */
    @Test
    public void highTest() {
        // TODO: test high
    }

    /**
     * Test the property 'medium'
     */
    @Test
    public void mediumTest() {
        // TODO: test medium
    }

    /**
     * Test the property 'low'
     */
    @Test
    public void lowTest() {
        // TODO: test low
    }

    /**
     * Test the property 'none'
     */
    @Test
    public void noneTest() {
        // TODO: test none
    }

}
