/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ExecutionSimpleResults
 */
public class ExecutionSimpleResultsTest {
    private final ExecutionSimpleResults model = new ExecutionSimpleResults();

    /**
     * Model tests for ExecutionSimpleResults
     */
    @Test
    public void testExecutionSimpleResults() {
        // TODO: test ExecutionSimpleResults
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'failureMessage'
     */
    @Test
    public void failureMessageTest() {
        // TODO: test failureMessage
    }

    /**
     * Test the property 'errorCode'
     */
    @Test
    public void errorCodeTest() {
        // TODO: test errorCode
    }

    /**
     * Test the property 'responseStatusCode'
     */
    @Test
    public void responseStatusCodeTest() {
        // TODO: test responseStatusCode
    }

    /**
     * Test the property 'executedSteps'
     */
    @Test
    public void executedStepsTest() {
        // TODO: test executedSteps
    }

    /**
     * Test the property 'engineId'
     */
    @Test
    public void engineIdTest() {
        // TODO: test engineId
    }

    /**
     * Test the property 'publicLocation'
     */
    @Test
    public void publicLocationTest() {
        // TODO: test publicLocation
    }

    /**
     * Test the property 'responseSize'
     */
    @Test
    public void responseSizeTest() {
        // TODO: test responseSize
    }

    /**
     * Test the property 'responseBodySizeLimitExceeded'
     */
    @Test
    public void responseBodySizeLimitExceededTest() {
        // TODO: test responseBodySizeLimitExceeded
    }

    /**
     * Test the property 'peerCertificateExpiryDate'
     */
    @Test
    public void peerCertificateExpiryDateTest() {
        // TODO: test peerCertificateExpiryDate
    }

    /**
     * Test the property 'totalTime'
     */
    @Test
    public void totalTimeTest() {
        // TODO: test totalTime
    }

    /**
     * Test the property 'hostNameResolutionTime'
     */
    @Test
    public void hostNameResolutionTimeTest() {
        // TODO: test hostNameResolutionTime
    }

    /**
     * Test the property 'tcpConnectTime'
     */
    @Test
    public void tcpConnectTimeTest() {
        // TODO: test tcpConnectTime
    }

    /**
     * Test the property 'tlsHandshakeTime'
     */
    @Test
    public void tlsHandshakeTimeTest() {
        // TODO: test tlsHandshakeTime
    }

    /**
     * Test the property 'timeToFirstByte'
     */
    @Test
    public void timeToFirstByteTest() {
        // TODO: test timeToFirstByte
    }

    /**
     * Test the property 'redirectionTime'
     */
    @Test
    public void redirectionTimeTest() {
        // TODO: test redirectionTime
    }

    /**
     * Test the property 'redirectsCount'
     */
    @Test
    public void redirectsCountTest() {
        // TODO: test redirectsCount
    }

    /**
     * Test the property 'httperror'
     */
    @Test
    public void httperrorTest() {
        // TODO: test httperror
    }

    /**
     * Test the property 'chromeError'
     */
    @Test
    public void chromeErrorTest() {
        // TODO: test chromeError
    }

    /**
     * Test the property 'startTimestamp'
     */
    @Test
    public void startTimestampTest() {
        // TODO: test startTimestamp
    }

}
