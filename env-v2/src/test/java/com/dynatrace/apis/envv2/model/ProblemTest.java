/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import com.dynatrace.apis.envv2.model.AlertingProfileStub;
import com.dynatrace.apis.envv2.model.CommentsList;
import com.dynatrace.apis.envv2.model.EntityStub;
import com.dynatrace.apis.envv2.model.EvidenceDetails;
import com.dynatrace.apis.envv2.model.ImpactAnalysis;
import com.dynatrace.apis.envv2.model.LinkedProblem;
import com.dynatrace.apis.envv2.model.METag;
import com.dynatrace.apis.envv2.model.ManagementZone;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.LinkedHashSet;
import java.util.Set;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Problem
 */
public class ProblemTest {
    private final Problem model = new Problem();

    /**
     * Model tests for Problem
     */
    @Test
    public void testProblem() {
        // TODO: test Problem
    }

    /**
     * Test the property 'affectedEntities'
     */
    @Test
    public void affectedEntitiesTest() {
        // TODO: test affectedEntities
    }

    /**
     * Test the property 'evidenceDetails'
     */
    @Test
    public void evidenceDetailsTest() {
        // TODO: test evidenceDetails
    }

    /**
     * Test the property 'recentComments'
     */
    @Test
    public void recentCommentsTest() {
        // TODO: test recentComments
    }

    /**
     * Test the property 'impactAnalysis'
     */
    @Test
    public void impactAnalysisTest() {
        // TODO: test impactAnalysis
    }

    /**
     * Test the property 'linkedProblemInfo'
     */
    @Test
    public void linkedProblemInfoTest() {
        // TODO: test linkedProblemInfo
    }

    /**
     * Test the property 'rootCauseEntity'
     */
    @Test
    public void rootCauseEntityTest() {
        // TODO: test rootCauseEntity
    }

    /**
     * Test the property 'impactedEntities'
     */
    @Test
    public void impactedEntitiesTest() {
        // TODO: test impactedEntities
    }

    /**
     * Test the property 'problemFilters'
     */
    @Test
    public void problemFiltersTest() {
        // TODO: test problemFilters
    }

    /**
     * Test the property 'displayId'
     */
    @Test
    public void displayIdTest() {
        // TODO: test displayId
    }

    /**
     * Test the property 'managementZones'
     */
    @Test
    public void managementZonesTest() {
        // TODO: test managementZones
    }

    /**
     * Test the property 'impactLevel'
     */
    @Test
    public void impactLevelTest() {
        // TODO: test impactLevel
    }

    /**
     * Test the property 'severityLevel'
     */
    @Test
    public void severityLevelTest() {
        // TODO: test severityLevel
    }

    /**
     * Test the property 'entityTags'
     */
    @Test
    public void entityTagsTest() {
        // TODO: test entityTags
    }

    /**
     * Test the property 'problemId'
     */
    @Test
    public void problemIdTest() {
        // TODO: test problemId
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    public void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'endTime'
     */
    @Test
    public void endTimeTest() {
        // TODO: test endTime
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

}
