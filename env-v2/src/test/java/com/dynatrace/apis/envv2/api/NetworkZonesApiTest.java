/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.api;

import com.dynatrace.apis.envv2.ApiException;
import com.dynatrace.apis.envv2.model.EntityShortRepresentation;
import com.dynatrace.apis.envv2.model.ErrorEnvelope;
import com.dynatrace.apis.envv2.model.NetworkZone;
import com.dynatrace.apis.envv2.model.NetworkZoneConnectionStatistics;
import com.dynatrace.apis.envv2.model.NetworkZoneList;
import com.dynatrace.apis.envv2.model.NetworkZoneSettings;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for NetworkZonesApi
 */
@Ignore
public class NetworkZonesApiTest {

    private final NetworkZonesApi api = new NetworkZonesApi();

    
    /**
     * Updates an existing network zone or creates a new one
     *
     * If the network zone with the specified ID does not exist, a new network zone is created.    The ID is not case sensitive. Dynatrace stores the ID in lowercase.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createOrUpdateNetworkZoneTest() throws ApiException {
        String id = null;
        NetworkZone networkZone = null;
        EntityShortRepresentation response = 
        api.createOrUpdateNetworkZone(id, networkZone);
        
        // TODO: test validations
    }
    
    /**
     * Deletes the specified network zone
     *
     * You can only delete an empty network zone (a zone that no ActiveGate or OneAgent is using).    If the network zone is used as an alternative zone for any OneAgent, it will be automatically removed from the list of possible alternatives.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteNetworkZoneTest() throws ApiException {
        String id = null;
        
        api.deleteNetworkZone(id);
        
        // TODO: test validations
    }
    
    /**
     * Lists all existing network zones
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllNetworkZonesTest() throws ApiException {
        NetworkZoneList response = 
        api.getAllNetworkZones();
        
        // TODO: test validations
    }
    
    /**
     * Gets the statistics about hosts using the network zone
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getHostStatsTest() throws ApiException {
        String id = null;
        String filter = null;
        NetworkZoneConnectionStatistics response = 
        api.getHostStats(id, filter);
        
        // TODO: test validations
    }
    
    /**
     * Gets the global configuration of network zones
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getNetworkZoneSettingsTest() throws ApiException {
        NetworkZoneSettings response = 
        api.getNetworkZoneSettings();
        
        // TODO: test validations
    }
    
    /**
     * Gets parameters of the specified network zone
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSingleNetworkZoneTest() throws ApiException {
        String id = null;
        NetworkZone response = 
        api.getSingleNetworkZone(id);
        
        // TODO: test validations
    }
    
    /**
     * Updates the global configuration of network zones
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateNetworkZoneSettingsTest() throws ApiException {
        NetworkZoneSettings networkZoneSettings = null;
        
        api.updateNetworkZoneSettings(networkZoneSettings);
        
        // TODO: test validations
    }
    
}
