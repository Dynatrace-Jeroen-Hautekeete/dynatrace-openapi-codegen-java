/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import com.dynatrace.apis.envv2.model.MetricDefaultAggregation;
import com.dynatrace.apis.envv2.model.MetricDimensionCardinality;
import com.dynatrace.apis.envv2.model.MetricDimensionDefinition;
import com.dynatrace.apis.envv2.model.MetricValueType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for MetricDescriptor
 */
public class MetricDescriptorTest {
    private final MetricDescriptor model = new MetricDescriptor();

    /**
     * Model tests for MetricDescriptor
     */
    @Test
    public void testMetricDescriptor() {
        // TODO: test MetricDescriptor
    }

    /**
     * Test the property 'defaultAggregation'
     */
    @Test
    public void defaultAggregationTest() {
        // TODO: test defaultAggregation
    }

    /**
     * Test the property 'dimensionDefinitions'
     */
    @Test
    public void dimensionDefinitionsTest() {
        // TODO: test dimensionDefinitions
    }

    /**
     * Test the property 'rootCauseRelevant'
     */
    @Test
    public void rootCauseRelevantTest() {
        // TODO: test rootCauseRelevant
    }

    /**
     * Test the property 'unitDisplayFormat'
     */
    @Test
    public void unitDisplayFormatTest() {
        // TODO: test unitDisplayFormat
    }

    /**
     * Test the property 'dduBillable'
     */
    @Test
    public void dduBillableTest() {
        // TODO: test dduBillable
    }

    /**
     * Test the property 'lastWritten'
     */
    @Test
    public void lastWrittenTest() {
        // TODO: test lastWritten
    }

    /**
     * Test the property 'impactRelevant'
     */
    @Test
    public void impactRelevantTest() {
        // TODO: test impactRelevant
    }

    /**
     * Test the property 'minimumValue'
     */
    @Test
    public void minimumValueTest() {
        // TODO: test minimumValue
    }

    /**
     * Test the property 'maximumValue'
     */
    @Test
    public void maximumValueTest() {
        // TODO: test maximumValue
    }

    /**
     * Test the property 'latency'
     */
    @Test
    public void latencyTest() {
        // TODO: test latency
    }

    /**
     * Test the property 'resolutionInfSupported'
     */
    @Test
    public void resolutionInfSupportedTest() {
        // TODO: test resolutionInfSupported
    }

    /**
     * Test the property 'dimensionCardinalities'
     */
    @Test
    public void dimensionCardinalitiesTest() {
        // TODO: test dimensionCardinalities
    }

    /**
     * Test the property 'metricValueType'
     */
    @Test
    public void metricValueTypeTest() {
        // TODO: test metricValueType
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'entityType'
     */
    @Test
    public void entityTypeTest() {
        // TODO: test entityType
    }

    /**
     * Test the property 'metricId'
     */
    @Test
    public void metricIdTest() {
        // TODO: test metricId
    }

    /**
     * Test the property 'metricSelector'
     */
    @Test
    public void metricSelectorTest() {
        // TODO: test metricSelector
    }

    /**
     * Test the property 'scalar'
     */
    @Test
    public void scalarTest() {
        // TODO: test scalar
    }

    /**
     * Test the property 'aggregationTypes'
     */
    @Test
    public void aggregationTypesTest() {
        // TODO: test aggregationTypes
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'created'
     */
    @Test
    public void createdTest() {
        // TODO: test created
    }

    /**
     * Test the property 'transformations'
     */
    @Test
    public void transformationsTest() {
        // TODO: test transformations
    }

    /**
     * Test the property 'unit'
     */
    @Test
    public void unitTest() {
        // TODO: test unit
    }

    /**
     * Test the property 'warnings'
     */
    @Test
    public void warningsTest() {
        // TODO: test warnings
    }

}
