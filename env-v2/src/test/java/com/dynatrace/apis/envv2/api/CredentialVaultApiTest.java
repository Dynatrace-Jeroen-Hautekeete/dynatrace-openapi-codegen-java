/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.api;

import com.dynatrace.apis.envv2.ApiException;
import com.dynatrace.apis.envv2.model.AbstractCredentialsResponseElement;
import com.dynatrace.apis.envv2.model.Credentials;
import com.dynatrace.apis.envv2.model.CredentialsList;
import com.dynatrace.apis.envv2.model.CredentialsResponseElement;
import com.dynatrace.apis.envv2.model.ErrorEnvelope;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for CredentialVaultApi
 */
@Ignore
public class CredentialVaultApiTest {

    private final CredentialVaultApi api = new CredentialVaultApi();

    
    /**
     * Creates a new credentials set
     *
     * The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCredentialsTest() throws ApiException {
        Credentials credentials = null;
        CredentialsResponseElement response = 
        api.createCredentials(credentials);
        
        // TODO: test validations
    }
    
    /**
     * Gets the metadata of the specified credentials set
     *
     * The credentials set itself (e.g. username/certificate and password) is not included in the response.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCredentialsTest() throws ApiException {
        String id = null;
        CredentialsResponseElement response = 
        api.getCredentials(id);
        
        // TODO: test validations
    }
    
    /**
     * Gets the details of the specified credentials set
     *
     * The credentials set including username/certificate, password or token is included in the response.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCredentialsDetailsTest() throws ApiException {
        String id = null;
        AbstractCredentialsResponseElement response = 
        api.getCredentialsDetails(id);
        
        // TODO: test validations
    }
    
    /**
     * Lists all sets of credentials for synthetic monitors stored in your environment
     *
     * The credentials set itself (username/certificate and password) is not included in the response.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listCredentialsTest() throws ApiException {
        String type = null;
        String name = null;
        String user = null;
        String nextPageKey = null;
        Long pageSize = null;
        CredentialsList response = 
        api.listCredentials(type, name, user, nextPageKey, pageSize);
        
        // TODO: test validations
    }
    
    /**
     * Deletes the specified credentials set
     *
     * Provide credential ID in the path.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeCredentialsTest() throws ApiException {
        String id = null;
        
        api.removeCredentials(id);
        
        // TODO: test validations
    }
    
    /**
     * Updates the specified credentials set
     *
     * The body must not provide an ID. The ID should be provided in the path
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCredentialsTest() throws ApiException {
        String id = null;
        Credentials credentials = null;
        CredentialsResponseElement response = 
        api.updateCredentials(id, credentials);
        
        // TODO: test validations
    }
    
}
