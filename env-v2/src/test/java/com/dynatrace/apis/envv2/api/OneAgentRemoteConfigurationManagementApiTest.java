/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.api;

import com.dynatrace.apis.envv2.ApiException;
import com.dynatrace.apis.envv2.model.ErrorEnvelope;
import com.dynatrace.apis.envv2.model.RemoteConfigurationManagementJob;
import com.dynatrace.apis.envv2.model.RemoteConfigurationManagementJobList;
import com.dynatrace.apis.envv2.model.RemoteConfigurationManagementOperationOneAgentRequest;
import com.dynatrace.apis.envv2.model.RemoteConfigurationManagementPreviewList;
import com.dynatrace.apis.envv2.model.RemoteConfigurationManagementValidationResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for OneAgentRemoteConfigurationManagementApi
 */
@Ignore
public class OneAgentRemoteConfigurationManagementApiTest {

    private final OneAgentRemoteConfigurationManagementApi api = new OneAgentRemoteConfigurationManagementApi();

    
    /**
     * Creates a new remote configuration management job
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createRemoteIdentityOperationJob1Test() throws ApiException {
        RemoteConfigurationManagementOperationOneAgentRequest remoteConfigurationManagementOperationOneAgentRequest = null;
        Boolean restart = null;
        RemoteConfigurationManagementJob response = 
        api.createRemoteIdentityOperationJob1(remoteConfigurationManagementOperationOneAgentRequest, restart);
        
        // TODO: test validations
    }
    
    /**
     * Creates a preview for remote configuration management job
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createRemoteIdentityOperationPreview1Test() throws ApiException {
        RemoteConfigurationManagementOperationOneAgentRequest remoteConfigurationManagementOperationOneAgentRequest = null;
        RemoteConfigurationManagementPreviewList response = 
        api.createRemoteIdentityOperationPreview1(remoteConfigurationManagementOperationOneAgentRequest);
        
        // TODO: test validations
    }
    
    /**
     * Gets remote configuration management job that is currently running
     *
     * The currently running remote configuration management job may be related to ActiveGates or OneAgents. There is a limit of one concurrent remote configuration management job, regardless of the entity type.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCurrentRemoteIdentityOperationJob1Test() throws ApiException {
        RemoteConfigurationManagementJob response = 
        api.getCurrentRemoteIdentityOperationJob1();
        
        // TODO: test validations
    }
    
    /**
     * Gets the specified remote configuration management job
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRemoteIdentityOperationJob1Test() throws ApiException {
        String id = null;
        RemoteConfigurationManagementJob response = 
        api.getRemoteIdentityOperationJob1(id);
        
        // TODO: test validations
    }
    
    /**
     * Lists finished OneAgent remote configuration management jobs
     *
     * The response includes finished jobs for the last 7 days.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRemoteIdentityOperations1Test() throws ApiException {
        String from = null;
        String to = null;
        RemoteConfigurationManagementJobList response = 
        api.getRemoteIdentityOperations1(from, to);
        
        // TODO: test validations
    }
    
    /**
     * Validates the payload for the &#x60;POST /oneagents/remoteConfigurationManagement&#x60; request.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateRemoteIdentityOperation1Test() throws ApiException {
        RemoteConfigurationManagementOperationOneAgentRequest remoteConfigurationManagementOperationOneAgentRequest = null;
        
        api.validateRemoteIdentityOperation1(remoteConfigurationManagementOperationOneAgentRequest);
        
        // TODO: test validations
    }
    
}
