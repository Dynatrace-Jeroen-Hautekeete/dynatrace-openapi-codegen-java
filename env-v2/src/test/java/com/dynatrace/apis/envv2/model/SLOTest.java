/*
 * Dynatrace Environment API
 *  Documentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress.   If you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv2.model;

import com.dynatrace.apis.envv2.model.SloBurnRate;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.LinkedHashSet;
import java.util.Set;
import java.util.UUID;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for SLO
 */
public class SLOTest {
    private final SLO model = new SLO();

    /**
     * Model tests for SLO
     */
    @Test
    public void testSLO() {
        // TODO: test SLO
    }

    /**
     * Test the property 'problemFilters'
     */
    @Test
    public void problemFiltersTest() {
        // TODO: test problemFilters
    }

    /**
     * Test the property 'metricExpression'
     */
    @Test
    public void metricExpressionTest() {
        // TODO: test metricExpression
    }

    /**
     * Test the property 'useRateMetric'
     */
    @Test
    public void useRateMetricTest() {
        // TODO: test useRateMetric
    }

    /**
     * Test the property 'metricRate'
     */
    @Test
    public void metricRateTest() {
        // TODO: test metricRate
    }

    /**
     * Test the property 'metricNumerator'
     */
    @Test
    public void metricNumeratorTest() {
        // TODO: test metricNumerator
    }

    /**
     * Test the property 'metricDenominator'
     */
    @Test
    public void metricDenominatorTest() {
        // TODO: test metricDenominator
    }

    /**
     * Test the property 'evaluationType'
     */
    @Test
    public void evaluationTypeTest() {
        // TODO: test evaluationType
    }

    /**
     * Test the property 'errorBudgetBurnRate'
     */
    @Test
    public void errorBudgetBurnRateTest() {
        // TODO: test errorBudgetBurnRate
    }

    /**
     * Test the property 'burnRateMetricKey'
     */
    @Test
    public void burnRateMetricKeyTest() {
        // TODO: test burnRateMetricKey
    }

    /**
     * Test the property 'errorBudgetMetricKey'
     */
    @Test
    public void errorBudgetMetricKeyTest() {
        // TODO: test errorBudgetMetricKey
    }

    /**
     * Test the property 'normalizedErrorBudgetMetricKey'
     */
    @Test
    public void normalizedErrorBudgetMetricKeyTest() {
        // TODO: test normalizedErrorBudgetMetricKey
    }

    /**
     * Test the property 'numeratorValue'
     */
    @Test
    public void numeratorValueTest() {
        // TODO: test numeratorValue
    }

    /**
     * Test the property 'denominatorValue'
     */
    @Test
    public void denominatorValueTest() {
        // TODO: test denominatorValue
    }

    /**
     * Test the property 'relatedOpenProblems'
     */
    @Test
    public void relatedOpenProblemsTest() {
        // TODO: test relatedOpenProblems
    }

    /**
     * Test the property 'relatedTotalProblems'
     */
    @Test
    public void relatedTotalProblemsTest() {
        // TODO: test relatedTotalProblems
    }

    /**
     * Test the property 'errorBudget'
     */
    @Test
    public void errorBudgetTest() {
        // TODO: test errorBudget
    }

    /**
     * Test the property 'evaluatedPercentage'
     */
    @Test
    public void evaluatedPercentageTest() {
        // TODO: test evaluatedPercentage
    }

    /**
     * Test the property 'timeframe'
     */
    @Test
    public void timeframeTest() {
        // TODO: test timeframe
    }

    /**
     * Test the property 'metricKey'
     */
    @Test
    public void metricKeyTest() {
        // TODO: test metricKey
    }

    /**
     * Test the property 'filter'
     */
    @Test
    public void filterTest() {
        // TODO: test filter
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'target'
     */
    @Test
    public void targetTest() {
        // TODO: test target
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'error'
     */
    @Test
    public void errorTest() {
        // TODO: test error
    }

    /**
     * Test the property 'warning'
     */
    @Test
    public void warningTest() {
        // TODO: test warning
    }

}
