/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv1.model.Model3rdPartySyntheticLocationTestResult;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.LinkedHashSet;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The results of third-party synthetic monitor execution.
 */
@ApiModel(description = "The results of third-party synthetic monitor execution.")
@JsonPropertyOrder({
  Model3rdPartySyntheticTestResult.JSON_PROPERTY_ID,
  Model3rdPartySyntheticTestResult.JSON_PROPERTY_TOTAL_STEP_COUNT,
  Model3rdPartySyntheticTestResult.JSON_PROPERTY_LOCATION_RESULTS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class Model3rdPartySyntheticTestResult {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_TOTAL_STEP_COUNT = "totalStepCount";
  private Integer totalStepCount;

  public static final String JSON_PROPERTY_LOCATION_RESULTS = "locationResults";
  private Set<Model3rdPartySyntheticLocationTestResult> locationResults = new LinkedHashSet<>();

  public Model3rdPartySyntheticTestResult() { 
  }

  public Model3rdPartySyntheticTestResult id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of the third-party synthetic monitor.
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The ID of the third-party synthetic monitor.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public Model3rdPartySyntheticTestResult totalStepCount(Integer totalStepCount) {
    this.totalStepCount = totalStepCount;
    return this;
  }

   /**
   * Number of steps in the monitor. Defaults to number of SyntheticTestSteps.
   * @return totalStepCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of steps in the monitor. Defaults to number of SyntheticTestSteps.")
  @JsonProperty(JSON_PROPERTY_TOTAL_STEP_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalStepCount() {
    return totalStepCount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_STEP_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalStepCount(Integer totalStepCount) {
    this.totalStepCount = totalStepCount;
  }


  public Model3rdPartySyntheticTestResult locationResults(Set<Model3rdPartySyntheticLocationTestResult> locationResults) {
    this.locationResults = locationResults;
    return this;
  }

  public Model3rdPartySyntheticTestResult addLocationResultsItem(Model3rdPartySyntheticLocationTestResult locationResultsItem) {
    this.locationResults.add(locationResultsItem);
    return this;
  }

   /**
   * Results of third-party monitor executions per location.
   * @return locationResults
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Results of third-party monitor executions per location.")
  @JsonProperty(JSON_PROPERTY_LOCATION_RESULTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<Model3rdPartySyntheticLocationTestResult> getLocationResults() {
    return locationResults;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_LOCATION_RESULTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocationResults(Set<Model3rdPartySyntheticLocationTestResult> locationResults) {
    this.locationResults = locationResults;
  }


  /**
   * Return true if this 3rdPartySyntheticTestResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Model3rdPartySyntheticTestResult _3rdPartySyntheticTestResult = (Model3rdPartySyntheticTestResult) o;
    return Objects.equals(this.id, _3rdPartySyntheticTestResult.id) &&
        Objects.equals(this.totalStepCount, _3rdPartySyntheticTestResult.totalStepCount) &&
        Objects.equals(this.locationResults, _3rdPartySyntheticTestResult.locationResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, totalStepCount, locationResults);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Model3rdPartySyntheticTestResult {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    totalStepCount: ").append(toIndentedString(totalStepCount)).append("\n");
    sb.append("    locationResults: ").append(toIndentedString(locationResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

