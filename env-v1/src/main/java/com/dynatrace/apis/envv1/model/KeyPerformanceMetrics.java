/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The key performance metrics configuration.
 */
@ApiModel(description = "The key performance metrics configuration.")
@JsonPropertyOrder({
  KeyPerformanceMetrics.JSON_PROPERTY_LOAD_ACTION_KPM,
  KeyPerformanceMetrics.JSON_PROPERTY_XHR_ACTION_KPM
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class KeyPerformanceMetrics {
  /**
   * Defines the key performance metric for load actions.
   */
  public enum LoadActionKpmEnum {
    VISUALLY_COMPLETE("VISUALLY_COMPLETE"),
    
    SPEED_INDEX("SPEED_INDEX"),
    
    USER_ACTION_DURATION("USER_ACTION_DURATION"),
    
    TIME_TO_FIRST_BYTE("TIME_TO_FIRST_BYTE"),
    
    HTML_DOWNLOADED("HTML_DOWNLOADED"),
    
    DOM_INTERACTIVE("DOM_INTERACTIVE"),
    
    LOAD_EVENT_START("LOAD_EVENT_START"),
    
    LOAD_EVENT_END("LOAD_EVENT_END");

    private String value;

    LoadActionKpmEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LoadActionKpmEnum fromValue(String value) {
      for (LoadActionKpmEnum b : LoadActionKpmEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LOAD_ACTION_KPM = "loadActionKpm";
  private LoadActionKpmEnum loadActionKpm;

  /**
   * Defines the key performance metric for XHR actions.
   */
  public enum XhrActionKpmEnum {
    VISUALLY_COMPLETE("VISUALLY_COMPLETE"),
    
    USER_ACTION_DURATION("USER_ACTION_DURATION"),
    
    TIME_TO_FIRST_BYTE("TIME_TO_FIRST_BYTE"),
    
    RESPONSE_END("RESPONSE_END");

    private String value;

    XhrActionKpmEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static XhrActionKpmEnum fromValue(String value) {
      for (XhrActionKpmEnum b : XhrActionKpmEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_XHR_ACTION_KPM = "xhrActionKpm";
  private XhrActionKpmEnum xhrActionKpm;

  public KeyPerformanceMetrics() { 
  }

  public KeyPerformanceMetrics loadActionKpm(LoadActionKpmEnum loadActionKpm) {
    this.loadActionKpm = loadActionKpm;
    return this;
  }

   /**
   * Defines the key performance metric for load actions.
   * @return loadActionKpm
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Defines the key performance metric for load actions.")
  @JsonProperty(JSON_PROPERTY_LOAD_ACTION_KPM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LoadActionKpmEnum getLoadActionKpm() {
    return loadActionKpm;
  }


  @JsonProperty(JSON_PROPERTY_LOAD_ACTION_KPM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLoadActionKpm(LoadActionKpmEnum loadActionKpm) {
    this.loadActionKpm = loadActionKpm;
  }


  public KeyPerformanceMetrics xhrActionKpm(XhrActionKpmEnum xhrActionKpm) {
    this.xhrActionKpm = xhrActionKpm;
    return this;
  }

   /**
   * Defines the key performance metric for XHR actions.
   * @return xhrActionKpm
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Defines the key performance metric for XHR actions.")
  @JsonProperty(JSON_PROPERTY_XHR_ACTION_KPM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public XhrActionKpmEnum getXhrActionKpm() {
    return xhrActionKpm;
  }


  @JsonProperty(JSON_PROPERTY_XHR_ACTION_KPM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setXhrActionKpm(XhrActionKpmEnum xhrActionKpm) {
    this.xhrActionKpm = xhrActionKpm;
  }


  /**
   * Return true if this KeyPerformanceMetrics object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KeyPerformanceMetrics keyPerformanceMetrics = (KeyPerformanceMetrics) o;
    return Objects.equals(this.loadActionKpm, keyPerformanceMetrics.loadActionKpm) &&
        Objects.equals(this.xhrActionKpm, keyPerformanceMetrics.xhrActionKpm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loadActionKpm, xhrActionKpm);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KeyPerformanceMetrics {\n");
    sb.append("    loadActionKpm: ").append(toIndentedString(loadActionKpm)).append("\n");
    sb.append("    xhrActionKpm: ").append(toIndentedString(xhrActionKpm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

