/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv1.model.MaintenanceWindowRecurrence;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * An object defining date, time, and recurrence of the maintenance window.
 */
@ApiModel(description = "An object defining date, time, and recurrence of the maintenance window.")
@JsonPropertyOrder({
  MaintenanceWindowSchedule.JSON_PROPERTY_TYPE,
  MaintenanceWindowSchedule.JSON_PROPERTY_TIMEZONE_ID,
  MaintenanceWindowSchedule.JSON_PROPERTY_MAINTENANCE_START,
  MaintenanceWindowSchedule.JSON_PROPERTY_MAINTENANCE_END,
  MaintenanceWindowSchedule.JSON_PROPERTY_RECURRENCE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class MaintenanceWindowSchedule {
  /**
   * Recurrence of the schedule.
   */
  public enum TypeEnum {
    DAY("Day"),
    
    MONTH("Month"),
    
    ONCE("Once"),
    
    WEEK("Week");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_TIMEZONE_ID = "timezoneId";
  private String timezoneId;

  public static final String JSON_PROPERTY_MAINTENANCE_START = "maintenanceStart";
  private String maintenanceStart;

  public static final String JSON_PROPERTY_MAINTENANCE_END = "maintenanceEnd";
  private String maintenanceEnd;

  public static final String JSON_PROPERTY_RECURRENCE = "recurrence";
  private MaintenanceWindowRecurrence recurrence;

  public MaintenanceWindowSchedule() { 
  }

  public MaintenanceWindowSchedule type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Recurrence of the schedule.
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Recurrence of the schedule.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public MaintenanceWindowSchedule timezoneId(String timezoneId) {
    this.timezoneId = timezoneId;
    return this;
  }

   /**
   * The time zone of the start and end time. Default time zone is UTC.    You can user either UTC offset &#x60;UTC+01:00&#x60; format or the IANA Time Zone Database format.
   * @return timezoneId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time zone of the start and end time. Default time zone is UTC.    You can user either UTC offset `UTC+01:00` format or the IANA Time Zone Database format.")
  @JsonProperty(JSON_PROPERTY_TIMEZONE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTimezoneId() {
    return timezoneId;
  }


  @JsonProperty(JSON_PROPERTY_TIMEZONE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimezoneId(String timezoneId) {
    this.timezoneId = timezoneId;
  }


  public MaintenanceWindowSchedule maintenanceStart(String maintenanceStart) {
    this.maintenanceStart = maintenanceStart;
    return this;
  }

   /**
   * The start date and time of the maintenance window in the &#x60;yyyy-MM-dd HH:mm&#x60; format.
   * @return maintenanceStart
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The start date and time of the maintenance window in the `yyyy-MM-dd HH:mm` format.")
  @JsonProperty(JSON_PROPERTY_MAINTENANCE_START)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMaintenanceStart() {
    return maintenanceStart;
  }


  @JsonProperty(JSON_PROPERTY_MAINTENANCE_START)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMaintenanceStart(String maintenanceStart) {
    this.maintenanceStart = maintenanceStart;
  }


  public MaintenanceWindowSchedule maintenanceEnd(String maintenanceEnd) {
    this.maintenanceEnd = maintenanceEnd;
    return this;
  }

   /**
   * The end date and time of the maintenance window in the &#x60;yyyy-MM-dd HH:mm&#x60; format.
   * @return maintenanceEnd
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The end date and time of the maintenance window in the `yyyy-MM-dd HH:mm` format.")
  @JsonProperty(JSON_PROPERTY_MAINTENANCE_END)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMaintenanceEnd() {
    return maintenanceEnd;
  }


  @JsonProperty(JSON_PROPERTY_MAINTENANCE_END)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMaintenanceEnd(String maintenanceEnd) {
    this.maintenanceEnd = maintenanceEnd;
  }


  public MaintenanceWindowSchedule recurrence(MaintenanceWindowRecurrence recurrence) {
    this.recurrence = recurrence;
    return this;
  }

   /**
   * Get recurrence
   * @return recurrence
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RECURRENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaintenanceWindowRecurrence getRecurrence() {
    return recurrence;
  }


  @JsonProperty(JSON_PROPERTY_RECURRENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecurrence(MaintenanceWindowRecurrence recurrence) {
    this.recurrence = recurrence;
  }


  /**
   * Return true if this MaintenanceWindowSchedule object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MaintenanceWindowSchedule maintenanceWindowSchedule = (MaintenanceWindowSchedule) o;
    return Objects.equals(this.type, maintenanceWindowSchedule.type) &&
        Objects.equals(this.timezoneId, maintenanceWindowSchedule.timezoneId) &&
        Objects.equals(this.maintenanceStart, maintenanceWindowSchedule.maintenanceStart) &&
        Objects.equals(this.maintenanceEnd, maintenanceWindowSchedule.maintenanceEnd) &&
        Objects.equals(this.recurrence, maintenanceWindowSchedule.recurrence);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, timezoneId, maintenanceStart, maintenanceEnd, recurrence);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MaintenanceWindowSchedule {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    timezoneId: ").append(toIndentedString(timezoneId)).append("\n");
    sb.append("    maintenanceStart: ").append(toIndentedString(maintenanceStart)).append("\n");
    sb.append("    maintenanceEnd: ").append(toIndentedString(maintenanceEnd)).append("\n");
    sb.append("    recurrence: ").append(toIndentedString(recurrence)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

