/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv1.model.SortingAttributes;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * A query to filter log content.
 */
@ApiModel(description = "A query to filter log content.")
@JsonPropertyOrder({
  FilterLogContent.JSON_PROPERTY_FILTER_QUERY,
  FilterLogContent.JSON_PROPERTY_SORTING_ATTRIBUTES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class FilterLogContent {
  public static final String JSON_PROPERTY_FILTER_QUERY = "filterQuery";
  private String filterQuery;

  public static final String JSON_PROPERTY_SORTING_ATTRIBUTES = "sortingAttributes";
  private SortingAttributes sortingAttributes;

  public FilterLogContent() { 
  }

  public FilterLogContent filterQuery(String filterQuery) {
    this.filterQuery = filterQuery;
    return this;
  }

   /**
   * The query for filtering.   See [Search patterns in log data and parse results](https://dt-url.net/f403kja) in Dynatrace Documentation for the syntax definition and examples.
   * @return filterQuery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The query for filtering.   See [Search patterns in log data and parse results](https://dt-url.net/f403kja) in Dynatrace Documentation for the syntax definition and examples.")
  @JsonProperty(JSON_PROPERTY_FILTER_QUERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFilterQuery() {
    return filterQuery;
  }


  @JsonProperty(JSON_PROPERTY_FILTER_QUERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilterQuery(String filterQuery) {
    this.filterQuery = filterQuery;
  }


  public FilterLogContent sortingAttributes(SortingAttributes sortingAttributes) {
    this.sortingAttributes = sortingAttributes;
    return this;
  }

   /**
   * Get sortingAttributes
   * @return sortingAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SORTING_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SortingAttributes getSortingAttributes() {
    return sortingAttributes;
  }


  @JsonProperty(JSON_PROPERTY_SORTING_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSortingAttributes(SortingAttributes sortingAttributes) {
    this.sortingAttributes = sortingAttributes;
  }


  /**
   * Return true if this FilterLogContent object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterLogContent filterLogContent = (FilterLogContent) o;
    return Objects.equals(this.filterQuery, filterLogContent.filterQuery) &&
        Objects.equals(this.sortingAttributes, filterLogContent.sortingAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filterQuery, sortingAttributes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterLogContent {\n");
    sb.append("    filterQuery: ").append(toIndentedString(filterQuery)).append("\n");
    sb.append("    sortingAttributes: ").append(toIndentedString(sortingAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

