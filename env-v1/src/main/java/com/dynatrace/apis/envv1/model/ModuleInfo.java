/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv1.model.ModuleInstance;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * OneAgent code module.
 */
@ApiModel(description = "OneAgent code module.")
@JsonPropertyOrder({
  ModuleInfo.JSON_PROPERTY_MODULE_TYPE,
  ModuleInfo.JSON_PROPERTY_INSTANCES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class ModuleInfo {
  /**
   * The type of the code module.
   */
  public enum ModuleTypeEnum {
    APACHE("APACHE"),
    
    DOT_NET("DOT_NET"),
    
    DUMPPROC("DUMPPROC"),
    
    GO("GO"),
    
    IBM_INTEGRATION_BUS("IBM_INTEGRATION_BUS"),
    
    IIS("IIS"),
    
    JAVA("JAVA"),
    
    LOG_ANALYTICS("LOG_ANALYTICS"),
    
    NETTRACER("NETTRACER"),
    
    NETWORK("NETWORK"),
    
    NGINX("NGINX"),
    
    NODE_JS("NODE_JS"),
    
    OPENTRACINGNATIVE("OPENTRACINGNATIVE"),
    
    PHP("PHP"),
    
    PROCESS("PROCESS"),
    
    PYTHON("PYTHON"),
    
    RUBY("RUBY"),
    
    SDK("SDK"),
    
    UPDATER("UPDATER"),
    
    VARNISH("VARNISH"),
    
    Z_OS("Z_OS");

    private String value;

    ModuleTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ModuleTypeEnum fromValue(String value) {
      for (ModuleTypeEnum b : ModuleTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_MODULE_TYPE = "moduleType";
  private ModuleTypeEnum moduleType;

  public static final String JSON_PROPERTY_INSTANCES = "instances";
  private List<ModuleInstance> instances = null;

  public ModuleInfo() { 
  }

  public ModuleInfo moduleType(ModuleTypeEnum moduleType) {
    this.moduleType = moduleType;
    return this;
  }

   /**
   * The type of the code module.
   * @return moduleType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of the code module.")
  @JsonProperty(JSON_PROPERTY_MODULE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ModuleTypeEnum getModuleType() {
    return moduleType;
  }


  @JsonProperty(JSON_PROPERTY_MODULE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModuleType(ModuleTypeEnum moduleType) {
    this.moduleType = moduleType;
  }


  public ModuleInfo instances(List<ModuleInstance> instances) {
    this.instances = instances;
    return this;
  }

  public ModuleInfo addInstancesItem(ModuleInstance instancesItem) {
    if (this.instances == null) {
      this.instances = new ArrayList<>();
    }
    this.instances.add(instancesItem);
    return this;
  }

   /**
   * A list of instances of the code module.
   * @return instances
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of instances of the code module.")
  @JsonProperty(JSON_PROPERTY_INSTANCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ModuleInstance> getInstances() {
    return instances;
  }


  @JsonProperty(JSON_PROPERTY_INSTANCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstances(List<ModuleInstance> instances) {
    this.instances = instances;
  }


  /**
   * Return true if this ModuleInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModuleInfo moduleInfo = (ModuleInfo) o;
    return Objects.equals(this.moduleType, moduleInfo.moduleType) &&
        Objects.equals(this.instances, moduleInfo.instances);
  }

  @Override
  public int hashCode() {
    return Objects.hash(moduleType, instances);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModuleInfo {\n");
    sb.append("    moduleType: ").append(toIndentedString(moduleType)).append("\n");
    sb.append("    instances: ").append(toIndentedString(instances)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

