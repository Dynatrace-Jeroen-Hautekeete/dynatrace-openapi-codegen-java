/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv1.model.DateProperty;
import com.dynatrace.apis.envv1.model.DoubleProperty;
import com.dynatrace.apis.envv1.model.LongProperty;
import com.dynatrace.apis.envv1.model.StringProperty;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * A user action.    A user action is a single action performed by the user as part of a user session, for example a mouse click.
 */
@ApiModel(description = "A user action.    A user action is a single action performed by the user as part of a user session, for example a mouse click.")
@JsonPropertyOrder({
  UserSessionUserAction.JSON_PROPERTY_NAME,
  UserSessionUserAction.JSON_PROPERTY_DOMAIN,
  UserSessionUserAction.JSON_PROPERTY_TARGET_URL,
  UserSessionUserAction.JSON_PROPERTY_TYPE,
  UserSessionUserAction.JSON_PROPERTY_START_TIME,
  UserSessionUserAction.JSON_PROPERTY_END_TIME,
  UserSessionUserAction.JSON_PROPERTY_DURATION,
  UserSessionUserAction.JSON_PROPERTY_APPLICATION,
  UserSessionUserAction.JSON_PROPERTY_INTERNAL_APPLICATION_ID,
  UserSessionUserAction.JSON_PROPERTY_INTERNAL_KEY_USER_ACTION_ID,
  UserSessionUserAction.JSON_PROPERTY_SPEED_INDEX,
  UserSessionUserAction.JSON_PROPERTY_APDEX_CATEGORY,
  UserSessionUserAction.JSON_PROPERTY_MATCHING_CONVERSION_GOALS,
  UserSessionUserAction.JSON_PROPERTY_NETWORK_TIME,
  UserSessionUserAction.JSON_PROPERTY_SERVER_TIME,
  UserSessionUserAction.JSON_PROPERTY_FRONTEND_TIME,
  UserSessionUserAction.JSON_PROPERTY_DOCUMENT_INTERACTIVE_TIME,
  UserSessionUserAction.JSON_PROPERTY_THIRD_PARTY_RESOURCES,
  UserSessionUserAction.JSON_PROPERTY_THIRD_PARTY_BUSY_TIME,
  UserSessionUserAction.JSON_PROPERTY_CDN_RESOURCES,
  UserSessionUserAction.JSON_PROPERTY_CDN_BUSY_TIME,
  UserSessionUserAction.JSON_PROPERTY_FIRST_PARTY_RESOURCES,
  UserSessionUserAction.JSON_PROPERTY_FIRST_PARTY_BUSY_TIME,
  UserSessionUserAction.JSON_PROPERTY_HAS_CRASH,
  UserSessionUserAction.JSON_PROPERTY_DOM_COMPLETE_TIME,
  UserSessionUserAction.JSON_PROPERTY_DOM_CONTENT_LOADED_TIME,
  UserSessionUserAction.JSON_PROPERTY_LOAD_EVENT_START,
  UserSessionUserAction.JSON_PROPERTY_LOAD_EVENT_END,
  UserSessionUserAction.JSON_PROPERTY_NAVIGATION_START,
  UserSessionUserAction.JSON_PROPERTY_REQUEST_START,
  UserSessionUserAction.JSON_PROPERTY_RESPONSE_START,
  UserSessionUserAction.JSON_PROPERTY_RESPONSE_END,
  UserSessionUserAction.JSON_PROPERTY_VISUALLY_COMPLETE_TIME,
  UserSessionUserAction.JSON_PROPERTY_SYNTHETIC_EVENT,
  UserSessionUserAction.JSON_PROPERTY_SYNTHETIC_EVENT_ID,
  UserSessionUserAction.JSON_PROPERTY_KEY_USER_ACTION,
  UserSessionUserAction.JSON_PROPERTY_STRING_PROPERTIES,
  UserSessionUserAction.JSON_PROPERTY_LONG_PROPERTIES,
  UserSessionUserAction.JSON_PROPERTY_DOUBLE_PROPERTIES,
  UserSessionUserAction.JSON_PROPERTY_DATE_PROPERTIES,
  UserSessionUserAction.JSON_PROPERTY_USER_ACTION_PROPERTY_COUNT,
  UserSessionUserAction.JSON_PROPERTY_CUSTOM_ERROR_COUNT,
  UserSessionUserAction.JSON_PROPERTY_JAVASCRIPT_ERROR_COUNT,
  UserSessionUserAction.JSON_PROPERTY_REQUEST_ERROR_COUNT,
  UserSessionUserAction.JSON_PROPERTY_LARGEST_CONTENTFUL_PAINT,
  UserSessionUserAction.JSON_PROPERTY_FIRST_INPUT_DELAY,
  UserSessionUserAction.JSON_PROPERTY_TOTAL_BLOCKING_TIME,
  UserSessionUserAction.JSON_PROPERTY_CUMULATIVE_LAYOUT_SHIFT
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class UserSessionUserAction {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DOMAIN = "domain";
  private String domain;

  public static final String JSON_PROPERTY_TARGET_URL = "targetUrl";
  private String targetUrl;

  /**
   * The type of the user action.
   */
  public enum TypeEnum {
    CUSTOM("Custom"),
    
    ENDVISIT("EndVisit"),
    
    ERROR("Error"),
    
    LOAD("Load"),
    
    RAGECLICK("RageClick"),
    
    SYNTHETICHIDDENACTION("SyntheticHiddenAction"),
    
    USERSESSIONPROPERTIES("UserSessionProperties"),
    
    VISITTAG("VisitTag"),
    
    XHR("Xhr");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_START_TIME = "startTime";
  private Long startTime;

  public static final String JSON_PROPERTY_END_TIME = "endTime";
  private Long endTime;

  public static final String JSON_PROPERTY_DURATION = "duration";
  private Long duration;

  public static final String JSON_PROPERTY_APPLICATION = "application";
  private String application;

  public static final String JSON_PROPERTY_INTERNAL_APPLICATION_ID = "internalApplicationId";
  private String internalApplicationId;

  public static final String JSON_PROPERTY_INTERNAL_KEY_USER_ACTION_ID = "internalKeyUserActionId";
  private String internalKeyUserActionId;

  public static final String JSON_PROPERTY_SPEED_INDEX = "speedIndex";
  private Integer speedIndex;

  /**
   * The [user experience index](https://dt-url.net/apdexdoc) of the user action.
   */
  public enum ApdexCategoryEnum {
    FRUSTRATED("FRUSTRATED"),
    
    SATISFIED("SATISFIED"),
    
    TOLERATING("TOLERATING"),
    
    UNKNOWN("UNKNOWN");

    private String value;

    ApdexCategoryEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ApdexCategoryEnum fromValue(String value) {
      for (ApdexCategoryEnum b : ApdexCategoryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_APDEX_CATEGORY = "apdexCategory";
  private ApdexCategoryEnum apdexCategory;

  public static final String JSON_PROPERTY_MATCHING_CONVERSION_GOALS = "matchingConversionGoals";
  private List<String> matchingConversionGoals = null;

  public static final String JSON_PROPERTY_NETWORK_TIME = "networkTime";
  private Integer networkTime;

  public static final String JSON_PROPERTY_SERVER_TIME = "serverTime";
  private Integer serverTime;

  public static final String JSON_PROPERTY_FRONTEND_TIME = "frontendTime";
  private Integer frontendTime;

  public static final String JSON_PROPERTY_DOCUMENT_INTERACTIVE_TIME = "documentInteractiveTime";
  private Integer documentInteractiveTime;

  public static final String JSON_PROPERTY_THIRD_PARTY_RESOURCES = "thirdPartyResources";
  private Integer thirdPartyResources;

  public static final String JSON_PROPERTY_THIRD_PARTY_BUSY_TIME = "thirdPartyBusyTime";
  private Integer thirdPartyBusyTime;

  public static final String JSON_PROPERTY_CDN_RESOURCES = "cdnResources";
  private Integer cdnResources;

  public static final String JSON_PROPERTY_CDN_BUSY_TIME = "cdnBusyTime";
  private Integer cdnBusyTime;

  public static final String JSON_PROPERTY_FIRST_PARTY_RESOURCES = "firstPartyResources";
  private Integer firstPartyResources;

  public static final String JSON_PROPERTY_FIRST_PARTY_BUSY_TIME = "firstPartyBusyTime";
  private Integer firstPartyBusyTime;

  public static final String JSON_PROPERTY_HAS_CRASH = "hasCrash";
  private Boolean hasCrash;

  public static final String JSON_PROPERTY_DOM_COMPLETE_TIME = "domCompleteTime";
  private Integer domCompleteTime;

  public static final String JSON_PROPERTY_DOM_CONTENT_LOADED_TIME = "domContentLoadedTime";
  private Integer domContentLoadedTime;

  public static final String JSON_PROPERTY_LOAD_EVENT_START = "loadEventStart";
  private Integer loadEventStart;

  public static final String JSON_PROPERTY_LOAD_EVENT_END = "loadEventEnd";
  private Integer loadEventEnd;

  public static final String JSON_PROPERTY_NAVIGATION_START = "navigationStart";
  private Long navigationStart;

  public static final String JSON_PROPERTY_REQUEST_START = "requestStart";
  private Integer requestStart;

  public static final String JSON_PROPERTY_RESPONSE_START = "responseStart";
  private Integer responseStart;

  public static final String JSON_PROPERTY_RESPONSE_END = "responseEnd";
  private Integer responseEnd;

  public static final String JSON_PROPERTY_VISUALLY_COMPLETE_TIME = "visuallyCompleteTime";
  private Integer visuallyCompleteTime;

  public static final String JSON_PROPERTY_SYNTHETIC_EVENT = "syntheticEvent";
  private String syntheticEvent;

  public static final String JSON_PROPERTY_SYNTHETIC_EVENT_ID = "syntheticEventId";
  private String syntheticEventId;

  public static final String JSON_PROPERTY_KEY_USER_ACTION = "keyUserAction";
  private Boolean keyUserAction;

  public static final String JSON_PROPERTY_STRING_PROPERTIES = "stringProperties";
  private List<StringProperty> stringProperties = null;

  public static final String JSON_PROPERTY_LONG_PROPERTIES = "longProperties";
  private List<LongProperty> longProperties = null;

  public static final String JSON_PROPERTY_DOUBLE_PROPERTIES = "doubleProperties";
  private List<DoubleProperty> doubleProperties = null;

  public static final String JSON_PROPERTY_DATE_PROPERTIES = "dateProperties";
  private List<DateProperty> dateProperties = null;

  public static final String JSON_PROPERTY_USER_ACTION_PROPERTY_COUNT = "userActionPropertyCount";
  private Integer userActionPropertyCount;

  public static final String JSON_PROPERTY_CUSTOM_ERROR_COUNT = "customErrorCount";
  private Integer customErrorCount;

  public static final String JSON_PROPERTY_JAVASCRIPT_ERROR_COUNT = "javascriptErrorCount";
  private Integer javascriptErrorCount;

  public static final String JSON_PROPERTY_REQUEST_ERROR_COUNT = "requestErrorCount";
  private Integer requestErrorCount;

  public static final String JSON_PROPERTY_LARGEST_CONTENTFUL_PAINT = "largestContentfulPaint";
  private Integer largestContentfulPaint;

  public static final String JSON_PROPERTY_FIRST_INPUT_DELAY = "firstInputDelay";
  private Integer firstInputDelay;

  public static final String JSON_PROPERTY_TOTAL_BLOCKING_TIME = "totalBlockingTime";
  private Integer totalBlockingTime;

  public static final String JSON_PROPERTY_CUMULATIVE_LAYOUT_SHIFT = "cumulativeLayoutShift";
  private Double cumulativeLayoutShift;

  public UserSessionUserAction() { 
  }

  public UserSessionUserAction name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the user action.    Typically, this is the name of the page that is loaded as part of a user action or a textual description of the action, such as a mouse click.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Loading of page /index.html", value = "The name of the user action.    Typically, this is the name of the page that is loaded as part of a user action or a textual description of the action, such as a mouse click.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public UserSessionUserAction domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * The DNS domain where the user action has been recorded.
   * @return domain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The DNS domain where the user action has been recorded.")
  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDomain() {
    return domain;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomain(String domain) {
    this.domain = domain;
  }


  public UserSessionUserAction targetUrl(String targetUrl) {
    this.targetUrl = targetUrl;
    return this;
  }

   /**
   * The target URL of the user action.
   * @return targetUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The target URL of the user action.")
  @JsonProperty(JSON_PROPERTY_TARGET_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTargetUrl() {
    return targetUrl;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTargetUrl(String targetUrl) {
    this.targetUrl = targetUrl;
  }


  public UserSessionUserAction type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The type of the user action.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Load", value = "The type of the user action.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public UserSessionUserAction startTime(Long startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * The start timestamp of the user action, in UTC milliseconds.
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1511363122754", value = "The start timestamp of the user action, in UTC milliseconds.")
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getStartTime() {
    return startTime;
  }


  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartTime(Long startTime) {
    this.startTime = startTime;
  }


  public UserSessionUserAction endTime(Long endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * The end timestamp of the user action, in UTC milliseconds.
   * @return endTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1511363122754", value = "The end timestamp of the user action, in UTC milliseconds.")
  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getEndTime() {
    return endTime;
  }


  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndTime(Long endTime) {
    this.endTime = endTime;
  }


  public UserSessionUserAction duration(Long duration) {
    this.duration = duration;
    return this;
  }

   /**
   * The duration of the user action, in milliseconds.    This is calculated as the of time between the start and the end timestamps of the user action.
   * @return duration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "122300", value = "The duration of the user action, in milliseconds.    This is calculated as the of time between the start and the end timestamps of the user action.")
  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getDuration() {
    return duration;
  }


  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDuration(Long duration) {
    this.duration = duration;
  }


  public UserSessionUserAction application(String application) {
    this.application = application;
    return this;
  }

   /**
   * The name of the application where the user action has been recorded.
   * @return application
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the application where the user action has been recorded.")
  @JsonProperty(JSON_PROPERTY_APPLICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApplication() {
    return application;
  }


  @JsonProperty(JSON_PROPERTY_APPLICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplication(String application) {
    this.application = application;
  }


  public UserSessionUserAction internalApplicationId(String internalApplicationId) {
    this.internalApplicationId = internalApplicationId;
    return this;
  }

   /**
   * The Dynatrace entity ID of the application where the user action has been recorded.    This information is useful when calling various REST APIs, for example as a key for time series queries.
   * @return internalApplicationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Dynatrace entity ID of the application where the user action has been recorded.    This information is useful when calling various REST APIs, for example as a key for time series queries.")
  @JsonProperty(JSON_PROPERTY_INTERNAL_APPLICATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInternalApplicationId() {
    return internalApplicationId;
  }


  @JsonProperty(JSON_PROPERTY_INTERNAL_APPLICATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInternalApplicationId(String internalApplicationId) {
    this.internalApplicationId = internalApplicationId;
  }


  public UserSessionUserAction internalKeyUserActionId(String internalKeyUserActionId) {
    this.internalKeyUserActionId = internalKeyUserActionId;
    return this;
  }

   /**
   * The Dynatrace entity ID of the key user action.
   * @return internalKeyUserActionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Dynatrace entity ID of the key user action.")
  @JsonProperty(JSON_PROPERTY_INTERNAL_KEY_USER_ACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInternalKeyUserActionId() {
    return internalKeyUserActionId;
  }


  @JsonProperty(JSON_PROPERTY_INTERNAL_KEY_USER_ACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInternalKeyUserActionId(String internalKeyUserActionId) {
    this.internalKeyUserActionId = internalKeyUserActionId;
  }


  public UserSessionUserAction speedIndex(Integer speedIndex) {
    this.speedIndex = speedIndex;
    return this;
  }

   /**
   * The [speed index](https://dt-url.net/qk1a3r19) of the user action, in milliseconds.    This is calculated as average time it takes for all visible parts of a page to display.
   * @return speedIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "122300", value = "The [speed index](https://dt-url.net/qk1a3r19) of the user action, in milliseconds.    This is calculated as average time it takes for all visible parts of a page to display.")
  @JsonProperty(JSON_PROPERTY_SPEED_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSpeedIndex() {
    return speedIndex;
  }


  @JsonProperty(JSON_PROPERTY_SPEED_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSpeedIndex(Integer speedIndex) {
    this.speedIndex = speedIndex;
  }


  public UserSessionUserAction apdexCategory(ApdexCategoryEnum apdexCategory) {
    this.apdexCategory = apdexCategory;
    return this;
  }

   /**
   * The [user experience index](https://dt-url.net/apdexdoc) of the user action.
   * @return apdexCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "SATISFIED", value = "The [user experience index](https://dt-url.net/apdexdoc) of the user action.")
  @JsonProperty(JSON_PROPERTY_APDEX_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApdexCategoryEnum getApdexCategory() {
    return apdexCategory;
  }


  @JsonProperty(JSON_PROPERTY_APDEX_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApdexCategory(ApdexCategoryEnum apdexCategory) {
    this.apdexCategory = apdexCategory;
  }


  public UserSessionUserAction matchingConversionGoals(List<String> matchingConversionGoals) {
    this.matchingConversionGoals = matchingConversionGoals;
    return this;
  }

  public UserSessionUserAction addMatchingConversionGoalsItem(String matchingConversionGoalsItem) {
    if (this.matchingConversionGoals == null) {
      this.matchingConversionGoals = new ArrayList<>();
    }
    this.matchingConversionGoals.add(matchingConversionGoalsItem);
    return this;
  }

   /**
   * A list of conversion goals achieved by the user action.    Additionally, you can define conversion goals for a user session as a whole.
   * @return matchingConversionGoals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of conversion goals achieved by the user action.    Additionally, you can define conversion goals for a user session as a whole.")
  @JsonProperty(JSON_PROPERTY_MATCHING_CONVERSION_GOALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getMatchingConversionGoals() {
    return matchingConversionGoals;
  }


  @JsonProperty(JSON_PROPERTY_MATCHING_CONVERSION_GOALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMatchingConversionGoals(List<String> matchingConversionGoals) {
    this.matchingConversionGoals = matchingConversionGoals;
  }


  public UserSessionUserAction networkTime(Integer networkTime) {
    this.networkTime = networkTime;
    return this;
  }

   /**
   * The amount of time spent on the data transfer for the user action, in milliseconds.
   * @return networkTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "122300", value = "The amount of time spent on the data transfer for the user action, in milliseconds.")
  @JsonProperty(JSON_PROPERTY_NETWORK_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNetworkTime() {
    return networkTime;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetworkTime(Integer networkTime) {
    this.networkTime = networkTime;
  }


  public UserSessionUserAction serverTime(Integer serverTime) {
    this.serverTime = serverTime;
    return this;
  }

   /**
   * The amount of time spent on the server-side processing for the user action, in milliseconds.
   * @return serverTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "122300", value = "The amount of time spent on the server-side processing for the user action, in milliseconds.")
  @JsonProperty(JSON_PROPERTY_SERVER_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getServerTime() {
    return serverTime;
  }


  @JsonProperty(JSON_PROPERTY_SERVER_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServerTime(Integer serverTime) {
    this.serverTime = serverTime;
  }


  public UserSessionUserAction frontendTime(Integer frontendTime) {
    this.frontendTime = frontendTime;
    return this;
  }

   /**
   * The amount of time spent on the frontend rendering for the user action, in milliseconds.
   * @return frontendTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "122300", value = "The amount of time spent on the frontend rendering for the user action, in milliseconds.")
  @JsonProperty(JSON_PROPERTY_FRONTEND_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFrontendTime() {
    return frontendTime;
  }


  @JsonProperty(JSON_PROPERTY_FRONTEND_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFrontendTime(Integer frontendTime) {
    this.frontendTime = frontendTime;
  }


  public UserSessionUserAction documentInteractiveTime(Integer documentInteractiveTime) {
    this.documentInteractiveTime = documentInteractiveTime;
    return this;
  }

   /**
   * The amount of time spent until the document for the user action became interactive, in milliseconds.
   * @return documentInteractiveTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "122300", value = "The amount of time spent until the document for the user action became interactive, in milliseconds.")
  @JsonProperty(JSON_PROPERTY_DOCUMENT_INTERACTIVE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDocumentInteractiveTime() {
    return documentInteractiveTime;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_INTERACTIVE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentInteractiveTime(Integer documentInteractiveTime) {
    this.documentInteractiveTime = documentInteractiveTime;
  }


  public UserSessionUserAction thirdPartyResources(Integer thirdPartyResources) {
    this.thirdPartyResources = thirdPartyResources;
    return this;
  }

   /**
   * The number of third party resources loaded for the user action.
   * @return thirdPartyResources
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of third party resources loaded for the user action.")
  @JsonProperty(JSON_PROPERTY_THIRD_PARTY_RESOURCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getThirdPartyResources() {
    return thirdPartyResources;
  }


  @JsonProperty(JSON_PROPERTY_THIRD_PARTY_RESOURCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setThirdPartyResources(Integer thirdPartyResources) {
    this.thirdPartyResources = thirdPartyResources;
  }


  public UserSessionUserAction thirdPartyBusyTime(Integer thirdPartyBusyTime) {
    this.thirdPartyBusyTime = thirdPartyBusyTime;
    return this;
  }

   /**
   * The time spent waiting for third party resources for the user action, in milliseconds.
   * @return thirdPartyBusyTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "122300", value = "The time spent waiting for third party resources for the user action, in milliseconds.")
  @JsonProperty(JSON_PROPERTY_THIRD_PARTY_BUSY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getThirdPartyBusyTime() {
    return thirdPartyBusyTime;
  }


  @JsonProperty(JSON_PROPERTY_THIRD_PARTY_BUSY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setThirdPartyBusyTime(Integer thirdPartyBusyTime) {
    this.thirdPartyBusyTime = thirdPartyBusyTime;
  }


  public UserSessionUserAction cdnResources(Integer cdnResources) {
    this.cdnResources = cdnResources;
    return this;
  }

   /**
   * The number of resources fetched from a CDN for the user action.
   * @return cdnResources
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of resources fetched from a CDN for the user action.")
  @JsonProperty(JSON_PROPERTY_CDN_RESOURCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCdnResources() {
    return cdnResources;
  }


  @JsonProperty(JSON_PROPERTY_CDN_RESOURCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCdnResources(Integer cdnResources) {
    this.cdnResources = cdnResources;
  }


  public UserSessionUserAction cdnBusyTime(Integer cdnBusyTime) {
    this.cdnBusyTime = cdnBusyTime;
    return this;
  }

   /**
   * The time spent waiting for CDN resources for the user action, in milliseconds.
   * @return cdnBusyTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "122300", value = "The time spent waiting for CDN resources for the user action, in milliseconds.")
  @JsonProperty(JSON_PROPERTY_CDN_BUSY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCdnBusyTime() {
    return cdnBusyTime;
  }


  @JsonProperty(JSON_PROPERTY_CDN_BUSY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCdnBusyTime(Integer cdnBusyTime) {
    this.cdnBusyTime = cdnBusyTime;
  }


  public UserSessionUserAction firstPartyResources(Integer firstPartyResources) {
    this.firstPartyResources = firstPartyResources;
    return this;
  }

   /**
   * The number of resources fetched from the originating server for the user action.
   * @return firstPartyResources
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of resources fetched from the originating server for the user action.")
  @JsonProperty(JSON_PROPERTY_FIRST_PARTY_RESOURCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFirstPartyResources() {
    return firstPartyResources;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_PARTY_RESOURCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstPartyResources(Integer firstPartyResources) {
    this.firstPartyResources = firstPartyResources;
  }


  public UserSessionUserAction firstPartyBusyTime(Integer firstPartyBusyTime) {
    this.firstPartyBusyTime = firstPartyBusyTime;
    return this;
  }

   /**
   * The time spent waiting for resources from the originating server for the user action, in milliseconds.
   * @return firstPartyBusyTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "122300", value = "The time spent waiting for resources from the originating server for the user action, in milliseconds.")
  @JsonProperty(JSON_PROPERTY_FIRST_PARTY_BUSY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFirstPartyBusyTime() {
    return firstPartyBusyTime;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_PARTY_BUSY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstPartyBusyTime(Integer firstPartyBusyTime) {
    this.firstPartyBusyTime = firstPartyBusyTime;
  }


  public UserSessionUserAction hasCrash(Boolean hasCrash) {
    this.hasCrash = hasCrash;
    return this;
  }

   /**
   * The user action has (&#x60;true&#x60;) or doesn&#39;t have (&#x60;false&#x60;) a crash.
   * @return hasCrash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user action has (`true`) or doesn't have (`false`) a crash.")
  @JsonProperty(JSON_PROPERTY_HAS_CRASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasCrash() {
    return hasCrash;
  }


  @JsonProperty(JSON_PROPERTY_HAS_CRASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasCrash(Boolean hasCrash) {
    this.hasCrash = hasCrash;
  }


  public UserSessionUserAction domCompleteTime(Integer domCompleteTime) {
    this.domCompleteTime = domCompleteTime;
    return this;
  }

   /**
   * The amount of time until the DOM tree is completed, in milliseconds.
   * @return domCompleteTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "122300", value = "The amount of time until the DOM tree is completed, in milliseconds.")
  @JsonProperty(JSON_PROPERTY_DOM_COMPLETE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDomCompleteTime() {
    return domCompleteTime;
  }


  @JsonProperty(JSON_PROPERTY_DOM_COMPLETE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomCompleteTime(Integer domCompleteTime) {
    this.domCompleteTime = domCompleteTime;
  }


  public UserSessionUserAction domContentLoadedTime(Integer domContentLoadedTime) {
    this.domContentLoadedTime = domContentLoadedTime;
    return this;
  }

   /**
   * The amount of time until the DOM tree is loaded, in milliseconds.
   * @return domContentLoadedTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "122300", value = "The amount of time until the DOM tree is loaded, in milliseconds.")
  @JsonProperty(JSON_PROPERTY_DOM_CONTENT_LOADED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDomContentLoadedTime() {
    return domContentLoadedTime;
  }


  @JsonProperty(JSON_PROPERTY_DOM_CONTENT_LOADED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomContentLoadedTime(Integer domContentLoadedTime) {
    this.domContentLoadedTime = domContentLoadedTime;
  }


  public UserSessionUserAction loadEventStart(Integer loadEventStart) {
    this.loadEventStart = loadEventStart;
    return this;
  }

   /**
   * The amount of time until the load event started, in milliseconds.
   * @return loadEventStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "122300", value = "The amount of time until the load event started, in milliseconds.")
  @JsonProperty(JSON_PROPERTY_LOAD_EVENT_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLoadEventStart() {
    return loadEventStart;
  }


  @JsonProperty(JSON_PROPERTY_LOAD_EVENT_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoadEventStart(Integer loadEventStart) {
    this.loadEventStart = loadEventStart;
  }


  public UserSessionUserAction loadEventEnd(Integer loadEventEnd) {
    this.loadEventEnd = loadEventEnd;
    return this;
  }

   /**
   * The amount of time until the load event ended, in milliseconds.
   * @return loadEventEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "122300", value = "The amount of time until the load event ended, in milliseconds.")
  @JsonProperty(JSON_PROPERTY_LOAD_EVENT_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLoadEventEnd() {
    return loadEventEnd;
  }


  @JsonProperty(JSON_PROPERTY_LOAD_EVENT_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoadEventEnd(Integer loadEventEnd) {
    this.loadEventEnd = loadEventEnd;
  }


  public UserSessionUserAction navigationStart(Long navigationStart) {
    this.navigationStart = navigationStart;
    return this;
  }

   /**
   * The timestamp of the navigation start, in UTC milliseconds.
   * @return navigationStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "122300", value = "The timestamp of the navigation start, in UTC milliseconds.")
  @JsonProperty(JSON_PROPERTY_NAVIGATION_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getNavigationStart() {
    return navigationStart;
  }


  @JsonProperty(JSON_PROPERTY_NAVIGATION_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNavigationStart(Long navigationStart) {
    this.navigationStart = navigationStart;
  }


  public UserSessionUserAction requestStart(Integer requestStart) {
    this.requestStart = requestStart;
    return this;
  }

   /**
   * The amount of time until the request started, in milliseconds.
   * @return requestStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "122300", value = "The amount of time until the request started, in milliseconds.")
  @JsonProperty(JSON_PROPERTY_REQUEST_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRequestStart() {
    return requestStart;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestStart(Integer requestStart) {
    this.requestStart = requestStart;
  }


  public UserSessionUserAction responseStart(Integer responseStart) {
    this.responseStart = responseStart;
    return this;
  }

   /**
   * The amount of time until the response started, in milliseconds.
   * @return responseStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "122300", value = "The amount of time until the response started, in milliseconds.")
  @JsonProperty(JSON_PROPERTY_RESPONSE_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getResponseStart() {
    return responseStart;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSE_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponseStart(Integer responseStart) {
    this.responseStart = responseStart;
  }


  public UserSessionUserAction responseEnd(Integer responseEnd) {
    this.responseEnd = responseEnd;
    return this;
  }

   /**
   * The amount of time until the response ended, in milliseconds.
   * @return responseEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "122300", value = "The amount of time until the response ended, in milliseconds.")
  @JsonProperty(JSON_PROPERTY_RESPONSE_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getResponseEnd() {
    return responseEnd;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSE_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponseEnd(Integer responseEnd) {
    this.responseEnd = responseEnd;
  }


  public UserSessionUserAction visuallyCompleteTime(Integer visuallyCompleteTime) {
    this.visuallyCompleteTime = visuallyCompleteTime;
    return this;
  }

   /**
   * The amount of time until the page is [visually complete](https://dt-url.net/qk1a3r19), in milliseconds.
   * @return visuallyCompleteTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "122300", value = "The amount of time until the page is [visually complete](https://dt-url.net/qk1a3r19), in milliseconds.")
  @JsonProperty(JSON_PROPERTY_VISUALLY_COMPLETE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getVisuallyCompleteTime() {
    return visuallyCompleteTime;
  }


  @JsonProperty(JSON_PROPERTY_VISUALLY_COMPLETE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisuallyCompleteTime(Integer visuallyCompleteTime) {
    this.visuallyCompleteTime = visuallyCompleteTime;
  }


  public UserSessionUserAction syntheticEvent(String syntheticEvent) {
    this.syntheticEvent = syntheticEvent;
    return this;
  }

   /**
   * The name of the [Synthetic event](https://dt-url.net/dq1e3rmm) that triggered the user action.
   * @return syntheticEvent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the [Synthetic event](https://dt-url.net/dq1e3rmm) that triggered the user action.")
  @JsonProperty(JSON_PROPERTY_SYNTHETIC_EVENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSyntheticEvent() {
    return syntheticEvent;
  }


  @JsonProperty(JSON_PROPERTY_SYNTHETIC_EVENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSyntheticEvent(String syntheticEvent) {
    this.syntheticEvent = syntheticEvent;
  }


  public UserSessionUserAction syntheticEventId(String syntheticEventId) {
    this.syntheticEventId = syntheticEventId;
    return this;
  }

   /**
   * The ID of the [Synthetic event](https://dt-url.net/dq1e3rmm) that triggered the user action.
   * @return syntheticEventId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the [Synthetic event](https://dt-url.net/dq1e3rmm) that triggered the user action.")
  @JsonProperty(JSON_PROPERTY_SYNTHETIC_EVENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSyntheticEventId() {
    return syntheticEventId;
  }


  @JsonProperty(JSON_PROPERTY_SYNTHETIC_EVENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSyntheticEventId(String syntheticEventId) {
    this.syntheticEventId = syntheticEventId;
  }


  public UserSessionUserAction keyUserAction(Boolean keyUserAction) {
    this.keyUserAction = keyUserAction;
    return this;
  }

   /**
   * The action is (&#x60;true&#x60;) or is not (&#x60;false&#x60;) a key action.
   * @return keyUserAction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The action is (`true`) or is not (`false`) a key action.")
  @JsonProperty(JSON_PROPERTY_KEY_USER_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getKeyUserAction() {
    return keyUserAction;
  }


  @JsonProperty(JSON_PROPERTY_KEY_USER_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKeyUserAction(Boolean keyUserAction) {
    this.keyUserAction = keyUserAction;
  }


  public UserSessionUserAction stringProperties(List<StringProperty> stringProperties) {
    this.stringProperties = stringProperties;
    return this;
  }

  public UserSessionUserAction addStringPropertiesItem(StringProperty stringPropertiesItem) {
    if (this.stringProperties == null) {
      this.stringProperties = new ArrayList<>();
    }
    this.stringProperties.add(stringPropertiesItem);
    return this;
  }

   /**
   * A list of custom properties of the user session with string values.
   * @return stringProperties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of custom properties of the user session with string values.")
  @JsonProperty(JSON_PROPERTY_STRING_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<StringProperty> getStringProperties() {
    return stringProperties;
  }


  @JsonProperty(JSON_PROPERTY_STRING_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStringProperties(List<StringProperty> stringProperties) {
    this.stringProperties = stringProperties;
  }


  public UserSessionUserAction longProperties(List<LongProperty> longProperties) {
    this.longProperties = longProperties;
    return this;
  }

  public UserSessionUserAction addLongPropertiesItem(LongProperty longPropertiesItem) {
    if (this.longProperties == null) {
      this.longProperties = new ArrayList<>();
    }
    this.longProperties.add(longPropertiesItem);
    return this;
  }

   /**
   * A list of custom properties of the user session with integer (short or long) values.
   * @return longProperties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of custom properties of the user session with integer (short or long) values.")
  @JsonProperty(JSON_PROPERTY_LONG_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LongProperty> getLongProperties() {
    return longProperties;
  }


  @JsonProperty(JSON_PROPERTY_LONG_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLongProperties(List<LongProperty> longProperties) {
    this.longProperties = longProperties;
  }


  public UserSessionUserAction doubleProperties(List<DoubleProperty> doubleProperties) {
    this.doubleProperties = doubleProperties;
    return this;
  }

  public UserSessionUserAction addDoublePropertiesItem(DoubleProperty doublePropertiesItem) {
    if (this.doubleProperties == null) {
      this.doubleProperties = new ArrayList<>();
    }
    this.doubleProperties.add(doublePropertiesItem);
    return this;
  }

   /**
   * A list of custom properties of the user session with floating-point numerical values.
   * @return doubleProperties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of custom properties of the user session with floating-point numerical values.")
  @JsonProperty(JSON_PROPERTY_DOUBLE_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DoubleProperty> getDoubleProperties() {
    return doubleProperties;
  }


  @JsonProperty(JSON_PROPERTY_DOUBLE_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDoubleProperties(List<DoubleProperty> doubleProperties) {
    this.doubleProperties = doubleProperties;
  }


  public UserSessionUserAction dateProperties(List<DateProperty> dateProperties) {
    this.dateProperties = dateProperties;
    return this;
  }

  public UserSessionUserAction addDatePropertiesItem(DateProperty datePropertiesItem) {
    if (this.dateProperties == null) {
      this.dateProperties = new ArrayList<>();
    }
    this.dateProperties.add(datePropertiesItem);
    return this;
  }

   /**
   * A list of custom properties of the user session with date values.
   * @return dateProperties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of custom properties of the user session with date values.")
  @JsonProperty(JSON_PROPERTY_DATE_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DateProperty> getDateProperties() {
    return dateProperties;
  }


  @JsonProperty(JSON_PROPERTY_DATE_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateProperties(List<DateProperty> dateProperties) {
    this.dateProperties = dateProperties;
  }


  public UserSessionUserAction userActionPropertyCount(Integer userActionPropertyCount) {
    this.userActionPropertyCount = userActionPropertyCount;
    return this;
  }

   /**
   * The total number of properties in the user action.
   * @return userActionPropertyCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total number of properties in the user action.")
  @JsonProperty(JSON_PROPERTY_USER_ACTION_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUserActionPropertyCount() {
    return userActionPropertyCount;
  }


  @JsonProperty(JSON_PROPERTY_USER_ACTION_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserActionPropertyCount(Integer userActionPropertyCount) {
    this.userActionPropertyCount = userActionPropertyCount;
  }


  public UserSessionUserAction customErrorCount(Integer customErrorCount) {
    this.customErrorCount = customErrorCount;
    return this;
  }

   /**
   * The total number of custom errors during the user action.
   * @return customErrorCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total number of custom errors during the user action.")
  @JsonProperty(JSON_PROPERTY_CUSTOM_ERROR_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCustomErrorCount() {
    return customErrorCount;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_ERROR_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomErrorCount(Integer customErrorCount) {
    this.customErrorCount = customErrorCount;
  }


  public UserSessionUserAction javascriptErrorCount(Integer javascriptErrorCount) {
    this.javascriptErrorCount = javascriptErrorCount;
    return this;
  }

   /**
   * The total number of Javascript errors during the user action.
   * @return javascriptErrorCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total number of Javascript errors during the user action.")
  @JsonProperty(JSON_PROPERTY_JAVASCRIPT_ERROR_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getJavascriptErrorCount() {
    return javascriptErrorCount;
  }


  @JsonProperty(JSON_PROPERTY_JAVASCRIPT_ERROR_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJavascriptErrorCount(Integer javascriptErrorCount) {
    this.javascriptErrorCount = javascriptErrorCount;
  }


  public UserSessionUserAction requestErrorCount(Integer requestErrorCount) {
    this.requestErrorCount = requestErrorCount;
    return this;
  }

   /**
   * The total number of request errors during the user action.
   * @return requestErrorCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total number of request errors during the user action.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ERROR_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRequestErrorCount() {
    return requestErrorCount;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ERROR_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestErrorCount(Integer requestErrorCount) {
    this.requestErrorCount = requestErrorCount;
  }


  public UserSessionUserAction largestContentfulPaint(Integer largestContentfulPaint) {
    this.largestContentfulPaint = largestContentfulPaint;
    return this;
  }

   /**
   * The largest contentful paint (LCP) is the time (in milliseconds) that the largest element on the page took to render.   The LCP is an important user-centric metric for measuring load speed. It marks the point when the page&#39;s main content is likely loaded. A low LCP indicates that the page loads quickly.
   * @return largestContentfulPaint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The largest contentful paint (LCP) is the time (in milliseconds) that the largest element on the page took to render.   The LCP is an important user-centric metric for measuring load speed. It marks the point when the page's main content is likely loaded. A low LCP indicates that the page loads quickly.")
  @JsonProperty(JSON_PROPERTY_LARGEST_CONTENTFUL_PAINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLargestContentfulPaint() {
    return largestContentfulPaint;
  }


  @JsonProperty(JSON_PROPERTY_LARGEST_CONTENTFUL_PAINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLargestContentfulPaint(Integer largestContentfulPaint) {
    this.largestContentfulPaint = largestContentfulPaint;
  }


  public UserSessionUserAction firstInputDelay(Integer firstInputDelay) {
    this.firstInputDelay = firstInputDelay;
    return this;
  }

   /**
   * The first input delay (FID) is the time (in milliseconds) that the browser took to respond to the first user input.   The FID is an important user-centric metric for measuring load responsiveness. It quantifies the user experience when trying to interact with unresponsive pages. A low FID indicates that the page is usable.
   * @return firstInputDelay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The first input delay (FID) is the time (in milliseconds) that the browser took to respond to the first user input.   The FID is an important user-centric metric for measuring load responsiveness. It quantifies the user experience when trying to interact with unresponsive pages. A low FID indicates that the page is usable.")
  @JsonProperty(JSON_PROPERTY_FIRST_INPUT_DELAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFirstInputDelay() {
    return firstInputDelay;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_INPUT_DELAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstInputDelay(Integer firstInputDelay) {
    this.firstInputDelay = firstInputDelay;
  }


  public UserSessionUserAction totalBlockingTime(Integer totalBlockingTime) {
    this.totalBlockingTime = totalBlockingTime;
    return this;
  }

   /**
   * The total blocking time is the total time (in milliseconds) between the first contentful paint and the time to interactive, during which the browser has been blocked long enough to prevent input responsiveness.
   * @return totalBlockingTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total blocking time is the total time (in milliseconds) between the first contentful paint and the time to interactive, during which the browser has been blocked long enough to prevent input responsiveness.")
  @JsonProperty(JSON_PROPERTY_TOTAL_BLOCKING_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalBlockingTime() {
    return totalBlockingTime;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_BLOCKING_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalBlockingTime(Integer totalBlockingTime) {
    this.totalBlockingTime = totalBlockingTime;
  }


  public UserSessionUserAction cumulativeLayoutShift(Double cumulativeLayoutShift) {
    this.cumulativeLayoutShift = cumulativeLayoutShift;
    return this;
  }

   /**
   * The cumulative layout shift (CLS) is the total amount of all individual scores for every unexpected layout shift that occurs during the entire lifespan of the page.   The CLS is an important user-centric metric for measuring visual stability. It quantifies how often users experience unexpected layout shifts. A low CLS indicates that the page is delightful.
   * @return cumulativeLayoutShift
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The cumulative layout shift (CLS) is the total amount of all individual scores for every unexpected layout shift that occurs during the entire lifespan of the page.   The CLS is an important user-centric metric for measuring visual stability. It quantifies how often users experience unexpected layout shifts. A low CLS indicates that the page is delightful.")
  @JsonProperty(JSON_PROPERTY_CUMULATIVE_LAYOUT_SHIFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getCumulativeLayoutShift() {
    return cumulativeLayoutShift;
  }


  @JsonProperty(JSON_PROPERTY_CUMULATIVE_LAYOUT_SHIFT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCumulativeLayoutShift(Double cumulativeLayoutShift) {
    this.cumulativeLayoutShift = cumulativeLayoutShift;
  }


  /**
   * Return true if this UserSessionUserAction object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserSessionUserAction userSessionUserAction = (UserSessionUserAction) o;
    return Objects.equals(this.name, userSessionUserAction.name) &&
        Objects.equals(this.domain, userSessionUserAction.domain) &&
        Objects.equals(this.targetUrl, userSessionUserAction.targetUrl) &&
        Objects.equals(this.type, userSessionUserAction.type) &&
        Objects.equals(this.startTime, userSessionUserAction.startTime) &&
        Objects.equals(this.endTime, userSessionUserAction.endTime) &&
        Objects.equals(this.duration, userSessionUserAction.duration) &&
        Objects.equals(this.application, userSessionUserAction.application) &&
        Objects.equals(this.internalApplicationId, userSessionUserAction.internalApplicationId) &&
        Objects.equals(this.internalKeyUserActionId, userSessionUserAction.internalKeyUserActionId) &&
        Objects.equals(this.speedIndex, userSessionUserAction.speedIndex) &&
        Objects.equals(this.apdexCategory, userSessionUserAction.apdexCategory) &&
        Objects.equals(this.matchingConversionGoals, userSessionUserAction.matchingConversionGoals) &&
        Objects.equals(this.networkTime, userSessionUserAction.networkTime) &&
        Objects.equals(this.serverTime, userSessionUserAction.serverTime) &&
        Objects.equals(this.frontendTime, userSessionUserAction.frontendTime) &&
        Objects.equals(this.documentInteractiveTime, userSessionUserAction.documentInteractiveTime) &&
        Objects.equals(this.thirdPartyResources, userSessionUserAction.thirdPartyResources) &&
        Objects.equals(this.thirdPartyBusyTime, userSessionUserAction.thirdPartyBusyTime) &&
        Objects.equals(this.cdnResources, userSessionUserAction.cdnResources) &&
        Objects.equals(this.cdnBusyTime, userSessionUserAction.cdnBusyTime) &&
        Objects.equals(this.firstPartyResources, userSessionUserAction.firstPartyResources) &&
        Objects.equals(this.firstPartyBusyTime, userSessionUserAction.firstPartyBusyTime) &&
        Objects.equals(this.hasCrash, userSessionUserAction.hasCrash) &&
        Objects.equals(this.domCompleteTime, userSessionUserAction.domCompleteTime) &&
        Objects.equals(this.domContentLoadedTime, userSessionUserAction.domContentLoadedTime) &&
        Objects.equals(this.loadEventStart, userSessionUserAction.loadEventStart) &&
        Objects.equals(this.loadEventEnd, userSessionUserAction.loadEventEnd) &&
        Objects.equals(this.navigationStart, userSessionUserAction.navigationStart) &&
        Objects.equals(this.requestStart, userSessionUserAction.requestStart) &&
        Objects.equals(this.responseStart, userSessionUserAction.responseStart) &&
        Objects.equals(this.responseEnd, userSessionUserAction.responseEnd) &&
        Objects.equals(this.visuallyCompleteTime, userSessionUserAction.visuallyCompleteTime) &&
        Objects.equals(this.syntheticEvent, userSessionUserAction.syntheticEvent) &&
        Objects.equals(this.syntheticEventId, userSessionUserAction.syntheticEventId) &&
        Objects.equals(this.keyUserAction, userSessionUserAction.keyUserAction) &&
        Objects.equals(this.stringProperties, userSessionUserAction.stringProperties) &&
        Objects.equals(this.longProperties, userSessionUserAction.longProperties) &&
        Objects.equals(this.doubleProperties, userSessionUserAction.doubleProperties) &&
        Objects.equals(this.dateProperties, userSessionUserAction.dateProperties) &&
        Objects.equals(this.userActionPropertyCount, userSessionUserAction.userActionPropertyCount) &&
        Objects.equals(this.customErrorCount, userSessionUserAction.customErrorCount) &&
        Objects.equals(this.javascriptErrorCount, userSessionUserAction.javascriptErrorCount) &&
        Objects.equals(this.requestErrorCount, userSessionUserAction.requestErrorCount) &&
        Objects.equals(this.largestContentfulPaint, userSessionUserAction.largestContentfulPaint) &&
        Objects.equals(this.firstInputDelay, userSessionUserAction.firstInputDelay) &&
        Objects.equals(this.totalBlockingTime, userSessionUserAction.totalBlockingTime) &&
        Objects.equals(this.cumulativeLayoutShift, userSessionUserAction.cumulativeLayoutShift);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, domain, targetUrl, type, startTime, endTime, duration, application, internalApplicationId, internalKeyUserActionId, speedIndex, apdexCategory, matchingConversionGoals, networkTime, serverTime, frontendTime, documentInteractiveTime, thirdPartyResources, thirdPartyBusyTime, cdnResources, cdnBusyTime, firstPartyResources, firstPartyBusyTime, hasCrash, domCompleteTime, domContentLoadedTime, loadEventStart, loadEventEnd, navigationStart, requestStart, responseStart, responseEnd, visuallyCompleteTime, syntheticEvent, syntheticEventId, keyUserAction, stringProperties, longProperties, doubleProperties, dateProperties, userActionPropertyCount, customErrorCount, javascriptErrorCount, requestErrorCount, largestContentfulPaint, firstInputDelay, totalBlockingTime, cumulativeLayoutShift);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserSessionUserAction {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    targetUrl: ").append(toIndentedString(targetUrl)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    application: ").append(toIndentedString(application)).append("\n");
    sb.append("    internalApplicationId: ").append(toIndentedString(internalApplicationId)).append("\n");
    sb.append("    internalKeyUserActionId: ").append(toIndentedString(internalKeyUserActionId)).append("\n");
    sb.append("    speedIndex: ").append(toIndentedString(speedIndex)).append("\n");
    sb.append("    apdexCategory: ").append(toIndentedString(apdexCategory)).append("\n");
    sb.append("    matchingConversionGoals: ").append(toIndentedString(matchingConversionGoals)).append("\n");
    sb.append("    networkTime: ").append(toIndentedString(networkTime)).append("\n");
    sb.append("    serverTime: ").append(toIndentedString(serverTime)).append("\n");
    sb.append("    frontendTime: ").append(toIndentedString(frontendTime)).append("\n");
    sb.append("    documentInteractiveTime: ").append(toIndentedString(documentInteractiveTime)).append("\n");
    sb.append("    thirdPartyResources: ").append(toIndentedString(thirdPartyResources)).append("\n");
    sb.append("    thirdPartyBusyTime: ").append(toIndentedString(thirdPartyBusyTime)).append("\n");
    sb.append("    cdnResources: ").append(toIndentedString(cdnResources)).append("\n");
    sb.append("    cdnBusyTime: ").append(toIndentedString(cdnBusyTime)).append("\n");
    sb.append("    firstPartyResources: ").append(toIndentedString(firstPartyResources)).append("\n");
    sb.append("    firstPartyBusyTime: ").append(toIndentedString(firstPartyBusyTime)).append("\n");
    sb.append("    hasCrash: ").append(toIndentedString(hasCrash)).append("\n");
    sb.append("    domCompleteTime: ").append(toIndentedString(domCompleteTime)).append("\n");
    sb.append("    domContentLoadedTime: ").append(toIndentedString(domContentLoadedTime)).append("\n");
    sb.append("    loadEventStart: ").append(toIndentedString(loadEventStart)).append("\n");
    sb.append("    loadEventEnd: ").append(toIndentedString(loadEventEnd)).append("\n");
    sb.append("    navigationStart: ").append(toIndentedString(navigationStart)).append("\n");
    sb.append("    requestStart: ").append(toIndentedString(requestStart)).append("\n");
    sb.append("    responseStart: ").append(toIndentedString(responseStart)).append("\n");
    sb.append("    responseEnd: ").append(toIndentedString(responseEnd)).append("\n");
    sb.append("    visuallyCompleteTime: ").append(toIndentedString(visuallyCompleteTime)).append("\n");
    sb.append("    syntheticEvent: ").append(toIndentedString(syntheticEvent)).append("\n");
    sb.append("    syntheticEventId: ").append(toIndentedString(syntheticEventId)).append("\n");
    sb.append("    keyUserAction: ").append(toIndentedString(keyUserAction)).append("\n");
    sb.append("    stringProperties: ").append(toIndentedString(stringProperties)).append("\n");
    sb.append("    longProperties: ").append(toIndentedString(longProperties)).append("\n");
    sb.append("    doubleProperties: ").append(toIndentedString(doubleProperties)).append("\n");
    sb.append("    dateProperties: ").append(toIndentedString(dateProperties)).append("\n");
    sb.append("    userActionPropertyCount: ").append(toIndentedString(userActionPropertyCount)).append("\n");
    sb.append("    customErrorCount: ").append(toIndentedString(customErrorCount)).append("\n");
    sb.append("    javascriptErrorCount: ").append(toIndentedString(javascriptErrorCount)).append("\n");
    sb.append("    requestErrorCount: ").append(toIndentedString(requestErrorCount)).append("\n");
    sb.append("    largestContentfulPaint: ").append(toIndentedString(largestContentfulPaint)).append("\n");
    sb.append("    firstInputDelay: ").append(toIndentedString(firstInputDelay)).append("\n");
    sb.append("    totalBlockingTime: ").append(toIndentedString(totalBlockingTime)).append("\n");
    sb.append("    cumulativeLayoutShift: ").append(toIndentedString(cumulativeLayoutShift)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

