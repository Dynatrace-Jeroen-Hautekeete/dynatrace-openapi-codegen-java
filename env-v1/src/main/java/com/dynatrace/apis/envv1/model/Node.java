/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Configuration of a synthetic node.    A *synthetic node* is an ActiveGate that is able to execute synthetic monitors.
 */
@ApiModel(description = "Configuration of a synthetic node.    A *synthetic node* is an ActiveGate that is able to execute synthetic monitors.")
@JsonPropertyOrder({
  Node.JSON_PROPERTY_ENTITY_ID,
  Node.JSON_PROPERTY_HOSTNAME,
  Node.JSON_PROPERTY_IPS,
  Node.JSON_PROPERTY_VERSION,
  Node.JSON_PROPERTY_BROWSER_MONITORS_ENABLED,
  Node.JSON_PROPERTY_ACTIVE_GATE_VERSION,
  Node.JSON_PROPERTY_ONE_AGENT_ROUTING_ENABLED,
  Node.JSON_PROPERTY_OPERATING_SYSTEM,
  Node.JSON_PROPERTY_AUTO_UPDATE_ENABLED,
  Node.JSON_PROPERTY_STATUS,
  Node.JSON_PROPERTY_PLAYER_VERSION,
  Node.JSON_PROPERTY_HEALTH_CHECK_STATUS,
  Node.JSON_PROPERTY_BROWSER_TYPE,
  Node.JSON_PROPERTY_BROWSER_VERSION
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class Node {
  public static final String JSON_PROPERTY_ENTITY_ID = "entityId";
  private String entityId;

  public static final String JSON_PROPERTY_HOSTNAME = "hostname";
  private String hostname;

  public static final String JSON_PROPERTY_IPS = "ips";
  private List<String> ips = new ArrayList<>();

  public static final String JSON_PROPERTY_VERSION = "version";
  private String version;

  public static final String JSON_PROPERTY_BROWSER_MONITORS_ENABLED = "browserMonitorsEnabled";
  private Boolean browserMonitorsEnabled;

  public static final String JSON_PROPERTY_ACTIVE_GATE_VERSION = "activeGateVersion";
  private String activeGateVersion;

  public static final String JSON_PROPERTY_ONE_AGENT_ROUTING_ENABLED = "oneAgentRoutingEnabled";
  private Boolean oneAgentRoutingEnabled;

  public static final String JSON_PROPERTY_OPERATING_SYSTEM = "operatingSystem";
  private String operatingSystem;

  public static final String JSON_PROPERTY_AUTO_UPDATE_ENABLED = "autoUpdateEnabled";
  private Boolean autoUpdateEnabled;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_PLAYER_VERSION = "playerVersion";
  private String playerVersion;

  public static final String JSON_PROPERTY_HEALTH_CHECK_STATUS = "healthCheckStatus";
  private String healthCheckStatus;

  public static final String JSON_PROPERTY_BROWSER_TYPE = "browserType";
  private String browserType;

  public static final String JSON_PROPERTY_BROWSER_VERSION = "browserVersion";
  private String browserVersion;

  public Node() { 
  }

  public Node entityId(String entityId) {
    this.entityId = entityId;
    return this;
  }

   /**
   * The ID of the synthetic node.
   * @return entityId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The ID of the synthetic node.")
  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEntityId() {
    return entityId;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }


  public Node hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * The hostname of the synthetic node.
   * @return hostname
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The hostname of the synthetic node.")
  @JsonProperty(JSON_PROPERTY_HOSTNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHostname() {
    return hostname;
  }


  @JsonProperty(JSON_PROPERTY_HOSTNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHostname(String hostname) {
    this.hostname = hostname;
  }


  public Node ips(List<String> ips) {
    this.ips = ips;
    return this;
  }

  public Node addIpsItem(String ipsItem) {
    this.ips.add(ipsItem);
    return this;
  }

   /**
   * The IP of the synthetic node.
   * @return ips
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The IP of the synthetic node.")
  @JsonProperty(JSON_PROPERTY_IPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getIps() {
    return ips;
  }


  @JsonProperty(JSON_PROPERTY_IPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIps(List<String> ips) {
    this.ips = ips;
  }


  public Node version(String version) {
    this.version = version;
    return this;
  }

   /**
   * The version of the synthetic node.
   * @return version
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The version of the synthetic node.")
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVersion(String version) {
    this.version = version;
  }


  public Node browserMonitorsEnabled(Boolean browserMonitorsEnabled) {
    this.browserMonitorsEnabled = browserMonitorsEnabled;
    return this;
  }

   /**
   * The synthetic node is able to execute browser monitors (&#x60;true&#x60;) or not (&#x60;false&#x60;).
   * @return browserMonitorsEnabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The synthetic node is able to execute browser monitors (`true`) or not (`false`).")
  @JsonProperty(JSON_PROPERTY_BROWSER_MONITORS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getBrowserMonitorsEnabled() {
    return browserMonitorsEnabled;
  }


  @JsonProperty(JSON_PROPERTY_BROWSER_MONITORS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBrowserMonitorsEnabled(Boolean browserMonitorsEnabled) {
    this.browserMonitorsEnabled = browserMonitorsEnabled;
  }


  public Node activeGateVersion(String activeGateVersion) {
    this.activeGateVersion = activeGateVersion;
    return this;
  }

   /**
   * The version of the Active Gate.
   * @return activeGateVersion
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The version of the Active Gate.")
  @JsonProperty(JSON_PROPERTY_ACTIVE_GATE_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getActiveGateVersion() {
    return activeGateVersion;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_GATE_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setActiveGateVersion(String activeGateVersion) {
    this.activeGateVersion = activeGateVersion;
  }


  public Node oneAgentRoutingEnabled(Boolean oneAgentRoutingEnabled) {
    this.oneAgentRoutingEnabled = oneAgentRoutingEnabled;
    return this;
  }

   /**
   * The Active Gate has the One Agent routing enabled (&#39;true&#39;) or not (&#39;false&#39;).
   * @return oneAgentRoutingEnabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The Active Gate has the One Agent routing enabled ('true') or not ('false').")
  @JsonProperty(JSON_PROPERTY_ONE_AGENT_ROUTING_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getOneAgentRoutingEnabled() {
    return oneAgentRoutingEnabled;
  }


  @JsonProperty(JSON_PROPERTY_ONE_AGENT_ROUTING_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOneAgentRoutingEnabled(Boolean oneAgentRoutingEnabled) {
    this.oneAgentRoutingEnabled = oneAgentRoutingEnabled;
  }


  public Node operatingSystem(String operatingSystem) {
    this.operatingSystem = operatingSystem;
    return this;
  }

   /**
   * The Active Gate&#39;s host operating system.
   * @return operatingSystem
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The Active Gate's host operating system.")
  @JsonProperty(JSON_PROPERTY_OPERATING_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOperatingSystem() {
    return operatingSystem;
  }


  @JsonProperty(JSON_PROPERTY_OPERATING_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOperatingSystem(String operatingSystem) {
    this.operatingSystem = operatingSystem;
  }


  public Node autoUpdateEnabled(Boolean autoUpdateEnabled) {
    this.autoUpdateEnabled = autoUpdateEnabled;
    return this;
  }

   /**
   * The Active Gate has the Auto update option enabled (&#39;true&#39;) or not (&#39;false&#39;)
   * @return autoUpdateEnabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The Active Gate has the Auto update option enabled ('true') or not ('false')")
  @JsonProperty(JSON_PROPERTY_AUTO_UPDATE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAutoUpdateEnabled() {
    return autoUpdateEnabled;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_UPDATE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAutoUpdateEnabled(Boolean autoUpdateEnabled) {
    this.autoUpdateEnabled = autoUpdateEnabled;
  }


  public Node status(String status) {
    this.status = status;
    return this;
  }

   /**
   * The status of the synthetic node.
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The status of the synthetic node.")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(String status) {
    this.status = status;
  }


  public Node playerVersion(String playerVersion) {
    this.playerVersion = playerVersion;
    return this;
  }

   /**
   * The version of the synthetic player.
   * @return playerVersion
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The version of the synthetic player.")
  @JsonProperty(JSON_PROPERTY_PLAYER_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPlayerVersion() {
    return playerVersion;
  }


  @JsonProperty(JSON_PROPERTY_PLAYER_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPlayerVersion(String playerVersion) {
    this.playerVersion = playerVersion;
  }


  public Node healthCheckStatus(String healthCheckStatus) {
    this.healthCheckStatus = healthCheckStatus;
    return this;
  }

   /**
   * The health check status of the synthetic node.
   * @return healthCheckStatus
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The health check status of the synthetic node.")
  @JsonProperty(JSON_PROPERTY_HEALTH_CHECK_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHealthCheckStatus() {
    return healthCheckStatus;
  }


  @JsonProperty(JSON_PROPERTY_HEALTH_CHECK_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHealthCheckStatus(String healthCheckStatus) {
    this.healthCheckStatus = healthCheckStatus;
  }


  public Node browserType(String browserType) {
    this.browserType = browserType;
    return this;
  }

   /**
   * The browser type.
   * @return browserType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The browser type.")
  @JsonProperty(JSON_PROPERTY_BROWSER_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBrowserType() {
    return browserType;
  }


  @JsonProperty(JSON_PROPERTY_BROWSER_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBrowserType(String browserType) {
    this.browserType = browserType;
  }


  public Node browserVersion(String browserVersion) {
    this.browserVersion = browserVersion;
    return this;
  }

   /**
   * The browser version.
   * @return browserVersion
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The browser version.")
  @JsonProperty(JSON_PROPERTY_BROWSER_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBrowserVersion() {
    return browserVersion;
  }


  @JsonProperty(JSON_PROPERTY_BROWSER_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBrowserVersion(String browserVersion) {
    this.browserVersion = browserVersion;
  }


  /**
   * Return true if this Node object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Node node = (Node) o;
    return Objects.equals(this.entityId, node.entityId) &&
        Objects.equals(this.hostname, node.hostname) &&
        Objects.equals(this.ips, node.ips) &&
        Objects.equals(this.version, node.version) &&
        Objects.equals(this.browserMonitorsEnabled, node.browserMonitorsEnabled) &&
        Objects.equals(this.activeGateVersion, node.activeGateVersion) &&
        Objects.equals(this.oneAgentRoutingEnabled, node.oneAgentRoutingEnabled) &&
        Objects.equals(this.operatingSystem, node.operatingSystem) &&
        Objects.equals(this.autoUpdateEnabled, node.autoUpdateEnabled) &&
        Objects.equals(this.status, node.status) &&
        Objects.equals(this.playerVersion, node.playerVersion) &&
        Objects.equals(this.healthCheckStatus, node.healthCheckStatus) &&
        Objects.equals(this.browserType, node.browserType) &&
        Objects.equals(this.browserVersion, node.browserVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityId, hostname, ips, version, browserMonitorsEnabled, activeGateVersion, oneAgentRoutingEnabled, operatingSystem, autoUpdateEnabled, status, playerVersion, healthCheckStatus, browserType, browserVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Node {\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    ips: ").append(toIndentedString(ips)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    browserMonitorsEnabled: ").append(toIndentedString(browserMonitorsEnabled)).append("\n");
    sb.append("    activeGateVersion: ").append(toIndentedString(activeGateVersion)).append("\n");
    sb.append("    oneAgentRoutingEnabled: ").append(toIndentedString(oneAgentRoutingEnabled)).append("\n");
    sb.append("    operatingSystem: ").append(toIndentedString(operatingSystem)).append("\n");
    sb.append("    autoUpdateEnabled: ").append(toIndentedString(autoUpdateEnabled)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    playerVersion: ").append(toIndentedString(playerVersion)).append("\n");
    sb.append("    healthCheckStatus: ").append(toIndentedString(healthCheckStatus)).append("\n");
    sb.append("    browserType: ").append(toIndentedString(browserType)).append("\n");
    sb.append("    browserVersion: ").append(toIndentedString(browserVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

