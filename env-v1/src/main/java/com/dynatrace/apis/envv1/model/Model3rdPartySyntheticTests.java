/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv1.model.Model3rdPartySyntheticLocation;
import com.dynatrace.apis.envv1.model.Model3rdPartySyntheticMonitor;
import com.dynatrace.apis.envv1.model.Model3rdPartySyntheticTestResult;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.LinkedHashSet;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Model3rdPartySyntheticTests
 */
@JsonPropertyOrder({
  Model3rdPartySyntheticTests.JSON_PROPERTY_SYNTHETIC_ENGINE_NAME,
  Model3rdPartySyntheticTests.JSON_PROPERTY_SYNTHETIC_ENGINE_ICON_URL,
  Model3rdPartySyntheticTests.JSON_PROPERTY_MESSAGE_TIMESTAMP,
  Model3rdPartySyntheticTests.JSON_PROPERTY_LOCATIONS,
  Model3rdPartySyntheticTests.JSON_PROPERTY_TESTS,
  Model3rdPartySyntheticTests.JSON_PROPERTY_TEST_RESULTS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class Model3rdPartySyntheticTests {
  public static final String JSON_PROPERTY_SYNTHETIC_ENGINE_NAME = "syntheticEngineName";
  private String syntheticEngineName;

  public static final String JSON_PROPERTY_SYNTHETIC_ENGINE_ICON_URL = "syntheticEngineIconUrl";
  private String syntheticEngineIconUrl;

  public static final String JSON_PROPERTY_MESSAGE_TIMESTAMP = "messageTimestamp";
  private Long messageTimestamp;

  public static final String JSON_PROPERTY_LOCATIONS = "locations";
  private Set<Model3rdPartySyntheticLocation> locations = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_TESTS = "tests";
  private Set<Model3rdPartySyntheticMonitor> tests = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_TEST_RESULTS = "testResults";
  private Set<Model3rdPartySyntheticTestResult> testResults = null;

  public Model3rdPartySyntheticTests() { 
  }

  public Model3rdPartySyntheticTests syntheticEngineName(String syntheticEngineName) {
    this.syntheticEngineName = syntheticEngineName;
    return this;
  }

   /**
   * The type of the third-party synthetic monitor.
   * @return syntheticEngineName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The type of the third-party synthetic monitor.")
  @JsonProperty(JSON_PROPERTY_SYNTHETIC_ENGINE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSyntheticEngineName() {
    return syntheticEngineName;
  }


  @JsonProperty(JSON_PROPERTY_SYNTHETIC_ENGINE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSyntheticEngineName(String syntheticEngineName) {
    this.syntheticEngineName = syntheticEngineName;
  }


  public Model3rdPartySyntheticTests syntheticEngineIconUrl(String syntheticEngineIconUrl) {
    this.syntheticEngineIconUrl = syntheticEngineIconUrl;
    return this;
  }

   /**
   * The URL of the third-party synthetic monitor icon.
   * @return syntheticEngineIconUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URL of the third-party synthetic monitor icon.")
  @JsonProperty(JSON_PROPERTY_SYNTHETIC_ENGINE_ICON_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSyntheticEngineIconUrl() {
    return syntheticEngineIconUrl;
  }


  @JsonProperty(JSON_PROPERTY_SYNTHETIC_ENGINE_ICON_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSyntheticEngineIconUrl(String syntheticEngineIconUrl) {
    this.syntheticEngineIconUrl = syntheticEngineIconUrl;
  }


  public Model3rdPartySyntheticTests messageTimestamp(Long messageTimestamp) {
    this.messageTimestamp = messageTimestamp;
    return this;
  }

   /**
   * The timestamp of the message creation, in UTC milliseconds.
   * @return messageTimestamp
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The timestamp of the message creation, in UTC milliseconds.")
  @JsonProperty(JSON_PROPERTY_MESSAGE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getMessageTimestamp() {
    return messageTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMessageTimestamp(Long messageTimestamp) {
    this.messageTimestamp = messageTimestamp;
  }


  public Model3rdPartySyntheticTests locations(Set<Model3rdPartySyntheticLocation> locations) {
    this.locations = locations;
    return this;
  }

  public Model3rdPartySyntheticTests addLocationsItem(Model3rdPartySyntheticLocation locationsItem) {
    this.locations.add(locationsItem);
    return this;
  }

   /**
   * The list of third-party synthetic locations.
   * @return locations
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The list of third-party synthetic locations.")
  @JsonProperty(JSON_PROPERTY_LOCATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<Model3rdPartySyntheticLocation> getLocations() {
    return locations;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_LOCATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocations(Set<Model3rdPartySyntheticLocation> locations) {
    this.locations = locations;
  }


  public Model3rdPartySyntheticTests tests(Set<Model3rdPartySyntheticMonitor> tests) {
    this.tests = tests;
    return this;
  }

  public Model3rdPartySyntheticTests addTestsItem(Model3rdPartySyntheticMonitor testsItem) {
    this.tests.add(testsItem);
    return this;
  }

   /**
   * The list of third-party synthetic monitors.
   * @return tests
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The list of third-party synthetic monitors.")
  @JsonProperty(JSON_PROPERTY_TESTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<Model3rdPartySyntheticMonitor> getTests() {
    return tests;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_TESTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTests(Set<Model3rdPartySyntheticMonitor> tests) {
    this.tests = tests;
  }


  public Model3rdPartySyntheticTests testResults(Set<Model3rdPartySyntheticTestResult> testResults) {
    this.testResults = testResults;
    return this;
  }

  public Model3rdPartySyntheticTests addTestResultsItem(Model3rdPartySyntheticTestResult testResultsItem) {
    if (this.testResults == null) {
      this.testResults = new LinkedHashSet<>();
    }
    this.testResults.add(testResultsItem);
    return this;
  }

   /**
   * The list of results of third-party synthetic monitor execution.
   * @return testResults
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of results of third-party synthetic monitor execution.")
  @JsonProperty(JSON_PROPERTY_TEST_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<Model3rdPartySyntheticTestResult> getTestResults() {
    return testResults;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_TEST_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTestResults(Set<Model3rdPartySyntheticTestResult> testResults) {
    this.testResults = testResults;
  }


  /**
   * Return true if this 3rdPartySyntheticTests object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Model3rdPartySyntheticTests _3rdPartySyntheticTests = (Model3rdPartySyntheticTests) o;
    return Objects.equals(this.syntheticEngineName, _3rdPartySyntheticTests.syntheticEngineName) &&
        Objects.equals(this.syntheticEngineIconUrl, _3rdPartySyntheticTests.syntheticEngineIconUrl) &&
        Objects.equals(this.messageTimestamp, _3rdPartySyntheticTests.messageTimestamp) &&
        Objects.equals(this.locations, _3rdPartySyntheticTests.locations) &&
        Objects.equals(this.tests, _3rdPartySyntheticTests.tests) &&
        Objects.equals(this.testResults, _3rdPartySyntheticTests.testResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(syntheticEngineName, syntheticEngineIconUrl, messageTimestamp, locations, tests, testResults);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Model3rdPartySyntheticTests {\n");
    sb.append("    syntheticEngineName: ").append(toIndentedString(syntheticEngineName)).append("\n");
    sb.append("    syntheticEngineIconUrl: ").append(toIndentedString(syntheticEngineIconUrl)).append("\n");
    sb.append("    messageTimestamp: ").append(toIndentedString(messageTimestamp)).append("\n");
    sb.append("    locations: ").append(toIndentedString(locations)).append("\n");
    sb.append("    tests: ").append(toIndentedString(tests)).append("\n");
    sb.append("    testResults: ").append(toIndentedString(testResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

