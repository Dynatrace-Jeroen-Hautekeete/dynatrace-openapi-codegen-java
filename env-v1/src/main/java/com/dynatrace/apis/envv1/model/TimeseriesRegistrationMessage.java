/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The definition of a custom metric.
 */
@ApiModel(description = "The definition of a custom metric.")
@JsonPropertyOrder({
  TimeseriesRegistrationMessage.JSON_PROPERTY_DISPLAY_NAME,
  TimeseriesRegistrationMessage.JSON_PROPERTY_UNIT,
  TimeseriesRegistrationMessage.JSON_PROPERTY_DIMENSIONS,
  TimeseriesRegistrationMessage.JSON_PROPERTY_TYPES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class TimeseriesRegistrationMessage {
  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  /**
   * The unit the metric will use.    To edit the value of that field, you need the **Write configuration** (&#x60;WriteConfig&#x60;) or the **Write settings** (&#x60;settings.write&#x60;) permission assigned to your API token.
   */
  public enum UnitEnum {
    BILLION_BILCOUNT_("Billion (bilcount)"),
    
    BIT_BIT_("Bit (bit)"),
    
    BITPERHOUR_BIT_H_("BitPerHour (bit/h)"),
    
    BITPERMINUTE_BIT_MIN_("BitPerMinute (bit/min)"),
    
    BITPERSECOND_BIT_S_("BitPerSecond (bit/s)"),
    
    BYTE_B_("Byte (B)"),
    
    BYTEPERHOUR_B_H_("BytePerHour (B/h)"),
    
    BYTEPERMINUTE_B_MIN_("BytePerMinute (B/min)"),
    
    BYTEPERSECOND_B_S_("BytePerSecond (B/s)"),
    
    CORES("Cores"),
    
    COUNT_COUNT_("Count (count)"),
    
    DAY_DS_("Day (ds)"),
    
    DECIBELMILLIWATT_DBM_("DecibelMilliWatt (dBm)"),
    
    G("G"),
    
    GIBIBYTE_GIB_("GibiByte (GiB)"),
    
    GIGABYTE_GB_("GigaByte (GB)"),
    
    HOUR_HS_("Hour (hs)"),
    
    KIBIBYTE_KIB_("KibiByte (KiB)"),
    
    KIBIBYTEPERHOUR_KIB_H_("KibiBytePerHour (KiB/h)"),
    
    KIBIBYTEPERMINUTE_KIB_MIN_("KibiBytePerMinute (KiB/min)"),
    
    KIBIBYTEPERSECOND_KIB_S_("KibiBytePerSecond (KiB/s)"),
    
    KILOBYTE_KB_("KiloByte (kB)"),
    
    KILOBYTEPERHOUR_KB_H_("KiloBytePerHour (kB/h)"),
    
    KILOBYTEPERMINUTE_KB_MIN_("KiloBytePerMinute (kB/min)"),
    
    KILOBYTEPERSECOND_KB_S_("KiloBytePerSecond (kB/s)"),
    
    M("M"),
    
    MSU("MSU"),
    
    MEBIBYTE_MIB_("MebiByte (MiB)"),
    
    MEBIBYTEPERHOUR_MIB_H_("MebiBytePerHour (MiB/h)"),
    
    MEBIBYTEPERMINUTE_MIB_MIN_("MebiBytePerMinute (MiB/min)"),
    
    MEBIBYTEPERSECOND_MIB_S_("MebiBytePerSecond (MiB/s)"),
    
    MEGABYTE_MB_("MegaByte (MB)"),
    
    MEGABYTEPERHOUR_MB_H_("MegaBytePerHour (MB/h)"),
    
    MEGABYTEPERMINUTE_MB_MIN_("MegaBytePerMinute (MB/min)"),
    
    MEGABYTEPERSECOND_MB_S_("MegaBytePerSecond (MB/s)"),
    
    MICROSECOND_S_("MicroSecond (µs)"),
    
    MILLISECOND_MS_("MilliSecond (ms)"),
    
    MILLISECONDPERMINUTE_MS_MIN_("MilliSecondPerMinute (ms/min)"),
    
    MILLION_MILCOUNT_("Million (milcount)"),
    
    MINUTE_MINS_("Minute (mins)"),
    
    MONTH_MOS_("Month (mos)"),
    
    N_A("N/A"),
    
    NANOSECOND_NS_("NanoSecond (ns)"),
    
    NANOSECONDPERMINUTE_NS_MIN_("NanoSecondPerMinute (ns/min)"),
    
    PERHOUR_COUNT_H_("PerHour (count/h)"),
    
    PERMINUTE_COUNT_MIN_("PerMinute (count/min)"),
    
    PERSECOND_COUNT_S_("PerSecond (count/s)"),
    
    PERCENT_("Percent (%)"),
    
    PIXEL_PX_("Pixel (px)"),
    
    PROMILLE_("Promille (‰)"),
    
    RATIO("Ratio"),
    
    SECOND_S_("Second (s)"),
    
    STATE("State"),
    
    UNSPECIFIED("Unspecified"),
    
    WEEK_WS_("Week (ws)"),
    
    YEAR_YS_("Year (ys)"),
    
    K("k"),
    
    KM_H("km/h"),
    
    M_H("m/h"),
    
    M_S("m/s"),
    
    MCORES("mCores");

    private String value;

    UnitEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static UnitEnum fromValue(String value) {
      for (UnitEnum b : UnitEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_UNIT = "unit";
  private UnitEnum unit;

  public static final String JSON_PROPERTY_DIMENSIONS = "dimensions";
  private List<String> dimensions = null;

  public static final String JSON_PROPERTY_TYPES = "types";
  private Set<String> types = null;

  public TimeseriesRegistrationMessage() { 
  }

  public TimeseriesRegistrationMessage displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * The name of the metric that will appear in the user interface. It is limited to 256 characters.   To edit the value of that field, you need the **Write configuration** (&#x60;WriteConfig&#x60;) or the **Write settings** (&#x60;settings.write&#x60;) permission assigned to your API token.
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the metric that will appear in the user interface. It is limited to 256 characters.   To edit the value of that field, you need the **Write configuration** (`WriteConfig`) or the **Write settings** (`settings.write`) permission assigned to your API token.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public TimeseriesRegistrationMessage unit(UnitEnum unit) {
    this.unit = unit;
    return this;
  }

   /**
   * The unit the metric will use.    To edit the value of that field, you need the **Write configuration** (&#x60;WriteConfig&#x60;) or the **Write settings** (&#x60;settings.write&#x60;) permission assigned to your API token.
   * @return unit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unit the metric will use.    To edit the value of that field, you need the **Write configuration** (`WriteConfig`) or the **Write settings** (`settings.write`) permission assigned to your API token.")
  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UnitEnum getUnit() {
    return unit;
  }


  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnit(UnitEnum unit) {
    this.unit = unit;
  }


  public TimeseriesRegistrationMessage dimensions(List<String> dimensions) {
    this.dimensions = dimensions;
    return this;
  }

  public TimeseriesRegistrationMessage addDimensionsItem(String dimensionsItem) {
    if (this.dimensions == null) {
      this.dimensions = new ArrayList<>();
    }
    this.dimensions.add(dimensionsItem);
    return this;
  }

   /**
   * The metric dimension key that will be used to report multiple dimensions. For example, a dimension key to report the metric for different network cards for the same firewall.   You can use alphanumeric characters and the following punctuation marks: periods (&#x60;.&#x60;), hyphens (&#x60;-&#x60;), and underscores (&#x60;_&#x60;).   The CUSTOM_DEVICE dimension is added to each new custom metric automatically.   The length of dimension keys and values is limited to **128 characters** each.
   * @return dimensions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The metric dimension key that will be used to report multiple dimensions. For example, a dimension key to report the metric for different network cards for the same firewall.   You can use alphanumeric characters and the following punctuation marks: periods (`.`), hyphens (`-`), and underscores (`_`).   The CUSTOM_DEVICE dimension is added to each new custom metric automatically.   The length of dimension keys and values is limited to **128 characters** each.")
  @JsonProperty(JSON_PROPERTY_DIMENSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getDimensions() {
    return dimensions;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensions(List<String> dimensions) {
    this.dimensions = dimensions;
  }


  public TimeseriesRegistrationMessage types(Set<String> types) {
    this.types = types;
    return this;
  }

  public TimeseriesRegistrationMessage addTypesItem(String typesItem) {
    if (this.types == null) {
      this.types = new LinkedHashSet<>();
    }
    this.types.add(typesItem);
    return this;
  }

   /**
   * The definition of the technology type. It is used to group metrics under a logical technology name in the UI.   Metrics must be assigned a software technology type that is identical to the technology type of the custom device you are sending the metric to.   For example, if you define your custom device using type &#x60;F5-Firewall&#x60; you must also register all related custom metrics as type &#x60;F5-Firewall&#x60;.   The field is **required** when creating a new metric.
   * @return types
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The definition of the technology type. It is used to group metrics under a logical technology name in the UI.   Metrics must be assigned a software technology type that is identical to the technology type of the custom device you are sending the metric to.   For example, if you define your custom device using type `F5-Firewall` you must also register all related custom metrics as type `F5-Firewall`.   The field is **required** when creating a new metric.")
  @JsonProperty(JSON_PROPERTY_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getTypes() {
    return types;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTypes(Set<String> types) {
    this.types = types;
  }


  /**
   * Return true if this TimeseriesRegistrationMessage object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TimeseriesRegistrationMessage timeseriesRegistrationMessage = (TimeseriesRegistrationMessage) o;
    return Objects.equals(this.displayName, timeseriesRegistrationMessage.displayName) &&
        Objects.equals(this.unit, timeseriesRegistrationMessage.unit) &&
        Objects.equals(this.dimensions, timeseriesRegistrationMessage.dimensions) &&
        Objects.equals(this.types, timeseriesRegistrationMessage.types);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, unit, dimensions, types);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TimeseriesRegistrationMessage {\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    dimensions: ").append(toIndentedString(dimensions)).append("\n");
    sb.append("    types: ").append(toIndentedString(types)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

