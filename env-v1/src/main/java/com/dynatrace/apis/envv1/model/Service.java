/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv1.model.EntityShortRepresentation;
import com.dynatrace.apis.envv1.model.ServiceFromRelationships;
import com.dynatrace.apis.envv1.model.ServiceToRelationships;
import com.dynatrace.apis.envv1.model.TagInfo;
import com.dynatrace.apis.envv1.model.TechnologyInfo;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Service
 */
@JsonPropertyOrder({
  Service.JSON_PROPERTY_ENTITY_ID,
  Service.JSON_PROPERTY_DISPLAY_NAME,
  Service.JSON_PROPERTY_CUSTOMIZED_NAME,
  Service.JSON_PROPERTY_DISCOVERED_NAME,
  Service.JSON_PROPERTY_FIRST_SEEN_TIMESTAMP,
  Service.JSON_PROPERTY_LAST_SEEN_TIMESTAMP,
  Service.JSON_PROPERTY_TAGS,
  Service.JSON_PROPERTY_FROM_RELATIONSHIPS,
  Service.JSON_PROPERTY_TO_RELATIONSHIPS,
  Service.JSON_PROPERTY_IIB_APPLICATION_NAME,
  Service.JSON_PROPERTY_ESB_APPLICATION_NAME,
  Service.JSON_PROPERTY_WEB_SERVICE_NAME,
  Service.JSON_PROPERTY_PATH,
  Service.JSON_PROPERTY_IBM_CTG_GATEWAY_URL,
  Service.JSON_PROPERTY_SOFTWARE_TECHNOLOGIES,
  Service.JSON_PROPERTY_IBM_CTG_SERVER_NAME,
  Service.JSON_PROPERTY_SERVICE_TECHNOLOGY_TYPES,
  Service.JSON_PROPERTY_DATABASE_HOST_NAMES,
  Service.JSON_PROPERTY_IP_ADDRESSES,
  Service.JSON_PROPERTY_IS_EXTERNAL_SERVICE,
  Service.JSON_PROPERTY_AKKA_ACTOR_SYSTEM,
  Service.JSON_PROPERTY_SERVICE_TYPE,
  Service.JSON_PROPERTY_PORT,
  Service.JSON_PROPERTY_DATABASE_VENDOR,
  Service.JSON_PROPERTY_WEB_SERVER_NAME,
  Service.JSON_PROPERTY_CLASS_NAME,
  Service.JSON_PROPERTY_REMOTE_SERVICE_NAME,
  Service.JSON_PROPERTY_REMOTE_ENDPOINT,
  Service.JSON_PROPERTY_MANAGEMENT_ZONES,
  Service.JSON_PROPERTY_DATABASE_NAME,
  Service.JSON_PROPERTY_AGENT_TECHNOLOGY_TYPE,
  Service.JSON_PROPERTY_CONTEXT_ROOT,
  Service.JSON_PROPERTY_WEB_SERVICE_NAMESPACE,
  Service.JSON_PROPERTY_WEB_APPLICATION_ID
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class Service {
  public static final String JSON_PROPERTY_ENTITY_ID = "entityId";
  private String entityId;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_CUSTOMIZED_NAME = "customizedName";
  private String customizedName;

  public static final String JSON_PROPERTY_DISCOVERED_NAME = "discoveredName";
  private String discoveredName;

  public static final String JSON_PROPERTY_FIRST_SEEN_TIMESTAMP = "firstSeenTimestamp";
  private Long firstSeenTimestamp;

  public static final String JSON_PROPERTY_LAST_SEEN_TIMESTAMP = "lastSeenTimestamp";
  private Long lastSeenTimestamp;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private Set<TagInfo> tags = null;

  public static final String JSON_PROPERTY_FROM_RELATIONSHIPS = "fromRelationships";
  private ServiceFromRelationships fromRelationships;

  public static final String JSON_PROPERTY_TO_RELATIONSHIPS = "toRelationships";
  private ServiceToRelationships toRelationships;

  public static final String JSON_PROPERTY_IIB_APPLICATION_NAME = "iibApplicationName";
  private String iibApplicationName;

  public static final String JSON_PROPERTY_ESB_APPLICATION_NAME = "esbApplicationName";
  private String esbApplicationName;

  public static final String JSON_PROPERTY_WEB_SERVICE_NAME = "webServiceName";
  private String webServiceName;

  public static final String JSON_PROPERTY_PATH = "path";
  private String path;

  public static final String JSON_PROPERTY_IBM_CTG_GATEWAY_URL = "ibmCtgGatewayUrl";
  private String ibmCtgGatewayUrl;

  public static final String JSON_PROPERTY_SOFTWARE_TECHNOLOGIES = "softwareTechnologies";
  private List<TechnologyInfo> softwareTechnologies = null;

  public static final String JSON_PROPERTY_IBM_CTG_SERVER_NAME = "ibmCtgServerName";
  private String ibmCtgServerName;

  public static final String JSON_PROPERTY_SERVICE_TECHNOLOGY_TYPES = "serviceTechnologyTypes";
  private List<String> serviceTechnologyTypes = null;

  public static final String JSON_PROPERTY_DATABASE_HOST_NAMES = "databaseHostNames";
  private List<String> databaseHostNames = null;

  public static final String JSON_PROPERTY_IP_ADDRESSES = "ipAddresses";
  private List<String> ipAddresses = null;

  public static final String JSON_PROPERTY_IS_EXTERNAL_SERVICE = "isExternalService";
  private Boolean isExternalService;

  public static final String JSON_PROPERTY_AKKA_ACTOR_SYSTEM = "akkaActorSystem";
  private String akkaActorSystem;

  /**
   * Gets or Sets serviceType
   */
  public enum ServiceTypeEnum {
    AMP("AMP"),
    
    CICS("Cics"),
    
    CICSINTERACTION("CicsInteraction"),
    
    CUSTOMAPPLICATION("CustomApplication"),
    
    DATABASE("Database"),
    
    ENTERPRISESERVICEBUS("EnterpriseServiceBus"),
    
    EXTERNAL("External"),
    
    IMS("Ims"),
    
    IMSINTERACTION("ImsInteraction"),
    
    MESSAGING("Messaging"),
    
    METHOD("Method"),
    
    MOBILE("Mobile"),
    
    PROCESS("Process"),
    
    QUEUEINTERACTION("QueueInteraction"),
    
    QUEUELISTENER("QueueListener"),
    
    REMOTECALL("RemoteCall"),
    
    RMI("Rmi"),
    
    SAASVENDOR("SaasVendor"),
    
    SPAN("Span"),
    
    UNKNOWN("Unknown"),
    
    WEBREQUEST("WebRequest"),
    
    WEBSERVICE("WebService"),
    
    WEBSITE("WebSite"),
    
    ZOSCONNECT("ZosConnect");

    private String value;

    ServiceTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ServiceTypeEnum fromValue(String value) {
      for (ServiceTypeEnum b : ServiceTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SERVICE_TYPE = "serviceType";
  private ServiceTypeEnum serviceType;

  public static final String JSON_PROPERTY_PORT = "port";
  private Integer port;

  public static final String JSON_PROPERTY_DATABASE_VENDOR = "databaseVendor";
  private String databaseVendor;

  public static final String JSON_PROPERTY_WEB_SERVER_NAME = "webServerName";
  private String webServerName;

  public static final String JSON_PROPERTY_CLASS_NAME = "className";
  private String className;

  public static final String JSON_PROPERTY_REMOTE_SERVICE_NAME = "remoteServiceName";
  private String remoteServiceName;

  public static final String JSON_PROPERTY_REMOTE_ENDPOINT = "remoteEndpoint";
  private String remoteEndpoint;

  public static final String JSON_PROPERTY_MANAGEMENT_ZONES = "managementZones";
  private List<EntityShortRepresentation> managementZones = null;

  public static final String JSON_PROPERTY_DATABASE_NAME = "databaseName";
  private String databaseName;

  /**
   * Gets or Sets agentTechnologyType
   */
  public enum AgentTechnologyTypeEnum {
    APACHE("APACHE"),
    
    DOTNET("DOTNET"),
    
    DUMPPROC("DUMPPROC"),
    
    GO("GO"),
    
    IIS("IIS"),
    
    JAVA("JAVA"),
    
    LOG_ANALYTICS("LOG_ANALYTICS"),
    
    N_A("N/A"),
    
    NET("NET"),
    
    NETTRACER("NETTRACER"),
    
    NGINX("NGINX"),
    
    NODEJS("NODEJS"),
    
    OPENTRACINGNATIVE("OPENTRACINGNATIVE"),
    
    OS("OS"),
    
    PHP("PHP"),
    
    PLUGIN("PLUGIN"),
    
    PROCESS("PROCESS"),
    
    PYTHON("PYTHON"),
    
    REMOTE_PLUGIN("REMOTE_PLUGIN"),
    
    RUBY("RUBY"),
    
    SDK("SDK"),
    
    UPDATER("UPDATER"),
    
    VARNISH("VARNISH"),
    
    WSMB("WSMB"),
    
    Z("Z");

    private String value;

    AgentTechnologyTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AgentTechnologyTypeEnum fromValue(String value) {
      for (AgentTechnologyTypeEnum b : AgentTechnologyTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AGENT_TECHNOLOGY_TYPE = "agentTechnologyType";
  private AgentTechnologyTypeEnum agentTechnologyType;

  public static final String JSON_PROPERTY_CONTEXT_ROOT = "contextRoot";
  private String contextRoot;

  public static final String JSON_PROPERTY_WEB_SERVICE_NAMESPACE = "webServiceNamespace";
  private String webServiceNamespace;

  public static final String JSON_PROPERTY_WEB_APPLICATION_ID = "webApplicationId";
  private String webApplicationId;

  public Service() { 
  }

  public Service entityId(String entityId) {
    this.entityId = entityId;
    return this;
  }

   /**
   * The Dynatrace entity ID of the required entity.
   * @return entityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Dynatrace entity ID of the required entity.")
  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEntityId() {
    return entityId;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }


  public Service displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * The name of the Dynatrace entity as displayed in the UI.
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the Dynatrace entity as displayed in the UI.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public Service customizedName(String customizedName) {
    this.customizedName = customizedName;
    return this;
  }

   /**
   * The customized name of the entity
   * @return customizedName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The customized name of the entity")
  @JsonProperty(JSON_PROPERTY_CUSTOMIZED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCustomizedName() {
    return customizedName;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMIZED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomizedName(String customizedName) {
    this.customizedName = customizedName;
  }


  public Service discoveredName(String discoveredName) {
    this.discoveredName = discoveredName;
    return this;
  }

   /**
   * The discovered name of the entity
   * @return discoveredName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The discovered name of the entity")
  @JsonProperty(JSON_PROPERTY_DISCOVERED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDiscoveredName() {
    return discoveredName;
  }


  @JsonProperty(JSON_PROPERTY_DISCOVERED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDiscoveredName(String discoveredName) {
    this.discoveredName = discoveredName;
  }


  public Service firstSeenTimestamp(Long firstSeenTimestamp) {
    this.firstSeenTimestamp = firstSeenTimestamp;
    return this;
  }

   /**
   * The timestamp of when the entity was first detected, in UTC milliseconds
   * @return firstSeenTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp of when the entity was first detected, in UTC milliseconds")
  @JsonProperty(JSON_PROPERTY_FIRST_SEEN_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getFirstSeenTimestamp() {
    return firstSeenTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_SEEN_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstSeenTimestamp(Long firstSeenTimestamp) {
    this.firstSeenTimestamp = firstSeenTimestamp;
  }


  public Service lastSeenTimestamp(Long lastSeenTimestamp) {
    this.lastSeenTimestamp = lastSeenTimestamp;
    return this;
  }

   /**
   * The timestamp of when the entity was last detected, in UTC milliseconds
   * @return lastSeenTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp of when the entity was last detected, in UTC milliseconds")
  @JsonProperty(JSON_PROPERTY_LAST_SEEN_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getLastSeenTimestamp() {
    return lastSeenTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_LAST_SEEN_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastSeenTimestamp(Long lastSeenTimestamp) {
    this.lastSeenTimestamp = lastSeenTimestamp;
  }


  public Service tags(Set<TagInfo> tags) {
    this.tags = tags;
    return this;
  }

  public Service addTagsItem(TagInfo tagsItem) {
    if (this.tags == null) {
      this.tags = new LinkedHashSet<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * The list of entity tags.
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of entity tags.")
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<TagInfo> getTags() {
    return tags;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(Set<TagInfo> tags) {
    this.tags = tags;
  }


  public Service fromRelationships(ServiceFromRelationships fromRelationships) {
    this.fromRelationships = fromRelationships;
    return this;
  }

   /**
   * Get fromRelationships
   * @return fromRelationships
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FROM_RELATIONSHIPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServiceFromRelationships getFromRelationships() {
    return fromRelationships;
  }


  @JsonProperty(JSON_PROPERTY_FROM_RELATIONSHIPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFromRelationships(ServiceFromRelationships fromRelationships) {
    this.fromRelationships = fromRelationships;
  }


  public Service toRelationships(ServiceToRelationships toRelationships) {
    this.toRelationships = toRelationships;
    return this;
  }

   /**
   * Get toRelationships
   * @return toRelationships
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TO_RELATIONSHIPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServiceToRelationships getToRelationships() {
    return toRelationships;
  }


  @JsonProperty(JSON_PROPERTY_TO_RELATIONSHIPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToRelationships(ServiceToRelationships toRelationships) {
    this.toRelationships = toRelationships;
  }


  public Service iibApplicationName(String iibApplicationName) {
    this.iibApplicationName = iibApplicationName;
    return this;
  }

   /**
   * The IIB application name.
   * @return iibApplicationName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IIB application name.")
  @JsonProperty(JSON_PROPERTY_IIB_APPLICATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIibApplicationName() {
    return iibApplicationName;
  }


  @JsonProperty(JSON_PROPERTY_IIB_APPLICATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIibApplicationName(String iibApplicationName) {
    this.iibApplicationName = iibApplicationName;
  }


  public Service esbApplicationName(String esbApplicationName) {
    this.esbApplicationName = esbApplicationName;
    return this;
  }

   /**
   * The ESB application name.
   * @return esbApplicationName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ESB application name.")
  @JsonProperty(JSON_PROPERTY_ESB_APPLICATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEsbApplicationName() {
    return esbApplicationName;
  }


  @JsonProperty(JSON_PROPERTY_ESB_APPLICATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEsbApplicationName(String esbApplicationName) {
    this.esbApplicationName = esbApplicationName;
  }


  public Service webServiceName(String webServiceName) {
    this.webServiceName = webServiceName;
    return this;
  }

   /**
   * Get webServiceName
   * @return webServiceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WEB_SERVICE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebServiceName() {
    return webServiceName;
  }


  @JsonProperty(JSON_PROPERTY_WEB_SERVICE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebServiceName(String webServiceName) {
    this.webServiceName = webServiceName;
  }


  public Service path(String path) {
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPath() {
    return path;
  }


  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPath(String path) {
    this.path = path;
  }


  public Service ibmCtgGatewayUrl(String ibmCtgGatewayUrl) {
    this.ibmCtgGatewayUrl = ibmCtgGatewayUrl;
    return this;
  }

   /**
   * The IBM CTG gateway URL.
   * @return ibmCtgGatewayUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IBM CTG gateway URL.")
  @JsonProperty(JSON_PROPERTY_IBM_CTG_GATEWAY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIbmCtgGatewayUrl() {
    return ibmCtgGatewayUrl;
  }


  @JsonProperty(JSON_PROPERTY_IBM_CTG_GATEWAY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIbmCtgGatewayUrl(String ibmCtgGatewayUrl) {
    this.ibmCtgGatewayUrl = ibmCtgGatewayUrl;
  }


  public Service softwareTechnologies(List<TechnologyInfo> softwareTechnologies) {
    this.softwareTechnologies = softwareTechnologies;
    return this;
  }

  public Service addSoftwareTechnologiesItem(TechnologyInfo softwareTechnologiesItem) {
    if (this.softwareTechnologies == null) {
      this.softwareTechnologies = new ArrayList<>();
    }
    this.softwareTechnologies.add(softwareTechnologiesItem);
    return this;
  }

   /**
   * Get softwareTechnologies
   * @return softwareTechnologies
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SOFTWARE_TECHNOLOGIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TechnologyInfo> getSoftwareTechnologies() {
    return softwareTechnologies;
  }


  @JsonProperty(JSON_PROPERTY_SOFTWARE_TECHNOLOGIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSoftwareTechnologies(List<TechnologyInfo> softwareTechnologies) {
    this.softwareTechnologies = softwareTechnologies;
  }


  public Service ibmCtgServerName(String ibmCtgServerName) {
    this.ibmCtgServerName = ibmCtgServerName;
    return this;
  }

   /**
   * The IBM CICS Transaction Gateway name.
   * @return ibmCtgServerName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IBM CICS Transaction Gateway name.")
  @JsonProperty(JSON_PROPERTY_IBM_CTG_SERVER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIbmCtgServerName() {
    return ibmCtgServerName;
  }


  @JsonProperty(JSON_PROPERTY_IBM_CTG_SERVER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIbmCtgServerName(String ibmCtgServerName) {
    this.ibmCtgServerName = ibmCtgServerName;
  }


  public Service serviceTechnologyTypes(List<String> serviceTechnologyTypes) {
    this.serviceTechnologyTypes = serviceTechnologyTypes;
    return this;
  }

  public Service addServiceTechnologyTypesItem(String serviceTechnologyTypesItem) {
    if (this.serviceTechnologyTypes == null) {
      this.serviceTechnologyTypes = new ArrayList<>();
    }
    this.serviceTechnologyTypes.add(serviceTechnologyTypesItem);
    return this;
  }

   /**
   * Get serviceTechnologyTypes
   * @return serviceTechnologyTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SERVICE_TECHNOLOGY_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getServiceTechnologyTypes() {
    return serviceTechnologyTypes;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_TECHNOLOGY_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceTechnologyTypes(List<String> serviceTechnologyTypes) {
    this.serviceTechnologyTypes = serviceTechnologyTypes;
  }


  public Service databaseHostNames(List<String> databaseHostNames) {
    this.databaseHostNames = databaseHostNames;
    return this;
  }

  public Service addDatabaseHostNamesItem(String databaseHostNamesItem) {
    if (this.databaseHostNames == null) {
      this.databaseHostNames = new ArrayList<>();
    }
    this.databaseHostNames.add(databaseHostNamesItem);
    return this;
  }

   /**
   * Get databaseHostNames
   * @return databaseHostNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATABASE_HOST_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getDatabaseHostNames() {
    return databaseHostNames;
  }


  @JsonProperty(JSON_PROPERTY_DATABASE_HOST_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatabaseHostNames(List<String> databaseHostNames) {
    this.databaseHostNames = databaseHostNames;
  }


  public Service ipAddresses(List<String> ipAddresses) {
    this.ipAddresses = ipAddresses;
    return this;
  }

  public Service addIpAddressesItem(String ipAddressesItem) {
    if (this.ipAddresses == null) {
      this.ipAddresses = new ArrayList<>();
    }
    this.ipAddresses.add(ipAddressesItem);
    return this;
  }

   /**
   * Get ipAddresses
   * @return ipAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IP_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getIpAddresses() {
    return ipAddresses;
  }


  @JsonProperty(JSON_PROPERTY_IP_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpAddresses(List<String> ipAddresses) {
    this.ipAddresses = ipAddresses;
  }


  public Service isExternalService(Boolean isExternalService) {
    this.isExternalService = isExternalService;
    return this;
  }

   /**
   * Get isExternalService
   * @return isExternalService
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IS_EXTERNAL_SERVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsExternalService() {
    return isExternalService;
  }


  @JsonProperty(JSON_PROPERTY_IS_EXTERNAL_SERVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsExternalService(Boolean isExternalService) {
    this.isExternalService = isExternalService;
  }


  public Service akkaActorSystem(String akkaActorSystem) {
    this.akkaActorSystem = akkaActorSystem;
    return this;
  }

   /**
   * The services of the akka actor system.
   * @return akkaActorSystem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The services of the akka actor system.")
  @JsonProperty(JSON_PROPERTY_AKKA_ACTOR_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAkkaActorSystem() {
    return akkaActorSystem;
  }


  @JsonProperty(JSON_PROPERTY_AKKA_ACTOR_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAkkaActorSystem(String akkaActorSystem) {
    this.akkaActorSystem = akkaActorSystem;
  }


  public Service serviceType(ServiceTypeEnum serviceType) {
    this.serviceType = serviceType;
    return this;
  }

   /**
   * Get serviceType
   * @return serviceType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SERVICE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServiceTypeEnum getServiceType() {
    return serviceType;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceType(ServiceTypeEnum serviceType) {
    this.serviceType = serviceType;
  }


  public Service port(Integer port) {
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPort() {
    return port;
  }


  @JsonProperty(JSON_PROPERTY_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPort(Integer port) {
    this.port = port;
  }


  public Service databaseVendor(String databaseVendor) {
    this.databaseVendor = databaseVendor;
    return this;
  }

   /**
   * Get databaseVendor
   * @return databaseVendor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATABASE_VENDOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDatabaseVendor() {
    return databaseVendor;
  }


  @JsonProperty(JSON_PROPERTY_DATABASE_VENDOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatabaseVendor(String databaseVendor) {
    this.databaseVendor = databaseVendor;
  }


  public Service webServerName(String webServerName) {
    this.webServerName = webServerName;
    return this;
  }

   /**
   * Get webServerName
   * @return webServerName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WEB_SERVER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebServerName() {
    return webServerName;
  }


  @JsonProperty(JSON_PROPERTY_WEB_SERVER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebServerName(String webServerName) {
    this.webServerName = webServerName;
  }


  public Service className(String className) {
    this.className = className;
    return this;
  }

   /**
   * Get className
   * @return className
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CLASS_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClassName() {
    return className;
  }


  @JsonProperty(JSON_PROPERTY_CLASS_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClassName(String className) {
    this.className = className;
  }


  public Service remoteServiceName(String remoteServiceName) {
    this.remoteServiceName = remoteServiceName;
    return this;
  }

   /**
   * The name of the remote service.
   * @return remoteServiceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the remote service.")
  @JsonProperty(JSON_PROPERTY_REMOTE_SERVICE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRemoteServiceName() {
    return remoteServiceName;
  }


  @JsonProperty(JSON_PROPERTY_REMOTE_SERVICE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemoteServiceName(String remoteServiceName) {
    this.remoteServiceName = remoteServiceName;
  }


  public Service remoteEndpoint(String remoteEndpoint) {
    this.remoteEndpoint = remoteEndpoint;
    return this;
  }

   /**
   * The endpoint of the remote service.
   * @return remoteEndpoint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The endpoint of the remote service.")
  @JsonProperty(JSON_PROPERTY_REMOTE_ENDPOINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRemoteEndpoint() {
    return remoteEndpoint;
  }


  @JsonProperty(JSON_PROPERTY_REMOTE_ENDPOINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemoteEndpoint(String remoteEndpoint) {
    this.remoteEndpoint = remoteEndpoint;
  }


  public Service managementZones(List<EntityShortRepresentation> managementZones) {
    this.managementZones = managementZones;
    return this;
  }

  public Service addManagementZonesItem(EntityShortRepresentation managementZonesItem) {
    if (this.managementZones == null) {
      this.managementZones = new ArrayList<>();
    }
    this.managementZones.add(managementZonesItem);
    return this;
  }

   /**
   * The management zones that the entity is part of.
   * @return managementZones
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The management zones that the entity is part of.")
  @JsonProperty(JSON_PROPERTY_MANAGEMENT_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EntityShortRepresentation> getManagementZones() {
    return managementZones;
  }


  @JsonProperty(JSON_PROPERTY_MANAGEMENT_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManagementZones(List<EntityShortRepresentation> managementZones) {
    this.managementZones = managementZones;
  }


  public Service databaseName(String databaseName) {
    this.databaseName = databaseName;
    return this;
  }

   /**
   * Get databaseName
   * @return databaseName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATABASE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDatabaseName() {
    return databaseName;
  }


  @JsonProperty(JSON_PROPERTY_DATABASE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatabaseName(String databaseName) {
    this.databaseName = databaseName;
  }


  public Service agentTechnologyType(AgentTechnologyTypeEnum agentTechnologyType) {
    this.agentTechnologyType = agentTechnologyType;
    return this;
  }

   /**
   * Get agentTechnologyType
   * @return agentTechnologyType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AGENT_TECHNOLOGY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AgentTechnologyTypeEnum getAgentTechnologyType() {
    return agentTechnologyType;
  }


  @JsonProperty(JSON_PROPERTY_AGENT_TECHNOLOGY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAgentTechnologyType(AgentTechnologyTypeEnum agentTechnologyType) {
    this.agentTechnologyType = agentTechnologyType;
  }


  public Service contextRoot(String contextRoot) {
    this.contextRoot = contextRoot;
    return this;
  }

   /**
   * Get contextRoot
   * @return contextRoot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONTEXT_ROOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextRoot() {
    return contextRoot;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_ROOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextRoot(String contextRoot) {
    this.contextRoot = contextRoot;
  }


  public Service webServiceNamespace(String webServiceNamespace) {
    this.webServiceNamespace = webServiceNamespace;
    return this;
  }

   /**
   * Get webServiceNamespace
   * @return webServiceNamespace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WEB_SERVICE_NAMESPACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebServiceNamespace() {
    return webServiceNamespace;
  }


  @JsonProperty(JSON_PROPERTY_WEB_SERVICE_NAMESPACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebServiceNamespace(String webServiceNamespace) {
    this.webServiceNamespace = webServiceNamespace;
  }


  public Service webApplicationId(String webApplicationId) {
    this.webApplicationId = webApplicationId;
    return this;
  }

   /**
   * Get webApplicationId
   * @return webApplicationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WEB_APPLICATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebApplicationId() {
    return webApplicationId;
  }


  @JsonProperty(JSON_PROPERTY_WEB_APPLICATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebApplicationId(String webApplicationId) {
    this.webApplicationId = webApplicationId;
  }


  /**
   * Return true if this Service object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Service service = (Service) o;
    return Objects.equals(this.entityId, service.entityId) &&
        Objects.equals(this.displayName, service.displayName) &&
        Objects.equals(this.customizedName, service.customizedName) &&
        Objects.equals(this.discoveredName, service.discoveredName) &&
        Objects.equals(this.firstSeenTimestamp, service.firstSeenTimestamp) &&
        Objects.equals(this.lastSeenTimestamp, service.lastSeenTimestamp) &&
        Objects.equals(this.tags, service.tags) &&
        Objects.equals(this.fromRelationships, service.fromRelationships) &&
        Objects.equals(this.toRelationships, service.toRelationships) &&
        Objects.equals(this.iibApplicationName, service.iibApplicationName) &&
        Objects.equals(this.esbApplicationName, service.esbApplicationName) &&
        Objects.equals(this.webServiceName, service.webServiceName) &&
        Objects.equals(this.path, service.path) &&
        Objects.equals(this.ibmCtgGatewayUrl, service.ibmCtgGatewayUrl) &&
        Objects.equals(this.softwareTechnologies, service.softwareTechnologies) &&
        Objects.equals(this.ibmCtgServerName, service.ibmCtgServerName) &&
        Objects.equals(this.serviceTechnologyTypes, service.serviceTechnologyTypes) &&
        Objects.equals(this.databaseHostNames, service.databaseHostNames) &&
        Objects.equals(this.ipAddresses, service.ipAddresses) &&
        Objects.equals(this.isExternalService, service.isExternalService) &&
        Objects.equals(this.akkaActorSystem, service.akkaActorSystem) &&
        Objects.equals(this.serviceType, service.serviceType) &&
        Objects.equals(this.port, service.port) &&
        Objects.equals(this.databaseVendor, service.databaseVendor) &&
        Objects.equals(this.webServerName, service.webServerName) &&
        Objects.equals(this.className, service.className) &&
        Objects.equals(this.remoteServiceName, service.remoteServiceName) &&
        Objects.equals(this.remoteEndpoint, service.remoteEndpoint) &&
        Objects.equals(this.managementZones, service.managementZones) &&
        Objects.equals(this.databaseName, service.databaseName) &&
        Objects.equals(this.agentTechnologyType, service.agentTechnologyType) &&
        Objects.equals(this.contextRoot, service.contextRoot) &&
        Objects.equals(this.webServiceNamespace, service.webServiceNamespace) &&
        Objects.equals(this.webApplicationId, service.webApplicationId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityId, displayName, customizedName, discoveredName, firstSeenTimestamp, lastSeenTimestamp, tags, fromRelationships, toRelationships, iibApplicationName, esbApplicationName, webServiceName, path, ibmCtgGatewayUrl, softwareTechnologies, ibmCtgServerName, serviceTechnologyTypes, databaseHostNames, ipAddresses, isExternalService, akkaActorSystem, serviceType, port, databaseVendor, webServerName, className, remoteServiceName, remoteEndpoint, managementZones, databaseName, agentTechnologyType, contextRoot, webServiceNamespace, webApplicationId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Service {\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    customizedName: ").append(toIndentedString(customizedName)).append("\n");
    sb.append("    discoveredName: ").append(toIndentedString(discoveredName)).append("\n");
    sb.append("    firstSeenTimestamp: ").append(toIndentedString(firstSeenTimestamp)).append("\n");
    sb.append("    lastSeenTimestamp: ").append(toIndentedString(lastSeenTimestamp)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    fromRelationships: ").append(toIndentedString(fromRelationships)).append("\n");
    sb.append("    toRelationships: ").append(toIndentedString(toRelationships)).append("\n");
    sb.append("    iibApplicationName: ").append(toIndentedString(iibApplicationName)).append("\n");
    sb.append("    esbApplicationName: ").append(toIndentedString(esbApplicationName)).append("\n");
    sb.append("    webServiceName: ").append(toIndentedString(webServiceName)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    ibmCtgGatewayUrl: ").append(toIndentedString(ibmCtgGatewayUrl)).append("\n");
    sb.append("    softwareTechnologies: ").append(toIndentedString(softwareTechnologies)).append("\n");
    sb.append("    ibmCtgServerName: ").append(toIndentedString(ibmCtgServerName)).append("\n");
    sb.append("    serviceTechnologyTypes: ").append(toIndentedString(serviceTechnologyTypes)).append("\n");
    sb.append("    databaseHostNames: ").append(toIndentedString(databaseHostNames)).append("\n");
    sb.append("    ipAddresses: ").append(toIndentedString(ipAddresses)).append("\n");
    sb.append("    isExternalService: ").append(toIndentedString(isExternalService)).append("\n");
    sb.append("    akkaActorSystem: ").append(toIndentedString(akkaActorSystem)).append("\n");
    sb.append("    serviceType: ").append(toIndentedString(serviceType)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    databaseVendor: ").append(toIndentedString(databaseVendor)).append("\n");
    sb.append("    webServerName: ").append(toIndentedString(webServerName)).append("\n");
    sb.append("    className: ").append(toIndentedString(className)).append("\n");
    sb.append("    remoteServiceName: ").append(toIndentedString(remoteServiceName)).append("\n");
    sb.append("    remoteEndpoint: ").append(toIndentedString(remoteEndpoint)).append("\n");
    sb.append("    managementZones: ").append(toIndentedString(managementZones)).append("\n");
    sb.append("    databaseName: ").append(toIndentedString(databaseName)).append("\n");
    sb.append("    agentTechnologyType: ").append(toIndentedString(agentTechnologyType)).append("\n");
    sb.append("    contextRoot: ").append(toIndentedString(contextRoot)).append("\n");
    sb.append("    webServiceNamespace: ").append(toIndentedString(webServiceNamespace)).append("\n");
    sb.append("    webApplicationId: ").append(toIndentedString(webApplicationId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

