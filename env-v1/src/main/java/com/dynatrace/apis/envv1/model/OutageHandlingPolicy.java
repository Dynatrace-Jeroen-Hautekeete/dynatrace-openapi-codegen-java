/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv1.model.GlobalOutagePolicy;
import com.dynatrace.apis.envv1.model.LocalOutagePolicy;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Outage handling configuration.
 */
@ApiModel(description = "Outage handling configuration.")
@JsonPropertyOrder({
  OutageHandlingPolicy.JSON_PROPERTY_GLOBAL_OUTAGE,
  OutageHandlingPolicy.JSON_PROPERTY_GLOBAL_OUTAGE_POLICY,
  OutageHandlingPolicy.JSON_PROPERTY_LOCAL_OUTAGE,
  OutageHandlingPolicy.JSON_PROPERTY_LOCAL_OUTAGE_POLICY,
  OutageHandlingPolicy.JSON_PROPERTY_RETRY_ON_ERROR
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class OutageHandlingPolicy {
  public static final String JSON_PROPERTY_GLOBAL_OUTAGE = "globalOutage";
  private Boolean globalOutage;

  public static final String JSON_PROPERTY_GLOBAL_OUTAGE_POLICY = "globalOutagePolicy";
  private JsonNullable<GlobalOutagePolicy> globalOutagePolicy = JsonNullable.<GlobalOutagePolicy>undefined();

  public static final String JSON_PROPERTY_LOCAL_OUTAGE = "localOutage";
  private Boolean localOutage;

  public static final String JSON_PROPERTY_LOCAL_OUTAGE_POLICY = "localOutagePolicy";
  private LocalOutagePolicy localOutagePolicy;

  public static final String JSON_PROPERTY_RETRY_ON_ERROR = "retryOnError";
  private Boolean retryOnError = true;

  public OutageHandlingPolicy() { 
  }

  public OutageHandlingPolicy globalOutage(Boolean globalOutage) {
    this.globalOutage = globalOutage;
    return this;
  }

   /**
   * When enabled (&#x60;true&#x60;), generate a problem and send an alert when the monitor is unavailable at all configured locations.
   * @return globalOutage
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "When enabled (`true`), generate a problem and send an alert when the monitor is unavailable at all configured locations.")
  @JsonProperty(JSON_PROPERTY_GLOBAL_OUTAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getGlobalOutage() {
    return globalOutage;
  }


  @JsonProperty(JSON_PROPERTY_GLOBAL_OUTAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGlobalOutage(Boolean globalOutage) {
    this.globalOutage = globalOutage;
  }


  public OutageHandlingPolicy globalOutagePolicy(GlobalOutagePolicy globalOutagePolicy) {
    this.globalOutagePolicy = JsonNullable.<GlobalOutagePolicy>of(globalOutagePolicy);
    return this;
  }

   /**
   * Get globalOutagePolicy
   * @return globalOutagePolicy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public GlobalOutagePolicy getGlobalOutagePolicy() {
        return globalOutagePolicy.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GLOBAL_OUTAGE_POLICY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<GlobalOutagePolicy> getGlobalOutagePolicy_JsonNullable() {
    return globalOutagePolicy;
  }
  
  @JsonProperty(JSON_PROPERTY_GLOBAL_OUTAGE_POLICY)
  public void setGlobalOutagePolicy_JsonNullable(JsonNullable<GlobalOutagePolicy> globalOutagePolicy) {
    this.globalOutagePolicy = globalOutagePolicy;
  }

  public void setGlobalOutagePolicy(GlobalOutagePolicy globalOutagePolicy) {
    this.globalOutagePolicy = JsonNullable.<GlobalOutagePolicy>of(globalOutagePolicy);
  }


  public OutageHandlingPolicy localOutage(Boolean localOutage) {
    this.localOutage = localOutage;
    return this;
  }

   /**
   * When enabled (&#x60;true&#x60;), generate a problem and send an alert when the monitor is unavailable for one or more consecutive runs at any location.
   * @return localOutage
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "When enabled (`true`), generate a problem and send an alert when the monitor is unavailable for one or more consecutive runs at any location.")
  @JsonProperty(JSON_PROPERTY_LOCAL_OUTAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getLocalOutage() {
    return localOutage;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL_OUTAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocalOutage(Boolean localOutage) {
    this.localOutage = localOutage;
  }


  public OutageHandlingPolicy localOutagePolicy(LocalOutagePolicy localOutagePolicy) {
    this.localOutagePolicy = localOutagePolicy;
    return this;
  }

   /**
   * Get localOutagePolicy
   * @return localOutagePolicy
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LOCAL_OUTAGE_POLICY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LocalOutagePolicy getLocalOutagePolicy() {
    return localOutagePolicy;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL_OUTAGE_POLICY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocalOutagePolicy(LocalOutagePolicy localOutagePolicy) {
    this.localOutagePolicy = localOutagePolicy;
  }


  public OutageHandlingPolicy retryOnError(Boolean retryOnError) {
    this.retryOnError = retryOnError;
    return this;
  }

   /**
   * Schedule retry if browser monitor execution results in a fail. For HTTP monitors this property is ignored.
   * @return retryOnError
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Schedule retry if browser monitor execution results in a fail. For HTTP monitors this property is ignored.")
  @JsonProperty(JSON_PROPERTY_RETRY_ON_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRetryOnError() {
    return retryOnError;
  }


  @JsonProperty(JSON_PROPERTY_RETRY_ON_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRetryOnError(Boolean retryOnError) {
    this.retryOnError = retryOnError;
  }


  /**
   * Return true if this OutageHandlingPolicy object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutageHandlingPolicy outageHandlingPolicy = (OutageHandlingPolicy) o;
    return Objects.equals(this.globalOutage, outageHandlingPolicy.globalOutage) &&
        equalsNullable(this.globalOutagePolicy, outageHandlingPolicy.globalOutagePolicy) &&
        Objects.equals(this.localOutage, outageHandlingPolicy.localOutage) &&
        Objects.equals(this.localOutagePolicy, outageHandlingPolicy.localOutagePolicy) &&
        Objects.equals(this.retryOnError, outageHandlingPolicy.retryOnError);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(globalOutage, hashCodeNullable(globalOutagePolicy), localOutage, localOutagePolicy, retryOnError);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutageHandlingPolicy {\n");
    sb.append("    globalOutage: ").append(toIndentedString(globalOutage)).append("\n");
    sb.append("    globalOutagePolicy: ").append(toIndentedString(globalOutagePolicy)).append("\n");
    sb.append("    localOutage: ").append(toIndentedString(localOutage)).append("\n");
    sb.append("    localOutagePolicy: ").append(toIndentedString(localOutagePolicy)).append("\n");
    sb.append("    retryOnError: ").append(toIndentedString(retryOnError)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

