/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv1.model.PushEventAttachRules;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Configuration of the custom event.
 */
@ApiModel(description = "Configuration of the custom event.")
@JsonPropertyOrder({
  EventCreation.JSON_PROPERTY_EVENT_TYPE,
  EventCreation.JSON_PROPERTY_START,
  EventCreation.JSON_PROPERTY_END,
  EventCreation.JSON_PROPERTY_TIMEOUT_MINUTES,
  EventCreation.JSON_PROPERTY_ATTACH_RULES,
  EventCreation.JSON_PROPERTY_CUSTOM_PROPERTIES,
  EventCreation.JSON_PROPERTY_SOURCE,
  EventCreation.JSON_PROPERTY_ANNOTATION_TYPE,
  EventCreation.JSON_PROPERTY_ANNOTATION_DESCRIPTION,
  EventCreation.JSON_PROPERTY_DESCRIPTION,
  EventCreation.JSON_PROPERTY_DEPLOYMENT_NAME,
  EventCreation.JSON_PROPERTY_DEPLOYMENT_VERSION,
  EventCreation.JSON_PROPERTY_TIMESERIES_IDS,
  EventCreation.JSON_PROPERTY_DEPLOYMENT_PROJECT,
  EventCreation.JSON_PROPERTY_CI_BACK_LINK,
  EventCreation.JSON_PROPERTY_REMEDIATION_ACTION,
  EventCreation.JSON_PROPERTY_ORIGINAL,
  EventCreation.JSON_PROPERTY_CHANGED,
  EventCreation.JSON_PROPERTY_CONFIGURATION,
  EventCreation.JSON_PROPERTY_TITLE,
  EventCreation.JSON_PROPERTY_ALLOW_DAVIS_MERGE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class EventCreation {
  /**
   * The type of the event.
   */
  public enum EventTypeEnum {
    AVAILABILITY_EVENT("AVAILABILITY_EVENT"),
    
    CUSTOM_ALERT("CUSTOM_ALERT"),
    
    CUSTOM_ANNOTATION("CUSTOM_ANNOTATION"),
    
    CUSTOM_CONFIGURATION("CUSTOM_CONFIGURATION"),
    
    CUSTOM_DEPLOYMENT("CUSTOM_DEPLOYMENT"),
    
    CUSTOM_INFO("CUSTOM_INFO"),
    
    ERROR_EVENT("ERROR_EVENT"),
    
    MARKED_FOR_TERMINATION("MARKED_FOR_TERMINATION"),
    
    PERFORMANCE_EVENT("PERFORMANCE_EVENT"),
    
    RESOURCE_CONTENTION("RESOURCE_CONTENTION");

    private String value;

    EventTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EventTypeEnum fromValue(String value) {
      for (EventTypeEnum b : EventTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_EVENT_TYPE = "eventType";
  private EventTypeEnum eventType;

  public static final String JSON_PROPERTY_START = "start";
  private Long start;

  public static final String JSON_PROPERTY_END = "end";
  private Long end;

  public static final String JSON_PROPERTY_TIMEOUT_MINUTES = "timeoutMinutes";
  private Integer timeoutMinutes;

  public static final String JSON_PROPERTY_ATTACH_RULES = "attachRules";
  private PushEventAttachRules attachRules;

  public static final String JSON_PROPERTY_CUSTOM_PROPERTIES = "customProperties";
  private Map<String, Object> customProperties = null;

  public static final String JSON_PROPERTY_SOURCE = "source";
  private String source;

  public static final String JSON_PROPERTY_ANNOTATION_TYPE = "annotationType";
  private String annotationType;

  public static final String JSON_PROPERTY_ANNOTATION_DESCRIPTION = "annotationDescription";
  private String annotationDescription;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_DEPLOYMENT_NAME = "deploymentName";
  private String deploymentName;

  public static final String JSON_PROPERTY_DEPLOYMENT_VERSION = "deploymentVersion";
  private String deploymentVersion;

  public static final String JSON_PROPERTY_TIMESERIES_IDS = "timeseriesIds";
  private List<String> timeseriesIds = null;

  public static final String JSON_PROPERTY_DEPLOYMENT_PROJECT = "deploymentProject";
  private String deploymentProject;

  public static final String JSON_PROPERTY_CI_BACK_LINK = "ciBackLink";
  private String ciBackLink;

  public static final String JSON_PROPERTY_REMEDIATION_ACTION = "remediationAction";
  private String remediationAction;

  public static final String JSON_PROPERTY_ORIGINAL = "original";
  private String original;

  public static final String JSON_PROPERTY_CHANGED = "changed";
  private String changed;

  public static final String JSON_PROPERTY_CONFIGURATION = "configuration";
  private String _configuration;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_ALLOW_DAVIS_MERGE = "allowDavisMerge";
  private Boolean allowDavisMerge;

  public EventCreation() { 
  }

  public EventCreation eventType(EventTypeEnum eventType) {
    this.eventType = eventType;
    return this;
  }

   /**
   * The type of the event.
   * @return eventType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The type of the event.")
  @JsonProperty(JSON_PROPERTY_EVENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EventTypeEnum getEventType() {
    return eventType;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEventType(EventTypeEnum eventType) {
    this.eventType = eventType;
  }


  public EventCreation start(Long start) {
    this.start = start;
    return this;
  }

   /**
   * The start timestamp of the event, in UTC milliseconds.   If not set, the current timestamp is used.   You can report information-only events up to **30 days** into the past.   You can report problem-opening events up to **60 minutes** into the past.
   * @return start
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The start timestamp of the event, in UTC milliseconds.   If not set, the current timestamp is used.   You can report information-only events up to **30 days** into the past.   You can report problem-opening events up to **60 minutes** into the past.")
  @JsonProperty(JSON_PROPERTY_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getStart() {
    return start;
  }


  @JsonProperty(JSON_PROPERTY_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStart(Long start) {
    this.start = start;
  }


  public EventCreation end(Long end) {
    this.end = end;
    return this;
  }

   /**
   * The end timestamp of the event, in UTC milliseconds.   If not set, the current time is used for information-only events.   Not applicable to problem-opening events. Such an event stays open until it times out depending on the **timeoutMinutes** parameter.
   * @return end
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The end timestamp of the event, in UTC milliseconds.   If not set, the current time is used for information-only events.   Not applicable to problem-opening events. Such an event stays open until it times out depending on the **timeoutMinutes** parameter.")
  @JsonProperty(JSON_PROPERTY_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getEnd() {
    return end;
  }


  @JsonProperty(JSON_PROPERTY_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnd(Long end) {
    this.end = end;
  }


  public EventCreation timeoutMinutes(Integer timeoutMinutes) {
    this.timeoutMinutes = timeoutMinutes;
    return this;
  }

   /**
   * The timeout for problem-opening events in minutes. Not applicable to information-only events.   If not set, 15 minutes is used. The maximum allowed value is 120 minutes.   You can refresh the event by sending the same payload again.
   * @return timeoutMinutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timeout for problem-opening events in minutes. Not applicable to information-only events.   If not set, 15 minutes is used. The maximum allowed value is 120 minutes.   You can refresh the event by sending the same payload again.")
  @JsonProperty(JSON_PROPERTY_TIMEOUT_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTimeoutMinutes() {
    return timeoutMinutes;
  }


  @JsonProperty(JSON_PROPERTY_TIMEOUT_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeoutMinutes(Integer timeoutMinutes) {
    this.timeoutMinutes = timeoutMinutes;
  }


  public EventCreation attachRules(PushEventAttachRules attachRules) {
    this.attachRules = attachRules;
    return this;
  }

   /**
   * Get attachRules
   * @return attachRules
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ATTACH_RULES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PushEventAttachRules getAttachRules() {
    return attachRules;
  }


  @JsonProperty(JSON_PROPERTY_ATTACH_RULES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAttachRules(PushEventAttachRules attachRules) {
    this.attachRules = attachRules;
  }


  public EventCreation customProperties(Map<String, Object> customProperties) {
    this.customProperties = customProperties;
    return this;
  }

  public EventCreation putCustomPropertiesItem(String key, Object customPropertiesItem) {
    if (this.customProperties == null) {
      this.customProperties = new HashMap<>();
    }
    this.customProperties.put(key, customPropertiesItem);
    return this;
  }

   /**
   * The set of any properties related to the event, in the *\&quot;key\&quot; : \&quot;value\&quot;* format.
   * @return customProperties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The set of any properties related to the event, in the *\"key\" : \"value\"* format.")
  @JsonProperty(JSON_PROPERTY_CUSTOM_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getCustomProperties() {
    return customProperties;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomProperties(Map<String, Object> customProperties) {
    this.customProperties = customProperties;
  }


  public EventCreation source(String source) {
    this.source = source;
    return this;
  }

   /**
   * The name or ID of the external source of the event.
   * @return source
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name or ID of the external source of the event.")
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSource(String source) {
    this.source = source;
  }


  public EventCreation annotationType(String annotationType) {
    this.annotationType = annotationType;
    return this;
  }

   /**
   * The type of the custom annotation, for example &#x60;DNS route has been changed&#x60;.
   * @return annotationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of the custom annotation, for example `DNS route has been changed`.")
  @JsonProperty(JSON_PROPERTY_ANNOTATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAnnotationType() {
    return annotationType;
  }


  @JsonProperty(JSON_PROPERTY_ANNOTATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnnotationType(String annotationType) {
    this.annotationType = annotationType;
  }


  public EventCreation annotationDescription(String annotationDescription) {
    this.annotationDescription = annotationDescription;
    return this;
  }

   /**
   * A detailed description of the custom annotation, for example &#x60;DNS route has been changed to x.mydomain.com&#x60;.
   * @return annotationDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A detailed description of the custom annotation, for example `DNS route has been changed to x.mydomain.com`.")
  @JsonProperty(JSON_PROPERTY_ANNOTATION_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAnnotationDescription() {
    return annotationDescription;
  }


  @JsonProperty(JSON_PROPERTY_ANNOTATION_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnnotationDescription(String annotationDescription) {
    this.annotationDescription = annotationDescription;
  }


  public EventCreation description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The textual description of the configuration change.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The textual description of the configuration change.")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public EventCreation deploymentName(String deploymentName) {
    this.deploymentName = deploymentName;
    return this;
  }

   /**
   * The ID of the triggered deployment.
   * @return deploymentName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the triggered deployment.")
  @JsonProperty(JSON_PROPERTY_DEPLOYMENT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeploymentName() {
    return deploymentName;
  }


  @JsonProperty(JSON_PROPERTY_DEPLOYMENT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeploymentName(String deploymentName) {
    this.deploymentName = deploymentName;
  }


  public EventCreation deploymentVersion(String deploymentVersion) {
    this.deploymentVersion = deploymentVersion;
    return this;
  }

   /**
   * The version of the triggered deployment.
   * @return deploymentVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The version of the triggered deployment.")
  @JsonProperty(JSON_PROPERTY_DEPLOYMENT_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeploymentVersion() {
    return deploymentVersion;
  }


  @JsonProperty(JSON_PROPERTY_DEPLOYMENT_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeploymentVersion(String deploymentVersion) {
    this.deploymentVersion = deploymentVersion;
  }


  public EventCreation timeseriesIds(List<String> timeseriesIds) {
    this.timeseriesIds = timeseriesIds;
    return this;
  }

  public EventCreation addTimeseriesIdsItem(String timeseriesIdsItem) {
    if (this.timeseriesIds == null) {
      this.timeseriesIds = new ArrayList<>();
    }
    this.timeseriesIds.add(timeseriesIdsItem);
    return this;
  }

   /**
   * A list of timeseries IDs, related to the event.
   * @return timeseriesIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of timeseries IDs, related to the event.")
  @JsonProperty(JSON_PROPERTY_TIMESERIES_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getTimeseriesIds() {
    return timeseriesIds;
  }


  @JsonProperty(JSON_PROPERTY_TIMESERIES_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeseriesIds(List<String> timeseriesIds) {
    this.timeseriesIds = timeseriesIds;
  }


  public EventCreation deploymentProject(String deploymentProject) {
    this.deploymentProject = deploymentProject;
    return this;
  }

   /**
   * The project name of the deployed package.
   * @return deploymentProject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The project name of the deployed package.")
  @JsonProperty(JSON_PROPERTY_DEPLOYMENT_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeploymentProject() {
    return deploymentProject;
  }


  @JsonProperty(JSON_PROPERTY_DEPLOYMENT_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeploymentProject(String deploymentProject) {
    this.deploymentProject = deploymentProject;
  }


  public EventCreation ciBackLink(String ciBackLink) {
    this.ciBackLink = ciBackLink;
    return this;
  }

   /**
   * The link to the deployed artifact within the 3rd party system.
   * @return ciBackLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The link to the deployed artifact within the 3rd party system.")
  @JsonProperty(JSON_PROPERTY_CI_BACK_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCiBackLink() {
    return ciBackLink;
  }


  @JsonProperty(JSON_PROPERTY_CI_BACK_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCiBackLink(String ciBackLink) {
    this.ciBackLink = ciBackLink;
  }


  public EventCreation remediationAction(String remediationAction) {
    this.remediationAction = remediationAction;
    return this;
  }

   /**
   * The link to the deployment related remediation action within the external tool.
   * @return remediationAction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The link to the deployment related remediation action within the external tool.")
  @JsonProperty(JSON_PROPERTY_REMEDIATION_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRemediationAction() {
    return remediationAction;
  }


  @JsonProperty(JSON_PROPERTY_REMEDIATION_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemediationAction(String remediationAction) {
    this.remediationAction = remediationAction;
  }


  public EventCreation original(String original) {
    this.original = original;
    return this;
  }

   /**
   * The previous value of the configuration.
   * @return original
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The previous value of the configuration.")
  @JsonProperty(JSON_PROPERTY_ORIGINAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOriginal() {
    return original;
  }


  @JsonProperty(JSON_PROPERTY_ORIGINAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOriginal(String original) {
    this.original = original;
  }


  public EventCreation changed(String changed) {
    this.changed = changed;
    return this;
  }

   /**
   * The new value of the configuration that has been set by the event.
   * @return changed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The new value of the configuration that has been set by the event.")
  @JsonProperty(JSON_PROPERTY_CHANGED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChanged() {
    return changed;
  }


  @JsonProperty(JSON_PROPERTY_CHANGED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChanged(String changed) {
    this.changed = changed;
  }


  public EventCreation _configuration(String _configuration) {
    this._configuration = _configuration;
    return this;
  }

   /**
   * The ID or the name of the configuration that has been changed by the event.
   * @return _configuration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID or the name of the configuration that has been changed by the event.")
  @JsonProperty(JSON_PROPERTY_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConfiguration() {
    return _configuration;
  }


  @JsonProperty(JSON_PROPERTY_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConfiguration(String _configuration) {
    this._configuration = _configuration;
  }


  public EventCreation title(String title) {
    this.title = title;
    return this;
  }

   /**
   * The title of the configuration that has been set by the event.
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The title of the configuration that has been set by the event.")
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }


  public EventCreation allowDavisMerge(Boolean allowDavisMerge) {
    this.allowDavisMerge = allowDavisMerge;
    return this;
  }

   /**
   * Allow Davis AI to merge this event into existing problems (true) or force creating a new problem (false).  This only applies to problem-opening event types.
   * @return allowDavisMerge
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allow Davis AI to merge this event into existing problems (true) or force creating a new problem (false).  This only applies to problem-opening event types.")
  @JsonProperty(JSON_PROPERTY_ALLOW_DAVIS_MERGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAllowDavisMerge() {
    return allowDavisMerge;
  }


  @JsonProperty(JSON_PROPERTY_ALLOW_DAVIS_MERGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllowDavisMerge(Boolean allowDavisMerge) {
    this.allowDavisMerge = allowDavisMerge;
  }


  /**
   * Return true if this EventCreation object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventCreation eventCreation = (EventCreation) o;
    return Objects.equals(this.eventType, eventCreation.eventType) &&
        Objects.equals(this.start, eventCreation.start) &&
        Objects.equals(this.end, eventCreation.end) &&
        Objects.equals(this.timeoutMinutes, eventCreation.timeoutMinutes) &&
        Objects.equals(this.attachRules, eventCreation.attachRules) &&
        Objects.equals(this.customProperties, eventCreation.customProperties) &&
        Objects.equals(this.source, eventCreation.source) &&
        Objects.equals(this.annotationType, eventCreation.annotationType) &&
        Objects.equals(this.annotationDescription, eventCreation.annotationDescription) &&
        Objects.equals(this.description, eventCreation.description) &&
        Objects.equals(this.deploymentName, eventCreation.deploymentName) &&
        Objects.equals(this.deploymentVersion, eventCreation.deploymentVersion) &&
        Objects.equals(this.timeseriesIds, eventCreation.timeseriesIds) &&
        Objects.equals(this.deploymentProject, eventCreation.deploymentProject) &&
        Objects.equals(this.ciBackLink, eventCreation.ciBackLink) &&
        Objects.equals(this.remediationAction, eventCreation.remediationAction) &&
        Objects.equals(this.original, eventCreation.original) &&
        Objects.equals(this.changed, eventCreation.changed) &&
        Objects.equals(this._configuration, eventCreation._configuration) &&
        Objects.equals(this.title, eventCreation.title) &&
        Objects.equals(this.allowDavisMerge, eventCreation.allowDavisMerge);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventType, start, end, timeoutMinutes, attachRules, customProperties, source, annotationType, annotationDescription, description, deploymentName, deploymentVersion, timeseriesIds, deploymentProject, ciBackLink, remediationAction, original, changed, _configuration, title, allowDavisMerge);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventCreation {\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    timeoutMinutes: ").append(toIndentedString(timeoutMinutes)).append("\n");
    sb.append("    attachRules: ").append(toIndentedString(attachRules)).append("\n");
    sb.append("    customProperties: ").append(toIndentedString(customProperties)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    annotationType: ").append(toIndentedString(annotationType)).append("\n");
    sb.append("    annotationDescription: ").append(toIndentedString(annotationDescription)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    deploymentName: ").append(toIndentedString(deploymentName)).append("\n");
    sb.append("    deploymentVersion: ").append(toIndentedString(deploymentVersion)).append("\n");
    sb.append("    timeseriesIds: ").append(toIndentedString(timeseriesIds)).append("\n");
    sb.append("    deploymentProject: ").append(toIndentedString(deploymentProject)).append("\n");
    sb.append("    ciBackLink: ").append(toIndentedString(ciBackLink)).append("\n");
    sb.append("    remediationAction: ").append(toIndentedString(remediationAction)).append("\n");
    sb.append("    original: ").append(toIndentedString(original)).append("\n");
    sb.append("    changed: ").append(toIndentedString(changed)).append("\n");
    sb.append("    _configuration: ").append(toIndentedString(_configuration)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    allowDavisMerge: ").append(toIndentedString(allowDavisMerge)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

