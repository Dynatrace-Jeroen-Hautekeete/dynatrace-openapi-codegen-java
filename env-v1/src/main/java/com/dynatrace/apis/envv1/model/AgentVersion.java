/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Defines the version of the agent currently running on the entity.
 */
@ApiModel(description = "Defines the version of the agent currently running on the entity.")
@JsonPropertyOrder({
  AgentVersion.JSON_PROPERTY_MAJOR,
  AgentVersion.JSON_PROPERTY_MINOR,
  AgentVersion.JSON_PROPERTY_REVISION,
  AgentVersion.JSON_PROPERTY_TIMESTAMP,
  AgentVersion.JSON_PROPERTY_SOURCE_REVISION
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class AgentVersion {
  public static final String JSON_PROPERTY_MAJOR = "major";
  private Integer major;

  public static final String JSON_PROPERTY_MINOR = "minor";
  private Integer minor;

  public static final String JSON_PROPERTY_REVISION = "revision";
  private Integer revision;

  public static final String JSON_PROPERTY_TIMESTAMP = "timestamp";
  private String timestamp;

  public static final String JSON_PROPERTY_SOURCE_REVISION = "sourceRevision";
  private String sourceRevision;

  public AgentVersion() { 
  }

  public AgentVersion major(Integer major) {
    this.major = major;
    return this;
  }

   /**
   * The major version number.
   * @return major
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The major version number.")
  @JsonProperty(JSON_PROPERTY_MAJOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMajor() {
    return major;
  }


  @JsonProperty(JSON_PROPERTY_MAJOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMajor(Integer major) {
    this.major = major;
  }


  public AgentVersion minor(Integer minor) {
    this.minor = minor;
    return this;
  }

   /**
   * The minor version number.
   * @return minor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The minor version number.")
  @JsonProperty(JSON_PROPERTY_MINOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMinor() {
    return minor;
  }


  @JsonProperty(JSON_PROPERTY_MINOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinor(Integer minor) {
    this.minor = minor;
  }


  public AgentVersion revision(Integer revision) {
    this.revision = revision;
    return this;
  }

   /**
   * The revision number.
   * @return revision
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The revision number.")
  @JsonProperty(JSON_PROPERTY_REVISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRevision() {
    return revision;
  }


  @JsonProperty(JSON_PROPERTY_REVISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRevision(Integer revision) {
    this.revision = revision;
  }


  public AgentVersion timestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * A timestamp string: format \&quot;yyyymmdd-hhmmss
   * @return timestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A timestamp string: format \"yyyymmdd-hhmmss")
  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTimestamp() {
    return timestamp;
  }


  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }


  public AgentVersion sourceRevision(String sourceRevision) {
    this.sourceRevision = sourceRevision;
    return this;
  }

   /**
   * A string representation of the SVN revision number.
   * @return sourceRevision
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A string representation of the SVN revision number.")
  @JsonProperty(JSON_PROPERTY_SOURCE_REVISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceRevision() {
    return sourceRevision;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_REVISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceRevision(String sourceRevision) {
    this.sourceRevision = sourceRevision;
  }


  /**
   * Return true if this AgentVersion object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AgentVersion agentVersion = (AgentVersion) o;
    return Objects.equals(this.major, agentVersion.major) &&
        Objects.equals(this.minor, agentVersion.minor) &&
        Objects.equals(this.revision, agentVersion.revision) &&
        Objects.equals(this.timestamp, agentVersion.timestamp) &&
        Objects.equals(this.sourceRevision, agentVersion.sourceRevision);
  }

  @Override
  public int hashCode() {
    return Objects.hash(major, minor, revision, timestamp, sourceRevision);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AgentVersion {\n");
    sb.append("    major: ").append(toIndentedString(major)).append("\n");
    sb.append("    minor: ").append(toIndentedString(minor)).append("\n");
    sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    sourceRevision: ").append(toIndentedString(sourceRevision)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

