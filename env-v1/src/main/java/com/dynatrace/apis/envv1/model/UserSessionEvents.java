/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The external event of a user session.
 */
@ApiModel(description = "The external event of a user session.")
@JsonPropertyOrder({
  UserSessionEvents.JSON_PROPERTY_TYPE,
  UserSessionEvents.JSON_PROPERTY_NAME,
  UserSessionEvents.JSON_PROPERTY_DOMAIN,
  UserSessionEvents.JSON_PROPERTY_START_TIME,
  UserSessionEvents.JSON_PROPERTY_APPLICATION,
  UserSessionEvents.JSON_PROPERTY_INTERNAL_APPLICATION_ID,
  UserSessionEvents.JSON_PROPERTY_METADATA,
  UserSessionEvents.JSON_PROPERTY_PAGE,
  UserSessionEvents.JSON_PROPERTY_PAGE_GROUP,
  UserSessionEvents.JSON_PROPERTY_PAGE_REFERRER,
  UserSessionEvents.JSON_PROPERTY_PAGE_REFERRER_GROUP
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class UserSessionEvents {
  /**
   * The type of event.
   */
  public enum TypeEnum {
    BEHAVIORAL("Behavioral"),
    
    CRASH("Crash"),
    
    ERROR("Error"),
    
    PAGECHANGE("PageChange"),
    
    RAGECLICK("RageClick"),
    
    RAGETAP("RageTap"),
    
    USERTAG("UserTag"),
    
    USERTAGFROMMETADATA("UserTagFromMetaData"),
    
    VISITTAG("VisitTag");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DOMAIN = "domain";
  private String domain;

  public static final String JSON_PROPERTY_START_TIME = "startTime";
  private Long startTime;

  public static final String JSON_PROPERTY_APPLICATION = "application";
  private String application;

  public static final String JSON_PROPERTY_INTERNAL_APPLICATION_ID = "internalApplicationId";
  private String internalApplicationId;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private String metadata;

  public static final String JSON_PROPERTY_PAGE = "page";
  private String page;

  public static final String JSON_PROPERTY_PAGE_GROUP = "pageGroup";
  private String pageGroup;

  public static final String JSON_PROPERTY_PAGE_REFERRER = "pageReferrer";
  private String pageReferrer;

  public static final String JSON_PROPERTY_PAGE_REFERRER_GROUP = "pageReferrerGroup";
  private String pageReferrerGroup;

  public UserSessionEvents() { 
  }

  public UserSessionEvents type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The type of event.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of event.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public UserSessionEvents name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the event.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the event.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public UserSessionEvents domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * The DNS domain where the event has been recorded.
   * @return domain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The DNS domain where the event has been recorded.")
  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDomain() {
    return domain;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomain(String domain) {
    this.domain = domain;
  }


  public UserSessionEvents startTime(Long startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * The timestamp of the event, in UTC milliseconds.
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1511363122754", value = "The timestamp of the event, in UTC milliseconds.")
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getStartTime() {
    return startTime;
  }


  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartTime(Long startTime) {
    this.startTime = startTime;
  }


  public UserSessionEvents application(String application) {
    this.application = application;
    return this;
  }

   /**
   * The name of the application, based on the configured detection rules.
   * @return application
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the application, based on the configured detection rules.")
  @JsonProperty(JSON_PROPERTY_APPLICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApplication() {
    return application;
  }


  @JsonProperty(JSON_PROPERTY_APPLICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplication(String application) {
    this.application = application;
  }


  public UserSessionEvents internalApplicationId(String internalApplicationId) {
    this.internalApplicationId = internalApplicationId;
    return this;
  }

   /**
   * The Dynatrace entity ID of the application.    This information is useful when calling various REST APIs, for example, as a key for time series queries.
   * @return internalApplicationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Dynatrace entity ID of the application.    This information is useful when calling various REST APIs, for example, as a key for time series queries.")
  @JsonProperty(JSON_PROPERTY_INTERNAL_APPLICATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInternalApplicationId() {
    return internalApplicationId;
  }


  @JsonProperty(JSON_PROPERTY_INTERNAL_APPLICATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInternalApplicationId(String internalApplicationId) {
    this.internalApplicationId = internalApplicationId;
  }


  public UserSessionEvents metadata(String metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * The metadata attached to the event.
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "key1:value1;key2:value2", value = "The metadata attached to the event.")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }


  public UserSessionEvents page(String page) {
    this.page = page;
    return this;
  }

   /**
   * The name of the page the user navigated to during a page change event.
   * @return page
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the page the user navigated to during a page change event.")
  @JsonProperty(JSON_PROPERTY_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPage() {
    return page;
  }


  @JsonProperty(JSON_PROPERTY_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPage(String page) {
    this.page = page;
  }


  public UserSessionEvents pageGroup(String pageGroup) {
    this.pageGroup = pageGroup;
    return this;
  }

   /**
   * The page group is automatically derived from the page.
   * @return pageGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The page group is automatically derived from the page.")
  @JsonProperty(JSON_PROPERTY_PAGE_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPageGroup() {
    return pageGroup;
  }


  @JsonProperty(JSON_PROPERTY_PAGE_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPageGroup(String pageGroup) {
    this.pageGroup = pageGroup;
  }


  public UserSessionEvents pageReferrer(String pageReferrer) {
    this.pageReferrer = pageReferrer;
    return this;
  }

   /**
   * The name of the previous page from which the user navigated from during a page change event.
   * @return pageReferrer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the previous page from which the user navigated from during a page change event.")
  @JsonProperty(JSON_PROPERTY_PAGE_REFERRER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPageReferrer() {
    return pageReferrer;
  }


  @JsonProperty(JSON_PROPERTY_PAGE_REFERRER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPageReferrer(String pageReferrer) {
    this.pageReferrer = pageReferrer;
  }


  public UserSessionEvents pageReferrerGroup(String pageReferrerGroup) {
    this.pageReferrerGroup = pageReferrerGroup;
    return this;
  }

   /**
   * The page referrer group is automatically derived from the page referrer.
   * @return pageReferrerGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The page referrer group is automatically derived from the page referrer.")
  @JsonProperty(JSON_PROPERTY_PAGE_REFERRER_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPageReferrerGroup() {
    return pageReferrerGroup;
  }


  @JsonProperty(JSON_PROPERTY_PAGE_REFERRER_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPageReferrerGroup(String pageReferrerGroup) {
    this.pageReferrerGroup = pageReferrerGroup;
  }


  /**
   * Return true if this UserSessionEvents object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserSessionEvents userSessionEvents = (UserSessionEvents) o;
    return Objects.equals(this.type, userSessionEvents.type) &&
        Objects.equals(this.name, userSessionEvents.name) &&
        Objects.equals(this.domain, userSessionEvents.domain) &&
        Objects.equals(this.startTime, userSessionEvents.startTime) &&
        Objects.equals(this.application, userSessionEvents.application) &&
        Objects.equals(this.internalApplicationId, userSessionEvents.internalApplicationId) &&
        Objects.equals(this.metadata, userSessionEvents.metadata) &&
        Objects.equals(this.page, userSessionEvents.page) &&
        Objects.equals(this.pageGroup, userSessionEvents.pageGroup) &&
        Objects.equals(this.pageReferrer, userSessionEvents.pageReferrer) &&
        Objects.equals(this.pageReferrerGroup, userSessionEvents.pageReferrerGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, name, domain, startTime, application, internalApplicationId, metadata, page, pageGroup, pageReferrer, pageReferrerGroup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserSessionEvents {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    application: ").append(toIndentedString(application)).append("\n");
    sb.append("    internalApplicationId: ").append(toIndentedString(internalApplicationId)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    pageGroup: ").append(toIndentedString(pageGroup)).append("\n");
    sb.append("    pageReferrer: ").append(toIndentedString(pageReferrer)).append("\n");
    sb.append("    pageReferrerGroup: ").append(toIndentedString(pageReferrerGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

