/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Information about a metric and its data points.
 */
@ApiModel(description = "Information about a metric and its data points.")
@JsonPropertyOrder({
  EntityTimeseriesData.JSON_PROPERTY_TIMESERIES_ID,
  EntityTimeseriesData.JSON_PROPERTY_DIMENSIONS,
  EntityTimeseriesData.JSON_PROPERTY_DATA_POINTS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class EntityTimeseriesData {
  public static final String JSON_PROPERTY_TIMESERIES_ID = "timeseriesId";
  private String timeseriesId;

  public static final String JSON_PROPERTY_DIMENSIONS = "dimensions";
  private Map<String, String> dimensions = null;

  public static final String JSON_PROPERTY_DATA_POINTS = "dataPoints";
  private List<List<Float>> dataPoints = new ArrayList<>();

  public EntityTimeseriesData() { 
  }

  public EntityTimeseriesData timeseriesId(String timeseriesId) {
    this.timeseriesId = timeseriesId;
    return this;
  }

   /**
   * The ID of the metric, where you want to post data points.
   * @return timeseriesId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The ID of the metric, where you want to post data points.")
  @JsonProperty(JSON_PROPERTY_TIMESERIES_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTimeseriesId() {
    return timeseriesId;
  }


  @JsonProperty(JSON_PROPERTY_TIMESERIES_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTimeseriesId(String timeseriesId) {
    this.timeseriesId = timeseriesId;
  }


  public EntityTimeseriesData dimensions(Map<String, String> dimensions) {
    this.dimensions = dimensions;
    return this;
  }

  public EntityTimeseriesData putDimensionsItem(String key, String dimensionsItem) {
    if (this.dimensions == null) {
      this.dimensions = new HashMap<>();
    }
    this.dimensions.put(key, dimensionsItem);
    return this;
  }

   /**
   * Dimensions of the data points you&#39;re posting.   The key of the metric dimension must be defined earlier in the metric definition.
   * @return dimensions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Dimensions of the data points you're posting.   The key of the metric dimension must be defined earlier in the metric definition.")
  @JsonProperty(JSON_PROPERTY_DIMENSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getDimensions() {
    return dimensions;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensions(Map<String, String> dimensions) {
    this.dimensions = dimensions;
  }


  public EntityTimeseriesData dataPoints(List<List<Float>> dataPoints) {
    this.dataPoints = dataPoints;
    return this;
  }

  public EntityTimeseriesData addDataPointsItem(List<Float> dataPointsItem) {
    this.dataPoints.add(dataPointsItem);
    return this;
  }

   /**
   * List of data points.   Each data point is an array, containing the timestamp and the value.   Timestamp is UTC milliseconds reported as a number, for example: &#x60;1520523365557&#x60;.   You have the guaranteed timeframe of **30 minutes** into the past.   A custom metric must be registered **before** you can report a metric value. Therefore, the timestamp for reporting a value must be after the registration time of the metric.
   * @return dataPoints
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "List of data points.   Each data point is an array, containing the timestamp and the value.   Timestamp is UTC milliseconds reported as a number, for example: `1520523365557`.   You have the guaranteed timeframe of **30 minutes** into the past.   A custom metric must be registered **before** you can report a metric value. Therefore, the timestamp for reporting a value must be after the registration time of the metric.")
  @JsonProperty(JSON_PROPERTY_DATA_POINTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<List<Float>> getDataPoints() {
    return dataPoints;
  }


  @JsonProperty(JSON_PROPERTY_DATA_POINTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDataPoints(List<List<Float>> dataPoints) {
    this.dataPoints = dataPoints;
  }


  /**
   * Return true if this EntityTimeseriesData object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntityTimeseriesData entityTimeseriesData = (EntityTimeseriesData) o;
    return Objects.equals(this.timeseriesId, entityTimeseriesData.timeseriesId) &&
        Objects.equals(this.dimensions, entityTimeseriesData.dimensions) &&
        Objects.equals(this.dataPoints, entityTimeseriesData.dataPoints);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timeseriesId, dimensions, dataPoints);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntityTimeseriesData {\n");
    sb.append("    timeseriesId: ").append(toIndentedString(timeseriesId)).append("\n");
    sb.append("    dimensions: ").append(toIndentedString(dimensions)).append("\n");
    sb.append("    dataPoints: ").append(toIndentedString(dataPoints)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

