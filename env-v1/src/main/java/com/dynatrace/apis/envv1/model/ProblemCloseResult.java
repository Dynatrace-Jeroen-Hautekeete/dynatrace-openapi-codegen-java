/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv1.model.ProblemComment;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The result of closing a problem.
 */
@ApiModel(description = "The result of closing a problem.")
@JsonPropertyOrder({
  ProblemCloseResult.JSON_PROPERTY_PROBLEM_ID,
  ProblemCloseResult.JSON_PROPERTY_COMMENT,
  ProblemCloseResult.JSON_PROPERTY_CLOSE_TIMESTAMP,
  ProblemCloseResult.JSON_PROPERTY_CLOSING
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class ProblemCloseResult {
  public static final String JSON_PROPERTY_PROBLEM_ID = "problemId";
  private String problemId;

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private ProblemComment comment;

  public static final String JSON_PROPERTY_CLOSE_TIMESTAMP = "closeTimestamp";
  private Long closeTimestamp;

  public static final String JSON_PROPERTY_CLOSING = "closing";
  private Boolean closing;

  public ProblemCloseResult() { 
  }

  public ProblemCloseResult problemId(String problemId) {
    this.problemId = problemId;
    return this;
  }

   /**
   * The ID of the problem.
   * @return problemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the problem.")
  @JsonProperty(JSON_PROPERTY_PROBLEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProblemId() {
    return problemId;
  }


  @JsonProperty(JSON_PROPERTY_PROBLEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProblemId(String problemId) {
    this.problemId = problemId;
  }


  public ProblemCloseResult comment(ProblemComment comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProblemComment getComment() {
    return comment;
  }


  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComment(ProblemComment comment) {
    this.comment = comment;
  }


  public ProblemCloseResult closeTimestamp(Long closeTimestamp) {
    this.closeTimestamp = closeTimestamp;
    return this;
  }

   /**
   * The timestamp when the closure was triggered.
   * @return closeTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp when the closure was triggered.")
  @JsonProperty(JSON_PROPERTY_CLOSE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getCloseTimestamp() {
    return closeTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_CLOSE_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCloseTimestamp(Long closeTimestamp) {
    this.closeTimestamp = closeTimestamp;
  }


  public ProblemCloseResult closing(Boolean closing) {
    this.closing = closing;
    return this;
  }

   /**
   * The problem is in process of closing (&#x60;true&#x60;) or closed (&#x60;false&#x60;).
   * @return closing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The problem is in process of closing (`true`) or closed (`false`).")
  @JsonProperty(JSON_PROPERTY_CLOSING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getClosing() {
    return closing;
  }


  @JsonProperty(JSON_PROPERTY_CLOSING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClosing(Boolean closing) {
    this.closing = closing;
  }


  /**
   * Return true if this ProblemCloseResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProblemCloseResult problemCloseResult = (ProblemCloseResult) o;
    return Objects.equals(this.problemId, problemCloseResult.problemId) &&
        Objects.equals(this.comment, problemCloseResult.comment) &&
        Objects.equals(this.closeTimestamp, problemCloseResult.closeTimestamp) &&
        Objects.equals(this.closing, problemCloseResult.closing);
  }

  @Override
  public int hashCode() {
    return Objects.hash(problemId, comment, closeTimestamp, closing);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProblemCloseResult {\n");
    sb.append("    problemId: ").append(toIndentedString(problemId)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    closeTimestamp: ").append(toIndentedString(closeTimestamp)).append("\n");
    sb.append("    closing: ").append(toIndentedString(closing)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

