/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * A query to extract log content to a custom column.
 */
@ApiModel(description = "A query to extract log content to a custom column.")
@JsonPropertyOrder({
  ExtractFields.JSON_PROPERTY_PARSING_MODE,
  ExtractFields.JSON_PROPERTY_CUSTOM_PARSING_PATTERNS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class ExtractFields {
  public static final String JSON_PROPERTY_PARSING_MODE = "parsingMode";
  private String parsingMode;

  public static final String JSON_PROPERTY_CUSTOM_PARSING_PATTERNS = "customParsingPatterns";
  private String customParsingPatterns;

  public ExtractFields() { 
  }

  public ExtractFields parsingMode(String parsingMode) {
    this.parsingMode = parsingMode;
    return this;
  }

   /**
   * The parsing mode for log analysis entries presentation. Possible values are: &#x60;json&#x60;, &#x60;disabled&#x60;, and &#x60;all&#x60;.
   * @return parsingMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The parsing mode for log analysis entries presentation. Possible values are: `json`, `disabled`, and `all`.")
  @JsonProperty(JSON_PROPERTY_PARSING_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getParsingMode() {
    return parsingMode;
  }


  @JsonProperty(JSON_PROPERTY_PARSING_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParsingMode(String parsingMode) {
    this.parsingMode = parsingMode;
  }


  public ExtractFields customParsingPatterns(String customParsingPatterns) {
    this.customParsingPatterns = customParsingPatterns;
    return this;
  }

   /**
   * The query for content extraction.   See [Search patterns in log data and parse results](https://dt-url.net/vv83rhp) in Dynatrace Documentation for the syntax definition and examples.
   * @return customParsingPatterns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The query for content extraction.   See [Search patterns in log data and parse results](https://dt-url.net/vv83rhp) in Dynatrace Documentation for the syntax definition and examples.")
  @JsonProperty(JSON_PROPERTY_CUSTOM_PARSING_PATTERNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCustomParsingPatterns() {
    return customParsingPatterns;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_PARSING_PATTERNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomParsingPatterns(String customParsingPatterns) {
    this.customParsingPatterns = customParsingPatterns;
  }


  /**
   * Return true if this ExtractFields object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExtractFields extractFields = (ExtractFields) o;
    return Objects.equals(this.parsingMode, extractFields.parsingMode) &&
        Objects.equals(this.customParsingPatterns, extractFields.customParsingPatterns);
  }

  @Override
  public int hashCode() {
    return Objects.hash(parsingMode, customParsingPatterns);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExtractFields {\n");
    sb.append("    parsingMode: ").append(toIndentedString(parsingMode)).append("\n");
    sb.append("    customParsingPatterns: ").append(toIndentedString(customParsingPatterns)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

