/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv1.model.Log4host;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * OS logs available on the host.
 */
@ApiModel(description = "OS logs available on the host.")
@JsonPropertyOrder({
  LogList4hostResult.JSON_PROPERTY_CONTENT_ACCESS,
  LogList4hostResult.JSON_PROPERTY_LOGS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class LogList4hostResult {
  public static final String JSON_PROPERTY_CONTENT_ACCESS = "contentAccess";
  private Boolean contentAccess;

  public static final String JSON_PROPERTY_LOGS = "logs";
  private List<Log4host> logs = null;

  public LogList4hostResult() { 
  }

  public LogList4hostResult contentAccess(Boolean contentAccess) {
    this.contentAccess = contentAccess;
    return this;
  }

   /**
   * The access to the log content is granted (&#x60;true&#x60;) or denied (&#x60;false&#x60;).
   * @return contentAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The access to the log content is granted (`true`) or denied (`false`).")
  @JsonProperty(JSON_PROPERTY_CONTENT_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getContentAccess() {
    return contentAccess;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContentAccess(Boolean contentAccess) {
    this.contentAccess = contentAccess;
  }


  public LogList4hostResult logs(List<Log4host> logs) {
    this.logs = logs;
    return this;
  }

  public LogList4hostResult addLogsItem(Log4host logsItem) {
    if (this.logs == null) {
      this.logs = new ArrayList<>();
    }
    this.logs.add(logsItem);
    return this;
  }

   /**
   * The list of available OS logs.
   * @return logs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of available OS logs.")
  @JsonProperty(JSON_PROPERTY_LOGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Log4host> getLogs() {
    return logs;
  }


  @JsonProperty(JSON_PROPERTY_LOGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogs(List<Log4host> logs) {
    this.logs = logs;
  }


  /**
   * Return true if this LogList4hostResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LogList4hostResult logList4hostResult = (LogList4hostResult) o;
    return Objects.equals(this.contentAccess, logList4hostResult.contentAccess) &&
        Objects.equals(this.logs, logList4hostResult.logs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contentAccess, logs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LogList4hostResult {\n");
    sb.append("    contentAccess: ").append(toIndentedString(contentAccess)).append("\n");
    sb.append("    logs: ").append(toIndentedString(logs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

