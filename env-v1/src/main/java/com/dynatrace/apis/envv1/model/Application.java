/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv1.model.ApplicationFromRelationships;
import com.dynatrace.apis.envv1.model.ApplicationToRelationships;
import com.dynatrace.apis.envv1.model.EntityShortRepresentation;
import com.dynatrace.apis.envv1.model.TagInfo;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Application
 */
@JsonPropertyOrder({
  Application.JSON_PROPERTY_ENTITY_ID,
  Application.JSON_PROPERTY_DISPLAY_NAME,
  Application.JSON_PROPERTY_CUSTOMIZED_NAME,
  Application.JSON_PROPERTY_DISCOVERED_NAME,
  Application.JSON_PROPERTY_FIRST_SEEN_TIMESTAMP,
  Application.JSON_PROPERTY_LAST_SEEN_TIMESTAMP,
  Application.JSON_PROPERTY_TAGS,
  Application.JSON_PROPERTY_FROM_RELATIONSHIPS,
  Application.JSON_PROPERTY_TO_RELATIONSHIPS,
  Application.JSON_PROPERTY_APPLICATION_TYPE,
  Application.JSON_PROPERTY_RULE_APPLIED_PATTERN,
  Application.JSON_PROPERTY_APPLICATION_MATCH_TARGET,
  Application.JSON_PROPERTY_RULE_APPLIED_MATCH_TYPE,
  Application.JSON_PROPERTY_MANAGEMENT_ZONES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class Application {
  public static final String JSON_PROPERTY_ENTITY_ID = "entityId";
  private String entityId;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_CUSTOMIZED_NAME = "customizedName";
  private String customizedName;

  public static final String JSON_PROPERTY_DISCOVERED_NAME = "discoveredName";
  private String discoveredName;

  public static final String JSON_PROPERTY_FIRST_SEEN_TIMESTAMP = "firstSeenTimestamp";
  private Long firstSeenTimestamp;

  public static final String JSON_PROPERTY_LAST_SEEN_TIMESTAMP = "lastSeenTimestamp";
  private Long lastSeenTimestamp;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private Set<TagInfo> tags = null;

  public static final String JSON_PROPERTY_FROM_RELATIONSHIPS = "fromRelationships";
  private ApplicationFromRelationships fromRelationships;

  public static final String JSON_PROPERTY_TO_RELATIONSHIPS = "toRelationships";
  private ApplicationToRelationships toRelationships;

  /**
   * Gets or Sets applicationType
   */
  public enum ApplicationTypeEnum {
    AGENTLESS_MONITORING("AGENTLESS_MONITORING"),
    
    AMP("AMP"),
    
    AUTO_INJECTED("AUTO_INJECTED"),
    
    DEFAULT("DEFAULT"),
    
    SAAS_VENDOR("SAAS_VENDOR");

    private String value;

    ApplicationTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ApplicationTypeEnum fromValue(String value) {
      for (ApplicationTypeEnum b : ApplicationTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_APPLICATION_TYPE = "applicationType";
  private ApplicationTypeEnum applicationType;

  public static final String JSON_PROPERTY_RULE_APPLIED_PATTERN = "ruleAppliedPattern";
  private String ruleAppliedPattern;

  /**
   * Gets or Sets applicationMatchTarget
   */
  public enum ApplicationMatchTargetEnum {
    DOMAIN("DOMAIN"),
    
    URL("URL");

    private String value;

    ApplicationMatchTargetEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ApplicationMatchTargetEnum fromValue(String value) {
      for (ApplicationMatchTargetEnum b : ApplicationMatchTargetEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_APPLICATION_MATCH_TARGET = "applicationMatchTarget";
  private ApplicationMatchTargetEnum applicationMatchTarget;

  /**
   * Gets or Sets ruleAppliedMatchType
   */
  public enum RuleAppliedMatchTypeEnum {
    ALL_URLS_AND_DOMAINS("ALL_URLS_AND_DOMAINS"),
    
    CONTAINS("CONTAINS"),
    
    ENDS("ENDS"),
    
    EQUALS("EQUALS"),
    
    MATCHES("MATCHES"),
    
    STARTS("STARTS");

    private String value;

    RuleAppliedMatchTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RuleAppliedMatchTypeEnum fromValue(String value) {
      for (RuleAppliedMatchTypeEnum b : RuleAppliedMatchTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RULE_APPLIED_MATCH_TYPE = "ruleAppliedMatchType";
  private RuleAppliedMatchTypeEnum ruleAppliedMatchType;

  public static final String JSON_PROPERTY_MANAGEMENT_ZONES = "managementZones";
  private List<EntityShortRepresentation> managementZones = null;

  public Application() { 
  }

  public Application entityId(String entityId) {
    this.entityId = entityId;
    return this;
  }

   /**
   * The Dynatrace entity ID of the required entity.
   * @return entityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Dynatrace entity ID of the required entity.")
  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEntityId() {
    return entityId;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }


  public Application displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * The name of the Dynatrace entity as displayed in the UI.
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the Dynatrace entity as displayed in the UI.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public Application customizedName(String customizedName) {
    this.customizedName = customizedName;
    return this;
  }

   /**
   * The customized name of the entity
   * @return customizedName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The customized name of the entity")
  @JsonProperty(JSON_PROPERTY_CUSTOMIZED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCustomizedName() {
    return customizedName;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMIZED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomizedName(String customizedName) {
    this.customizedName = customizedName;
  }


  public Application discoveredName(String discoveredName) {
    this.discoveredName = discoveredName;
    return this;
  }

   /**
   * The discovered name of the entity
   * @return discoveredName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The discovered name of the entity")
  @JsonProperty(JSON_PROPERTY_DISCOVERED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDiscoveredName() {
    return discoveredName;
  }


  @JsonProperty(JSON_PROPERTY_DISCOVERED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDiscoveredName(String discoveredName) {
    this.discoveredName = discoveredName;
  }


  public Application firstSeenTimestamp(Long firstSeenTimestamp) {
    this.firstSeenTimestamp = firstSeenTimestamp;
    return this;
  }

   /**
   * The timestamp of when the entity was first detected, in UTC milliseconds
   * @return firstSeenTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp of when the entity was first detected, in UTC milliseconds")
  @JsonProperty(JSON_PROPERTY_FIRST_SEEN_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getFirstSeenTimestamp() {
    return firstSeenTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_SEEN_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstSeenTimestamp(Long firstSeenTimestamp) {
    this.firstSeenTimestamp = firstSeenTimestamp;
  }


  public Application lastSeenTimestamp(Long lastSeenTimestamp) {
    this.lastSeenTimestamp = lastSeenTimestamp;
    return this;
  }

   /**
   * The timestamp of when the entity was last detected, in UTC milliseconds
   * @return lastSeenTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp of when the entity was last detected, in UTC milliseconds")
  @JsonProperty(JSON_PROPERTY_LAST_SEEN_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getLastSeenTimestamp() {
    return lastSeenTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_LAST_SEEN_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastSeenTimestamp(Long lastSeenTimestamp) {
    this.lastSeenTimestamp = lastSeenTimestamp;
  }


  public Application tags(Set<TagInfo> tags) {
    this.tags = tags;
    return this;
  }

  public Application addTagsItem(TagInfo tagsItem) {
    if (this.tags == null) {
      this.tags = new LinkedHashSet<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * The list of entity tags.
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of entity tags.")
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<TagInfo> getTags() {
    return tags;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(Set<TagInfo> tags) {
    this.tags = tags;
  }


  public Application fromRelationships(ApplicationFromRelationships fromRelationships) {
    this.fromRelationships = fromRelationships;
    return this;
  }

   /**
   * Get fromRelationships
   * @return fromRelationships
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FROM_RELATIONSHIPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApplicationFromRelationships getFromRelationships() {
    return fromRelationships;
  }


  @JsonProperty(JSON_PROPERTY_FROM_RELATIONSHIPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFromRelationships(ApplicationFromRelationships fromRelationships) {
    this.fromRelationships = fromRelationships;
  }


  public Application toRelationships(ApplicationToRelationships toRelationships) {
    this.toRelationships = toRelationships;
    return this;
  }

   /**
   * Get toRelationships
   * @return toRelationships
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TO_RELATIONSHIPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApplicationToRelationships getToRelationships() {
    return toRelationships;
  }


  @JsonProperty(JSON_PROPERTY_TO_RELATIONSHIPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToRelationships(ApplicationToRelationships toRelationships) {
    this.toRelationships = toRelationships;
  }


  public Application applicationType(ApplicationTypeEnum applicationType) {
    this.applicationType = applicationType;
    return this;
  }

   /**
   * Get applicationType
   * @return applicationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_APPLICATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApplicationTypeEnum getApplicationType() {
    return applicationType;
  }


  @JsonProperty(JSON_PROPERTY_APPLICATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplicationType(ApplicationTypeEnum applicationType) {
    this.applicationType = applicationType;
  }


  public Application ruleAppliedPattern(String ruleAppliedPattern) {
    this.ruleAppliedPattern = ruleAppliedPattern;
    return this;
  }

   /**
   * Get ruleAppliedPattern
   * @return ruleAppliedPattern
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RULE_APPLIED_PATTERN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRuleAppliedPattern() {
    return ruleAppliedPattern;
  }


  @JsonProperty(JSON_PROPERTY_RULE_APPLIED_PATTERN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRuleAppliedPattern(String ruleAppliedPattern) {
    this.ruleAppliedPattern = ruleAppliedPattern;
  }


  public Application applicationMatchTarget(ApplicationMatchTargetEnum applicationMatchTarget) {
    this.applicationMatchTarget = applicationMatchTarget;
    return this;
  }

   /**
   * Get applicationMatchTarget
   * @return applicationMatchTarget
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_APPLICATION_MATCH_TARGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApplicationMatchTargetEnum getApplicationMatchTarget() {
    return applicationMatchTarget;
  }


  @JsonProperty(JSON_PROPERTY_APPLICATION_MATCH_TARGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplicationMatchTarget(ApplicationMatchTargetEnum applicationMatchTarget) {
    this.applicationMatchTarget = applicationMatchTarget;
  }


  public Application ruleAppliedMatchType(RuleAppliedMatchTypeEnum ruleAppliedMatchType) {
    this.ruleAppliedMatchType = ruleAppliedMatchType;
    return this;
  }

   /**
   * Get ruleAppliedMatchType
   * @return ruleAppliedMatchType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RULE_APPLIED_MATCH_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RuleAppliedMatchTypeEnum getRuleAppliedMatchType() {
    return ruleAppliedMatchType;
  }


  @JsonProperty(JSON_PROPERTY_RULE_APPLIED_MATCH_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRuleAppliedMatchType(RuleAppliedMatchTypeEnum ruleAppliedMatchType) {
    this.ruleAppliedMatchType = ruleAppliedMatchType;
  }


  public Application managementZones(List<EntityShortRepresentation> managementZones) {
    this.managementZones = managementZones;
    return this;
  }

  public Application addManagementZonesItem(EntityShortRepresentation managementZonesItem) {
    if (this.managementZones == null) {
      this.managementZones = new ArrayList<>();
    }
    this.managementZones.add(managementZonesItem);
    return this;
  }

   /**
   * The management zones that the entity is part of.
   * @return managementZones
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The management zones that the entity is part of.")
  @JsonProperty(JSON_PROPERTY_MANAGEMENT_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EntityShortRepresentation> getManagementZones() {
    return managementZones;
  }


  @JsonProperty(JSON_PROPERTY_MANAGEMENT_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManagementZones(List<EntityShortRepresentation> managementZones) {
    this.managementZones = managementZones;
  }


  /**
   * Return true if this Application object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Application application = (Application) o;
    return Objects.equals(this.entityId, application.entityId) &&
        Objects.equals(this.displayName, application.displayName) &&
        Objects.equals(this.customizedName, application.customizedName) &&
        Objects.equals(this.discoveredName, application.discoveredName) &&
        Objects.equals(this.firstSeenTimestamp, application.firstSeenTimestamp) &&
        Objects.equals(this.lastSeenTimestamp, application.lastSeenTimestamp) &&
        Objects.equals(this.tags, application.tags) &&
        Objects.equals(this.fromRelationships, application.fromRelationships) &&
        Objects.equals(this.toRelationships, application.toRelationships) &&
        Objects.equals(this.applicationType, application.applicationType) &&
        Objects.equals(this.ruleAppliedPattern, application.ruleAppliedPattern) &&
        Objects.equals(this.applicationMatchTarget, application.applicationMatchTarget) &&
        Objects.equals(this.ruleAppliedMatchType, application.ruleAppliedMatchType) &&
        Objects.equals(this.managementZones, application.managementZones);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityId, displayName, customizedName, discoveredName, firstSeenTimestamp, lastSeenTimestamp, tags, fromRelationships, toRelationships, applicationType, ruleAppliedPattern, applicationMatchTarget, ruleAppliedMatchType, managementZones);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Application {\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    customizedName: ").append(toIndentedString(customizedName)).append("\n");
    sb.append("    discoveredName: ").append(toIndentedString(discoveredName)).append("\n");
    sb.append("    firstSeenTimestamp: ").append(toIndentedString(firstSeenTimestamp)).append("\n");
    sb.append("    lastSeenTimestamp: ").append(toIndentedString(lastSeenTimestamp)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    fromRelationships: ").append(toIndentedString(fromRelationships)).append("\n");
    sb.append("    toRelationships: ").append(toIndentedString(toRelationships)).append("\n");
    sb.append("    applicationType: ").append(toIndentedString(applicationType)).append("\n");
    sb.append("    ruleAppliedPattern: ").append(toIndentedString(ruleAppliedPattern)).append("\n");
    sb.append("    applicationMatchTarget: ").append(toIndentedString(applicationMatchTarget)).append("\n");
    sb.append("    ruleAppliedMatchType: ").append(toIndentedString(ruleAppliedMatchType)).append("\n");
    sb.append("    managementZones: ").append(toIndentedString(managementZones)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

