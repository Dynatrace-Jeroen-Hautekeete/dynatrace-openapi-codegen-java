/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv1.model.EventRestEntry;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Events of the environment.
 */
@ApiModel(description = "Events of the environment.")
@JsonPropertyOrder({
  EventQueryResult.JSON_PROPERTY_NEXT_CURSOR,
  EventQueryResult.JSON_PROPERTY_FROM,
  EventQueryResult.JSON_PROPERTY_TO,
  EventQueryResult.JSON_PROPERTY_TOTAL_EVENT_COUNT,
  EventQueryResult.JSON_PROPERTY_EVENTS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class EventQueryResult {
  public static final String JSON_PROPERTY_NEXT_CURSOR = "nextCursor";
  private String nextCursor;

  public static final String JSON_PROPERTY_FROM = "from";
  private Long from;

  public static final String JSON_PROPERTY_TO = "to";
  private Long to;

  public static final String JSON_PROPERTY_TOTAL_EVENT_COUNT = "totalEventCount";
  private Long totalEventCount;

  public static final String JSON_PROPERTY_EVENTS = "events";
  private List<EventRestEntry> events = null;

  public EventQueryResult() { 
  }

  public EventQueryResult nextCursor(String nextCursor) {
    this.nextCursor = nextCursor;
    return this;
  }

   /**
   * The cursor for the next 150 events, fitting the specified criteria.    Set this value for the **cursor** query parameter. Without it you&#39;ll get the first 150 events again.   You don&#39;t have to specify any additional parameters, because the cursor already contains all of them.
   * @return nextCursor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The cursor for the next 150 events, fitting the specified criteria.    Set this value for the **cursor** query parameter. Without it you'll get the first 150 events again.   You don't have to specify any additional parameters, because the cursor already contains all of them.")
  @JsonProperty(JSON_PROPERTY_NEXT_CURSOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNextCursor() {
    return nextCursor;
  }


  @JsonProperty(JSON_PROPERTY_NEXT_CURSOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNextCursor(String nextCursor) {
    this.nextCursor = nextCursor;
  }


  public EventQueryResult from(Long from) {
    this.from = from;
    return this;
  }

   /**
   * Start of the query timeframe.
   * @return from
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Start of the query timeframe.")
  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getFrom() {
    return from;
  }


  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFrom(Long from) {
    this.from = from;
  }


  public EventQueryResult to(Long to) {
    this.to = to;
    return this;
  }

   /**
   * End of the query timeframe.
   * @return to
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "End of the query timeframe.")
  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTo() {
    return to;
  }


  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTo(Long to) {
    this.to = to;
  }


  public EventQueryResult totalEventCount(Long totalEventCount) {
    this.totalEventCount = totalEventCount;
    return this;
  }

   /**
   * The total amount of events, fitting the specified criteria.
   * @return totalEventCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total amount of events, fitting the specified criteria.")
  @JsonProperty(JSON_PROPERTY_TOTAL_EVENT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTotalEventCount() {
    return totalEventCount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_EVENT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalEventCount(Long totalEventCount) {
    this.totalEventCount = totalEventCount;
  }


  public EventQueryResult events(List<EventRestEntry> events) {
    this.events = events;
    return this;
  }

  public EventQueryResult addEventsItem(EventRestEntry eventsItem) {
    if (this.events == null) {
      this.events = new ArrayList<>();
    }
    this.events.add(eventsItem);
    return this;
  }

   /**
   * The list of events.
   * @return events
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of events.")
  @JsonProperty(JSON_PROPERTY_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EventRestEntry> getEvents() {
    return events;
  }


  @JsonProperty(JSON_PROPERTY_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEvents(List<EventRestEntry> events) {
    this.events = events;
  }


  /**
   * Return true if this EventQueryResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventQueryResult eventQueryResult = (EventQueryResult) o;
    return Objects.equals(this.nextCursor, eventQueryResult.nextCursor) &&
        Objects.equals(this.from, eventQueryResult.from) &&
        Objects.equals(this.to, eventQueryResult.to) &&
        Objects.equals(this.totalEventCount, eventQueryResult.totalEventCount) &&
        Objects.equals(this.events, eventQueryResult.events);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nextCursor, from, to, totalEventCount, events);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventQueryResult {\n");
    sb.append("    nextCursor: ").append(toIndentedString(nextCursor)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    totalEventCount: ").append(toIndentedString(totalEventCount)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

