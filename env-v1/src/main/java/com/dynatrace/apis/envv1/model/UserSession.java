/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv1.model.DateProperty;
import com.dynatrace.apis.envv1.model.DoubleProperty;
import com.dynatrace.apis.envv1.model.LongProperty;
import com.dynatrace.apis.envv1.model.StringProperty;
import com.dynatrace.apis.envv1.model.UserSessionErrors;
import com.dynatrace.apis.envv1.model.UserSessionEvents;
import com.dynatrace.apis.envv1.model.UserSessionSyntheticEvent;
import com.dynatrace.apis.envv1.model.UserSessionUserAction;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * A [user session](https://dt-url.net/xv183rb8), encompassing multiple user actions and additional information about a user&#39;s visit.
 */
@ApiModel(description = "A [user session](https://dt-url.net/xv183rb8), encompassing multiple user actions and additional information about a user's visit.")
@JsonPropertyOrder({
  UserSession.JSON_PROPERTY_TENANT_ID,
  UserSession.JSON_PROPERTY_USER_SESSION_ID,
  UserSession.JSON_PROPERTY_START_TIME,
  UserSession.JSON_PROPERTY_END_TIME,
  UserSession.JSON_PROPERTY_DURATION,
  UserSession.JSON_PROPERTY_INTERNAL_USER_ID,
  UserSession.JSON_PROPERTY_USER_TYPE,
  UserSession.JSON_PROPERTY_REASON_FOR_NO_SESSION_REPLAY,
  UserSession.JSON_PROPERTY_REASON_FOR_NO_SESSION_REPLAY_MOBILE,
  UserSession.JSON_PROPERTY_APPLICATION_TYPE,
  UserSession.JSON_PROPERTY_BOUNCE,
  UserSession.JSON_PROPERTY_NEW_USER,
  UserSession.JSON_PROPERTY_USER_ACTION_COUNT,
  UserSession.JSON_PROPERTY_TOTAL_ERROR_COUNT,
  UserSession.JSON_PROPERTY_TOTAL_LICENSE_CREDIT_COUNT,
  UserSession.JSON_PROPERTY_MATCHING_CONVERSION_GOALS_COUNT,
  UserSession.JSON_PROPERTY_MATCHING_CONVERSION_GOALS,
  UserSession.JSON_PROPERTY_IP,
  UserSession.JSON_PROPERTY_CONTINENT,
  UserSession.JSON_PROPERTY_COUNTRY,
  UserSession.JSON_PROPERTY_REGION,
  UserSession.JSON_PROPERTY_CITY,
  UserSession.JSON_PROPERTY_BROWSER_TYPE,
  UserSession.JSON_PROPERTY_BROWSER_FAMILY,
  UserSession.JSON_PROPERTY_BROWSER_MAJOR_VERSION,
  UserSession.JSON_PROPERTY_OS_FAMILY,
  UserSession.JSON_PROPERTY_OS_VERSION,
  UserSession.JSON_PROPERTY_MANUFACTURER,
  UserSession.JSON_PROPERTY_DEVICE,
  UserSession.JSON_PROPERTY_USER_ID,
  UserSession.JSON_PROPERTY_SCREEN_HEIGHT,
  UserSession.JSON_PROPERTY_SCREEN_WIDTH,
  UserSession.JSON_PROPERTY_SCREEN_ORIENTATION,
  UserSession.JSON_PROPERTY_DISPLAY_RESOLUTION,
  UserSession.JSON_PROPERTY_HAS_CRASH,
  UserSession.JSON_PROPERTY_CRASH_GROUP_ID,
  UserSession.JSON_PROPERTY_HAS_SESSION_REPLAY,
  UserSession.JSON_PROPERTY_ISP,
  UserSession.JSON_PROPERTY_CLIENT_TYPE,
  UserSession.JSON_PROPERTY_BROWSER_MONITOR_ID,
  UserSession.JSON_PROPERTY_BROWSER_MONITOR_NAME,
  UserSession.JSON_PROPERTY_STRING_PROPERTIES,
  UserSession.JSON_PROPERTY_LONG_PROPERTIES,
  UserSession.JSON_PROPERTY_DOUBLE_PROPERTIES,
  UserSession.JSON_PROPERTY_DATE_PROPERTIES,
  UserSession.JSON_PROPERTY_USER_ACTIONS,
  UserSession.JSON_PROPERTY_EVENTS,
  UserSession.JSON_PROPERTY_ERRORS,
  UserSession.JSON_PROPERTY_SYNTHETIC_EVENTS,
  UserSession.JSON_PROPERTY_APP_VERSION,
  UserSession.JSON_PROPERTY_END_REASON,
  UserSession.JSON_PROPERTY_NUMBER_OF_RAGE_CLICKS,
  UserSession.JSON_PROPERTY_NUMBER_OF_RAGE_TAPS,
  UserSession.JSON_PROPERTY_USER_EXPERIENCE_SCORE,
  UserSession.JSON_PROPERTY_CARRIER,
  UserSession.JSON_PROPERTY_NETWORK_TECHNOLOGY,
  UserSession.JSON_PROPERTY_CONNECTION_TYPE,
  UserSession.JSON_PROPERTY_REPLAY_START,
  UserSession.JSON_PROPERTY_REPLAY_END,
  UserSession.JSON_PROPERTY_CLIENT_TIME_OFFSET,
  UserSession.JSON_PROPERTY_ROOTED_OR_JAILBROKEN,
  UserSession.JSON_PROPERTY_HAS_ERROR,
  UserSession.JSON_PROPERTY_PART_NUMBER
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class UserSession {
  public static final String JSON_PROPERTY_TENANT_ID = "tenantId";
  private String tenantId;

  public static final String JSON_PROPERTY_USER_SESSION_ID = "userSessionId";
  private String userSessionId;

  public static final String JSON_PROPERTY_START_TIME = "startTime";
  private Long startTime;

  public static final String JSON_PROPERTY_END_TIME = "endTime";
  private Long endTime;

  public static final String JSON_PROPERTY_DURATION = "duration";
  private Long duration;

  public static final String JSON_PROPERTY_INTERNAL_USER_ID = "internalUserId";
  private String internalUserId;

  /**
   * The type of the user. Indicates either a real human user (&#x60;REAL_USER&#x60;) or a robot (&#x60;ROBOT&#x60; or &#x60;SYNTHETIC&#x60;).
   */
  public enum UserTypeEnum {
    REAL_USER("REAL_USER"),
    
    ROBOT("ROBOT"),
    
    SYNTHETIC("SYNTHETIC");

    private String value;

    UserTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static UserTypeEnum fromValue(String value) {
      for (UserTypeEnum b : UserTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_USER_TYPE = "userType";
  private UserTypeEnum userType;

  /**
   * The reason for absence of Session Replay.
   */
  public enum ReasonForNoSessionReplayEnum {
    KILLED_EMERGENCY("KILLED_EMERGENCY"),
    
    KILLED_ERROR("KILLED_ERROR"),
    
    KILLED_MIN_JS_AGENT_VERSION("KILLED_MIN_JS_AGENT_VERSION"),
    
    KILLED_NO_LICENSE("KILLED_NO_LICENSE"),
    
    KILLED_WRONG_CONTENT_TYPE("KILLED_WRONG_CONTENT_TYPE"),
    
    MISCONFIGURED_CLUSTER("MISCONFIGURED_CLUSTER"),
    
    MODULE_DISABLED("MODULE_DISABLED"),
    
    NO_ACTIVITY("NO_ACTIVITY"),
    
    OPTED_OUT_SESSION("OPTED_OUT_SESSION"),
    
    OPT_IN_MODE("OPT_IN_MODE"),
    
    ROBOT_DETECTED("ROBOT_DETECTED"),
    
    SAMPLED_OUT("SAMPLED_OUT"),
    
    UNABLE_TO_LOAD_WORKER("UNABLE_TO_LOAD_WORKER"),
    
    UNHANDLED_EXCEPTION("UNHANDLED_EXCEPTION"),
    
    UNKNOWN("UNKNOWN"),
    
    UNSUPPORTED_BROWSER("UNSUPPORTED_BROWSER"),
    
    VIEW_EXCLUDED("VIEW_EXCLUDED");

    private String value;

    ReasonForNoSessionReplayEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ReasonForNoSessionReplayEnum fromValue(String value) {
      for (ReasonForNoSessionReplayEnum b : ReasonForNoSessionReplayEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REASON_FOR_NO_SESSION_REPLAY = "reasonForNoSessionReplay";
  private ReasonForNoSessionReplayEnum reasonForNoSessionReplay;

  /**
   * The reason for absence of Session Replay on mobile.
   */
  public enum ReasonForNoSessionReplayMobileEnum {
    DISABLED("DISABLED"),
    
    NO_AGENT("NO_AGENT"),
    
    OPTED_OUT("OPTED_OUT"),
    
    UNKNOWN("UNKNOWN");

    private String value;

    ReasonForNoSessionReplayMobileEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ReasonForNoSessionReplayMobileEnum fromValue(String value) {
      for (ReasonForNoSessionReplayMobileEnum b : ReasonForNoSessionReplayMobileEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REASON_FOR_NO_SESSION_REPLAY_MOBILE = "reasonForNoSessionReplayMobile";
  private ReasonForNoSessionReplayMobileEnum reasonForNoSessionReplayMobile;

  /**
   * The type of the application used in the user session.
   */
  public enum ApplicationTypeEnum {
    AMP_APPLICATION("AMP_APPLICATION"),
    
    CUSTOM_APPLICATION("CUSTOM_APPLICATION"),
    
    MOBILE_APPLICATION("MOBILE_APPLICATION"),
    
    WEB_APPLICATION("WEB_APPLICATION");

    private String value;

    ApplicationTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ApplicationTypeEnum fromValue(String value) {
      for (ApplicationTypeEnum b : ApplicationTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_APPLICATION_TYPE = "applicationType";
  private ApplicationTypeEnum applicationType;

  public static final String JSON_PROPERTY_BOUNCE = "bounce";
  private Boolean bounce;

  public static final String JSON_PROPERTY_NEW_USER = "newUser";
  private Boolean newUser;

  public static final String JSON_PROPERTY_USER_ACTION_COUNT = "userActionCount";
  private Integer userActionCount;

  public static final String JSON_PROPERTY_TOTAL_ERROR_COUNT = "totalErrorCount";
  private Integer totalErrorCount;

  public static final String JSON_PROPERTY_TOTAL_LICENSE_CREDIT_COUNT = "totalLicenseCreditCount";
  private Integer totalLicenseCreditCount;

  public static final String JSON_PROPERTY_MATCHING_CONVERSION_GOALS_COUNT = "matchingConversionGoalsCount";
  private Integer matchingConversionGoalsCount;

  public static final String JSON_PROPERTY_MATCHING_CONVERSION_GOALS = "matchingConversionGoals";
  private List<String> matchingConversionGoals = null;

  public static final String JSON_PROPERTY_IP = "ip";
  private String ip;

  public static final String JSON_PROPERTY_CONTINENT = "continent";
  private String continent;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private String country;

  public static final String JSON_PROPERTY_REGION = "region";
  private String region;

  public static final String JSON_PROPERTY_CITY = "city";
  private String city;

  public static final String JSON_PROPERTY_BROWSER_TYPE = "browserType";
  private String browserType;

  public static final String JSON_PROPERTY_BROWSER_FAMILY = "browserFamily";
  private String browserFamily;

  public static final String JSON_PROPERTY_BROWSER_MAJOR_VERSION = "browserMajorVersion";
  private String browserMajorVersion;

  public static final String JSON_PROPERTY_OS_FAMILY = "osFamily";
  private String osFamily;

  public static final String JSON_PROPERTY_OS_VERSION = "osVersion";
  private String osVersion;

  public static final String JSON_PROPERTY_MANUFACTURER = "manufacturer";
  private String manufacturer;

  public static final String JSON_PROPERTY_DEVICE = "device";
  private String device;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  private String userId;

  public static final String JSON_PROPERTY_SCREEN_HEIGHT = "screenHeight";
  private Integer screenHeight;

  public static final String JSON_PROPERTY_SCREEN_WIDTH = "screenWidth";
  private Integer screenWidth;

  /**
   * The detected screen orientation of the device used on the device for the user session.
   */
  public enum ScreenOrientationEnum {
    LANDSCAPE("LANDSCAPE"),
    
    PORTRAIT("PORTRAIT"),
    
    UNDEFINED("UNDEFINED");

    private String value;

    ScreenOrientationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ScreenOrientationEnum fromValue(String value) {
      for (ScreenOrientationEnum b : ScreenOrientationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SCREEN_ORIENTATION = "screenOrientation";
  private ScreenOrientationEnum screenOrientation;

  /**
   * The detected screen resolution of the device used for the user session.
   */
  public enum DisplayResolutionEnum {
    CGA("CGA"),
    
    DCI2K("DCI2K"),
    
    DCI4K("DCI4K"),
    
    DVGA("DVGA"),
    
    FHD("FHD"),
    
    FWVGA("FWVGA"),
    
    FWXGA("FWXGA"),
    
    GHDPLUS("GHDPlus"),
    
    HD("HD"),
    
    HQVGA("HQVGA"),
    
    HQVGA2("HQVGA2"),
    
    HSXGA("HSXGA"),
    
    HUXGA("HUXGA"),
    
    HVGA("HVGA"),
    
    HXGA("HXGA"),
    
    NTSC("NTSC"),
    
    PAL("PAL"),
    
    QHD("QHD"),
    
    QQVGA("QQVGA"),
    
    QSXGA("QSXGA"),
    
    QUXGA("QUXGA"),
    
    QVGA("QVGA"),
    
    QWXGA("QWXGA"),
    
    QXGA("QXGA"),
    
    SVGA("SVGA"),
    
    SXGA("SXGA"),
    
    SXGAMINUS("SXGAMinus"),
    
    SXGAPLUS("SXGAPlus"),
    
    UGA("UGA"),
    
    UHD16K("UHD16K"),
    
    UHD4K("UHD4K"),
    
    UHD8K("UHD8K"),
    
    UHDPLUS("UHDPlus"),
    
    UNKNOWN("UNKNOWN"),
    
    UWQHD("UWQHD"),
    
    UXGA("UXGA"),
    
    VGA("VGA"),
    
    WHSXGA("WHSXGA"),
    
    WHUXGA("WHUXGA"),
    
    WHXGA("WHXGA"),
    
    WQSXGA("WQSXGA"),
    
    WQUXGA("WQUXGA"),
    
    WQVGA("WQVGA"),
    
    WQVGA2("WQVGA2"),
    
    WQVGA3("WQVGA3"),
    
    WQXGA("WQXGA"),
    
    WQXGA2("WQXGA2"),
    
    WSVGA("WSVGA"),
    
    WSVGA2("WSVGA2"),
    
    WSXGA("WSXGA"),
    
    WSXGAPLUS("WSXGAPlus"),
    
    WUXGA("WUXGA"),
    
    WVGA("WVGA"),
    
    WVGA2("WVGA2"),
    
    WXGA("WXGA"),
    
    WXGA2("WXGA2"),
    
    WXGA3("WXGA3"),
    
    WXGAPLUS("WXGAPlus"),
    
    XGA("XGA"),
    
    XGAPLUS("XGAPLUS"),
    
    _1280X854("_1280x854"),
    
    NHD("nHD");

    private String value;

    DisplayResolutionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DisplayResolutionEnum fromValue(String value) {
      for (DisplayResolutionEnum b : DisplayResolutionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DISPLAY_RESOLUTION = "displayResolution";
  private DisplayResolutionEnum displayResolution;

  public static final String JSON_PROPERTY_HAS_CRASH = "hasCrash";
  private Boolean hasCrash;

  public static final String JSON_PROPERTY_CRASH_GROUP_ID = "crashGroupId";
  private String crashGroupId;

  public static final String JSON_PROPERTY_HAS_SESSION_REPLAY = "hasSessionReplay";
  private Boolean hasSessionReplay;

  public static final String JSON_PROPERTY_ISP = "isp";
  private String isp;

  public static final String JSON_PROPERTY_CLIENT_TYPE = "clientType";
  private String clientType;

  public static final String JSON_PROPERTY_BROWSER_MONITOR_ID = "browserMonitorId";
  private String browserMonitorId;

  public static final String JSON_PROPERTY_BROWSER_MONITOR_NAME = "browserMonitorName";
  private String browserMonitorName;

  public static final String JSON_PROPERTY_STRING_PROPERTIES = "stringProperties";
  private List<StringProperty> stringProperties = null;

  public static final String JSON_PROPERTY_LONG_PROPERTIES = "longProperties";
  private List<LongProperty> longProperties = null;

  public static final String JSON_PROPERTY_DOUBLE_PROPERTIES = "doubleProperties";
  private List<DoubleProperty> doubleProperties = null;

  public static final String JSON_PROPERTY_DATE_PROPERTIES = "dateProperties";
  private List<DateProperty> dateProperties = null;

  public static final String JSON_PROPERTY_USER_ACTIONS = "userActions";
  private List<UserSessionUserAction> userActions = null;

  public static final String JSON_PROPERTY_EVENTS = "events";
  private List<UserSessionEvents> events = null;

  public static final String JSON_PROPERTY_ERRORS = "errors";
  private List<UserSessionErrors> errors = null;

  public static final String JSON_PROPERTY_SYNTHETIC_EVENTS = "syntheticEvents";
  private List<UserSessionSyntheticEvent> syntheticEvents = null;

  public static final String JSON_PROPERTY_APP_VERSION = "appVersion";
  private String appVersion;

  /**
   * The reason for the end of the user session.
   */
  public enum EndReasonEnum {
    DURATION_LIMIT("DURATION_LIMIT"),
    
    END_EVENT("END_EVENT"),
    
    EXTENDED_TIMEOUT("EXTENDED_TIMEOUT"),
    
    TEST_FAILED("TEST_FAILED"),
    
    TIMEOUT("TIMEOUT"),
    
    USER_ACTION_LIMIT("USER_ACTION_LIMIT");

    private String value;

    EndReasonEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EndReasonEnum fromValue(String value) {
      for (EndReasonEnum b : EndReasonEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_END_REASON = "endReason";
  private EndReasonEnum endReason;

  public static final String JSON_PROPERTY_NUMBER_OF_RAGE_CLICKS = "numberOfRageClicks";
  private Integer numberOfRageClicks;

  public static final String JSON_PROPERTY_NUMBER_OF_RAGE_TAPS = "numberOfRageTaps";
  private Integer numberOfRageTaps;

  /**
   * The user experience score of the user session.
   */
  public enum UserExperienceScoreEnum {
    FRUSTRATED("FRUSTRATED"),
    
    SATISFIED("SATISFIED"),
    
    TOLERATED("TOLERATED"),
    
    UNDEFINED("UNDEFINED");

    private String value;

    UserExperienceScoreEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static UserExperienceScoreEnum fromValue(String value) {
      for (UserExperienceScoreEnum b : UserExperienceScoreEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_USER_EXPERIENCE_SCORE = "userExperienceScore";
  private UserExperienceScoreEnum userExperienceScore;

  public static final String JSON_PROPERTY_CARRIER = "carrier";
  private String carrier;

  public static final String JSON_PROPERTY_NETWORK_TECHNOLOGY = "networkTechnology";
  private String networkTechnology;

  /**
   * The serialized connection type of the mobile user session.
   */
  public enum ConnectionTypeEnum {
    LAN("LAN"),
    
    MOBILE("MOBILE"),
    
    OFFLINE("OFFLINE"),
    
    UNKNOWN("UNKNOWN"),
    
    WIFI("WIFI");

    private String value;

    ConnectionTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ConnectionTypeEnum fromValue(String value) {
      for (ConnectionTypeEnum b : ConnectionTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CONNECTION_TYPE = "connectionType";
  private ConnectionTypeEnum connectionType;

  public static final String JSON_PROPERTY_REPLAY_START = "replayStart";
  private Long replayStart;

  public static final String JSON_PROPERTY_REPLAY_END = "replayEnd";
  private Long replayEnd;

  public static final String JSON_PROPERTY_CLIENT_TIME_OFFSET = "clientTimeOffset";
  private Integer clientTimeOffset;

  public static final String JSON_PROPERTY_ROOTED_OR_JAILBROKEN = "rootedOrJailbroken";
  private Boolean rootedOrJailbroken;

  public static final String JSON_PROPERTY_HAS_ERROR = "hasError";
  private Boolean hasError;

  public static final String JSON_PROPERTY_PART_NUMBER = "partNumber";
  private Integer partNumber;

  public UserSession() { 
  }

  public UserSession tenantId(String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

   /**
   * The ID of the Dynatrace environment that captured the user session.   This field can not be queried via the User Session Query Language.
   * @return tenantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "azy123456", value = "The ID of the Dynatrace environment that captured the user session.   This field can not be queried via the User Session Query Language.")
  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTenantId() {
    return tenantId;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }


  public UserSession userSessionId(String userSessionId) {
    this.userSessionId = userSessionId;
    return this;
  }

   /**
   * The unique ID of the user session.
   * @return userSessionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique ID of the user session.")
  @JsonProperty(JSON_PROPERTY_USER_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserSessionId() {
    return userSessionId;
  }


  @JsonProperty(JSON_PROPERTY_USER_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserSessionId(String userSessionId) {
    this.userSessionId = userSessionId;
  }


  public UserSession startTime(Long startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * The timestamp of the first user action in the user session, in UTC milliseconds.
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1511363122754", value = "The timestamp of the first user action in the user session, in UTC milliseconds.")
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getStartTime() {
    return startTime;
  }


  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartTime(Long startTime) {
    this.startTime = startTime;
  }


  public UserSession endTime(Long endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * The timestamp of the last user action in the user session, in UTC milliseconds.
   * @return endTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1511363122754", value = "The timestamp of the last user action in the user session, in UTC milliseconds.")
  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getEndTime() {
    return endTime;
  }


  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndTime(Long endTime) {
    this.endTime = endTime;
  }


  public UserSession duration(Long duration) {
    this.duration = duration;
    return this;
  }

   /**
   * The duration of the user session, in milliseconds.    This is calculated as the amount of time between the start of the first user action and the end of the last user action.
   * @return duration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "122300", value = "The duration of the user session, in milliseconds.    This is calculated as the amount of time between the start of the first user action and the end of the last user action.")
  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getDuration() {
    return duration;
  }


  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDuration(Long duration) {
    this.duration = duration;
  }


  public UserSession internalUserId(String internalUserId) {
    this.internalUserId = internalUserId;
    return this;
  }

   /**
   * The unique ID of the user that triggered the user session.
   * @return internalUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique ID of the user that triggered the user session.")
  @JsonProperty(JSON_PROPERTY_INTERNAL_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInternalUserId() {
    return internalUserId;
  }


  @JsonProperty(JSON_PROPERTY_INTERNAL_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInternalUserId(String internalUserId) {
    this.internalUserId = internalUserId;
  }


  public UserSession userType(UserTypeEnum userType) {
    this.userType = userType;
    return this;
  }

   /**
   * The type of the user. Indicates either a real human user (&#x60;REAL_USER&#x60;) or a robot (&#x60;ROBOT&#x60; or &#x60;SYNTHETIC&#x60;).
   * @return userType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of the user. Indicates either a real human user (`REAL_USER`) or a robot (`ROBOT` or `SYNTHETIC`).")
  @JsonProperty(JSON_PROPERTY_USER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UserTypeEnum getUserType() {
    return userType;
  }


  @JsonProperty(JSON_PROPERTY_USER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserType(UserTypeEnum userType) {
    this.userType = userType;
  }


  public UserSession reasonForNoSessionReplay(ReasonForNoSessionReplayEnum reasonForNoSessionReplay) {
    this.reasonForNoSessionReplay = reasonForNoSessionReplay;
    return this;
  }

   /**
   * The reason for absence of Session Replay.
   * @return reasonForNoSessionReplay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The reason for absence of Session Replay.")
  @JsonProperty(JSON_PROPERTY_REASON_FOR_NO_SESSION_REPLAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ReasonForNoSessionReplayEnum getReasonForNoSessionReplay() {
    return reasonForNoSessionReplay;
  }


  @JsonProperty(JSON_PROPERTY_REASON_FOR_NO_SESSION_REPLAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReasonForNoSessionReplay(ReasonForNoSessionReplayEnum reasonForNoSessionReplay) {
    this.reasonForNoSessionReplay = reasonForNoSessionReplay;
  }


  public UserSession reasonForNoSessionReplayMobile(ReasonForNoSessionReplayMobileEnum reasonForNoSessionReplayMobile) {
    this.reasonForNoSessionReplayMobile = reasonForNoSessionReplayMobile;
    return this;
  }

   /**
   * The reason for absence of Session Replay on mobile.
   * @return reasonForNoSessionReplayMobile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The reason for absence of Session Replay on mobile.")
  @JsonProperty(JSON_PROPERTY_REASON_FOR_NO_SESSION_REPLAY_MOBILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ReasonForNoSessionReplayMobileEnum getReasonForNoSessionReplayMobile() {
    return reasonForNoSessionReplayMobile;
  }


  @JsonProperty(JSON_PROPERTY_REASON_FOR_NO_SESSION_REPLAY_MOBILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReasonForNoSessionReplayMobile(ReasonForNoSessionReplayMobileEnum reasonForNoSessionReplayMobile) {
    this.reasonForNoSessionReplayMobile = reasonForNoSessionReplayMobile;
  }


  public UserSession applicationType(ApplicationTypeEnum applicationType) {
    this.applicationType = applicationType;
    return this;
  }

   /**
   * The type of the application used in the user session.
   * @return applicationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of the application used in the user session.")
  @JsonProperty(JSON_PROPERTY_APPLICATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApplicationTypeEnum getApplicationType() {
    return applicationType;
  }


  @JsonProperty(JSON_PROPERTY_APPLICATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplicationType(ApplicationTypeEnum applicationType) {
    this.applicationType = applicationType;
  }


  public UserSession bounce(Boolean bounce) {
    this.bounce = bounce;
    return this;
  }

   /**
   * The user session has (&#x60;true&#x60;) or doesn&#39;t have (&#x60;false&#x60;) a bounce.    A bounce means there is only one (or less) user action in the user session.
   * @return bounce
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user session has (`true`) or doesn't have (`false`) a bounce.    A bounce means there is only one (or less) user action in the user session.")
  @JsonProperty(JSON_PROPERTY_BOUNCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getBounce() {
    return bounce;
  }


  @JsonProperty(JSON_PROPERTY_BOUNCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBounce(Boolean bounce) {
    this.bounce = bounce;
  }


  public UserSession newUser(Boolean newUser) {
    this.newUser = newUser;
    return this;
  }

   /**
   * The user is a first-time (&#x60;true&#x60;) or a returning user (&#x60;false&#x60;).
   * @return newUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user is a first-time (`true`) or a returning user (`false`).")
  @JsonProperty(JSON_PROPERTY_NEW_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNewUser() {
    return newUser;
  }


  @JsonProperty(JSON_PROPERTY_NEW_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNewUser(Boolean newUser) {
    this.newUser = newUser;
  }


  public UserSession userActionCount(Integer userActionCount) {
    this.userActionCount = userActionCount;
    return this;
  }

   /**
   * The number of user actions in the user session.
   * @return userActionCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of user actions in the user session.")
  @JsonProperty(JSON_PROPERTY_USER_ACTION_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUserActionCount() {
    return userActionCount;
  }


  @JsonProperty(JSON_PROPERTY_USER_ACTION_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserActionCount(Integer userActionCount) {
    this.userActionCount = userActionCount;
  }


  public UserSession totalErrorCount(Integer totalErrorCount) {
    this.totalErrorCount = totalErrorCount;
    return this;
  }

   /**
   * The number of errors detected in the user session.
   * @return totalErrorCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of errors detected in the user session.")
  @JsonProperty(JSON_PROPERTY_TOTAL_ERROR_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalErrorCount() {
    return totalErrorCount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_ERROR_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalErrorCount(Integer totalErrorCount) {
    this.totalErrorCount = totalErrorCount;
  }


  public UserSession totalLicenseCreditCount(Integer totalLicenseCreditCount) {
    this.totalLicenseCreditCount = totalLicenseCreditCount;
    return this;
  }

   /**
   * The amount of [DEM units](https://dt-url.net/ch03s4d) consumed by the session.
   * @return totalLicenseCreditCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The amount of [DEM units](https://dt-url.net/ch03s4d) consumed by the session.")
  @JsonProperty(JSON_PROPERTY_TOTAL_LICENSE_CREDIT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalLicenseCreditCount() {
    return totalLicenseCreditCount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_LICENSE_CREDIT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalLicenseCreditCount(Integer totalLicenseCreditCount) {
    this.totalLicenseCreditCount = totalLicenseCreditCount;
  }


  public UserSession matchingConversionGoalsCount(Integer matchingConversionGoalsCount) {
    this.matchingConversionGoalsCount = matchingConversionGoalsCount;
    return this;
  }

   /**
   * The number of conversion goals achieved by the user session.
   * @return matchingConversionGoalsCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of conversion goals achieved by the user session.")
  @JsonProperty(JSON_PROPERTY_MATCHING_CONVERSION_GOALS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMatchingConversionGoalsCount() {
    return matchingConversionGoalsCount;
  }


  @JsonProperty(JSON_PROPERTY_MATCHING_CONVERSION_GOALS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMatchingConversionGoalsCount(Integer matchingConversionGoalsCount) {
    this.matchingConversionGoalsCount = matchingConversionGoalsCount;
  }


  public UserSession matchingConversionGoals(List<String> matchingConversionGoals) {
    this.matchingConversionGoals = matchingConversionGoals;
    return this;
  }

  public UserSession addMatchingConversionGoalsItem(String matchingConversionGoalsItem) {
    if (this.matchingConversionGoals == null) {
      this.matchingConversionGoals = new ArrayList<>();
    }
    this.matchingConversionGoals.add(matchingConversionGoalsItem);
    return this;
  }

   /**
   * A list of conversion goals achieved by the user session.    Additionally, you can define conversion goals for a single user action.
   * @return matchingConversionGoals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of conversion goals achieved by the user session.    Additionally, you can define conversion goals for a single user action.")
  @JsonProperty(JSON_PROPERTY_MATCHING_CONVERSION_GOALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getMatchingConversionGoals() {
    return matchingConversionGoals;
  }


  @JsonProperty(JSON_PROPERTY_MATCHING_CONVERSION_GOALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMatchingConversionGoals(List<String> matchingConversionGoals) {
    this.matchingConversionGoals = matchingConversionGoals;
  }


  public UserSession ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * The IP address (IPv4 or IPv6) from which the user session originates.
   * @return ip
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IP address (IPv4 or IPv6) from which the user session originates.")
  @JsonProperty(JSON_PROPERTY_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIp() {
    return ip;
  }


  @JsonProperty(JSON_PROPERTY_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIp(String ip) {
    this.ip = ip;
  }


  public UserSession continent(String continent) {
    this.continent = continent;
    return this;
  }

   /**
   * The continent from which the user session originates (based on the IP address).
   * @return continent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The continent from which the user session originates (based on the IP address).")
  @JsonProperty(JSON_PROPERTY_CONTINENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContinent() {
    return continent;
  }


  @JsonProperty(JSON_PROPERTY_CONTINENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContinent(String continent) {
    this.continent = continent;
  }


  public UserSession country(String country) {
    this.country = country;
    return this;
  }

   /**
   * The country from which the user session originates (based on the IP address).
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The country from which the user session originates (based on the IP address).")
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(String country) {
    this.country = country;
  }


  public UserSession region(String region) {
    this.region = region;
    return this;
  }

   /**
   * The region from which the user session originates (based on the IP address).
   * @return region
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The region from which the user session originates (based on the IP address).")
  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRegion() {
    return region;
  }


  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegion(String region) {
    this.region = region;
  }


  public UserSession city(String city) {
    this.city = city;
    return this;
  }

   /**
   * The city from which the user session originates (based on the IP address).
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The city from which the user session originates (based on the IP address).")
  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCity() {
    return city;
  }


  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCity(String city) {
    this.city = city;
  }


  public UserSession browserType(String browserType) {
    this.browserType = browserType;
    return this;
  }

   /**
   * The type of browser used for the user session.
   * @return browserType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Mobile Browser, Desktop Browser", value = "The type of browser used for the user session.")
  @JsonProperty(JSON_PROPERTY_BROWSER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBrowserType() {
    return browserType;
  }


  @JsonProperty(JSON_PROPERTY_BROWSER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBrowserType(String browserType) {
    this.browserType = browserType;
  }


  public UserSession browserFamily(String browserFamily) {
    this.browserFamily = browserFamily;
    return this;
  }

   /**
   * The family of the browser used for the user session.
   * @return browserFamily
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Firefox, Chrome, IE", value = "The family of the browser used for the user session.")
  @JsonProperty(JSON_PROPERTY_BROWSER_FAMILY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBrowserFamily() {
    return browserFamily;
  }


  @JsonProperty(JSON_PROPERTY_BROWSER_FAMILY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBrowserFamily(String browserFamily) {
    this.browserFamily = browserFamily;
  }


  public UserSession browserMajorVersion(String browserMajorVersion) {
    this.browserMajorVersion = browserMajorVersion;
    return this;
  }

   /**
   * The version of the browser used for the user session.
   * @return browserMajorVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Firefox 57, Chrome 60", value = "The version of the browser used for the user session.")
  @JsonProperty(JSON_PROPERTY_BROWSER_MAJOR_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBrowserMajorVersion() {
    return browserMajorVersion;
  }


  @JsonProperty(JSON_PROPERTY_BROWSER_MAJOR_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBrowserMajorVersion(String browserMajorVersion) {
    this.browserMajorVersion = browserMajorVersion;
  }


  public UserSession osFamily(String osFamily) {
    this.osFamily = osFamily;
    return this;
  }

   /**
   * The type of operating system used for the user session.
   * @return osFamily
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Windows, Linux", value = "The type of operating system used for the user session.")
  @JsonProperty(JSON_PROPERTY_OS_FAMILY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOsFamily() {
    return osFamily;
  }


  @JsonProperty(JSON_PROPERTY_OS_FAMILY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOsFamily(String osFamily) {
    this.osFamily = osFamily;
  }


  public UserSession osVersion(String osVersion) {
    this.osVersion = osVersion;
    return this;
  }

   /**
   * The version of the operating system used for the user session.
   * @return osVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "iOS 9, Windows 10", value = "The version of the operating system used for the user session.")
  @JsonProperty(JSON_PROPERTY_OS_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOsVersion() {
    return osVersion;
  }


  @JsonProperty(JSON_PROPERTY_OS_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOsVersion(String osVersion) {
    this.osVersion = osVersion;
  }


  public UserSession manufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
    return this;
  }

   /**
   * The detected manufacturer of the device used for the user session.
   * @return manufacturer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Samsung, Apple", value = "The detected manufacturer of the device used for the user session.")
  @JsonProperty(JSON_PROPERTY_MANUFACTURER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getManufacturer() {
    return manufacturer;
  }


  @JsonProperty(JSON_PROPERTY_MANUFACTURER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
  }


  public UserSession device(String device) {
    this.device = device;
    return this;
  }

   /**
   * The detected device used for the user session.
   * @return device
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Samsung S5, Apple iPhone X", value = "The detected device used for the user session.")
  @JsonProperty(JSON_PROPERTY_DEVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDevice() {
    return device;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDevice(String device) {
    this.device = device;
  }


  public UserSession userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * The user ID provided for the user session by session tagging.
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "user@example.org", value = "The user ID provided for the user session by session tagging.")
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(String userId) {
    this.userId = userId;
  }


  public UserSession screenHeight(Integer screenHeight) {
    this.screenHeight = screenHeight;
    return this;
  }

   /**
   * The detected screen height of the device used for the user session.
   * @return screenHeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "768", value = "The detected screen height of the device used for the user session.")
  @JsonProperty(JSON_PROPERTY_SCREEN_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getScreenHeight() {
    return screenHeight;
  }


  @JsonProperty(JSON_PROPERTY_SCREEN_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScreenHeight(Integer screenHeight) {
    this.screenHeight = screenHeight;
  }


  public UserSession screenWidth(Integer screenWidth) {
    this.screenWidth = screenWidth;
    return this;
  }

   /**
   * The detected screen width of the device used for the user session.
   * @return screenWidth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1024", value = "The detected screen width of the device used for the user session.")
  @JsonProperty(JSON_PROPERTY_SCREEN_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getScreenWidth() {
    return screenWidth;
  }


  @JsonProperty(JSON_PROPERTY_SCREEN_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScreenWidth(Integer screenWidth) {
    this.screenWidth = screenWidth;
  }


  public UserSession screenOrientation(ScreenOrientationEnum screenOrientation) {
    this.screenOrientation = screenOrientation;
    return this;
  }

   /**
   * The detected screen orientation of the device used on the device for the user session.
   * @return screenOrientation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "LANDSCAPE", value = "The detected screen orientation of the device used on the device for the user session.")
  @JsonProperty(JSON_PROPERTY_SCREEN_ORIENTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ScreenOrientationEnum getScreenOrientation() {
    return screenOrientation;
  }


  @JsonProperty(JSON_PROPERTY_SCREEN_ORIENTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScreenOrientation(ScreenOrientationEnum screenOrientation) {
    this.screenOrientation = screenOrientation;
  }


  public UserSession displayResolution(DisplayResolutionEnum displayResolution) {
    this.displayResolution = displayResolution;
    return this;
  }

   /**
   * The detected screen resolution of the device used for the user session.
   * @return displayResolution
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "VGA, UHD4K, HUXGA", value = "The detected screen resolution of the device used for the user session.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_RESOLUTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DisplayResolutionEnum getDisplayResolution() {
    return displayResolution;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_RESOLUTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayResolution(DisplayResolutionEnum displayResolution) {
    this.displayResolution = displayResolution;
  }


  public UserSession hasCrash(Boolean hasCrash) {
    this.hasCrash = hasCrash;
    return this;
  }

   /**
   * The user session includes (&#x60;true&#x60;) or doesn&#39;t include (&#x60;false&#x60;) a crash.
   * @return hasCrash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user session includes (`true`) or doesn't include (`false`) a crash.")
  @JsonProperty(JSON_PROPERTY_HAS_CRASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasCrash() {
    return hasCrash;
  }


  @JsonProperty(JSON_PROPERTY_HAS_CRASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasCrash(Boolean hasCrash) {
    this.hasCrash = hasCrash;
  }


  public UserSession crashGroupId(String crashGroupId) {
    this.crashGroupId = crashGroupId;
    return this;
  }

   /**
   * If a mobile session crashed, this is the ID of the group to which the crashed session belongs.    If the session did not crash or the session is not a mobile session, it has the &#x60;null&#x60; value.
   * @return crashGroupId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If a mobile session crashed, this is the ID of the group to which the crashed session belongs.    If the session did not crash or the session is not a mobile session, it has the `null` value.")
  @JsonProperty(JSON_PROPERTY_CRASH_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCrashGroupId() {
    return crashGroupId;
  }


  @JsonProperty(JSON_PROPERTY_CRASH_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCrashGroupId(String crashGroupId) {
    this.crashGroupId = crashGroupId;
  }


  public UserSession hasSessionReplay(Boolean hasSessionReplay) {
    this.hasSessionReplay = hasSessionReplay;
    return this;
  }

   /**
   * Session Replay is (&#x60;true&#x60;) or is not (&#x60;false&#x60;) available for the session.
   * @return hasSessionReplay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Session Replay is (`true`) or is not (`false`) available for the session.")
  @JsonProperty(JSON_PROPERTY_HAS_SESSION_REPLAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasSessionReplay() {
    return hasSessionReplay;
  }


  @JsonProperty(JSON_PROPERTY_HAS_SESSION_REPLAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasSessionReplay(Boolean hasSessionReplay) {
    this.hasSessionReplay = hasSessionReplay;
  }


  public UserSession isp(String isp) {
    this.isp = isp;
    return this;
  }

   /**
   * The internet service provider from which the user session originates (based on the IP address).
   * @return isp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The internet service provider from which the user session originates (based on the IP address).")
  @JsonProperty(JSON_PROPERTY_ISP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIsp() {
    return isp;
  }


  @JsonProperty(JSON_PROPERTY_ISP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsp(String isp) {
    this.isp = isp;
  }


  public UserSession clientType(String clientType) {
    this.clientType = clientType;
    return this;
  }

   /**
   * Additional information about the client.   This field can not be queried via the user session query language. Use the **browserType** field instead.
   * @return clientType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = " Desktop Browser, Mobile App, Mobile Browser, Robot, Synthetic Agent, Tablet Browser", value = "Additional information about the client.   This field can not be queried via the user session query language. Use the **browserType** field instead.")
  @JsonProperty(JSON_PROPERTY_CLIENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClientType() {
    return clientType;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientType(String clientType) {
    this.clientType = clientType;
  }


  public UserSession browserMonitorId(String browserMonitorId) {
    this.browserMonitorId = browserMonitorId;
    return this;
  }

   /**
   * The ID of the Synthetic browser monitor that created the session.
   * @return browserMonitorId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the Synthetic browser monitor that created the session.")
  @JsonProperty(JSON_PROPERTY_BROWSER_MONITOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBrowserMonitorId() {
    return browserMonitorId;
  }


  @JsonProperty(JSON_PROPERTY_BROWSER_MONITOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBrowserMonitorId(String browserMonitorId) {
    this.browserMonitorId = browserMonitorId;
  }


  public UserSession browserMonitorName(String browserMonitorName) {
    this.browserMonitorName = browserMonitorName;
    return this;
  }

   /**
   * The name of the Synthetic browser monitor that created the session.
   * @return browserMonitorName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the Synthetic browser monitor that created the session.")
  @JsonProperty(JSON_PROPERTY_BROWSER_MONITOR_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBrowserMonitorName() {
    return browserMonitorName;
  }


  @JsonProperty(JSON_PROPERTY_BROWSER_MONITOR_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBrowserMonitorName(String browserMonitorName) {
    this.browserMonitorName = browserMonitorName;
  }


  public UserSession stringProperties(List<StringProperty> stringProperties) {
    this.stringProperties = stringProperties;
    return this;
  }

  public UserSession addStringPropertiesItem(StringProperty stringPropertiesItem) {
    if (this.stringProperties == null) {
      this.stringProperties = new ArrayList<>();
    }
    this.stringProperties.add(stringPropertiesItem);
    return this;
  }

   /**
   * A list of custom properties of the user session with string values.
   * @return stringProperties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of custom properties of the user session with string values.")
  @JsonProperty(JSON_PROPERTY_STRING_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<StringProperty> getStringProperties() {
    return stringProperties;
  }


  @JsonProperty(JSON_PROPERTY_STRING_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStringProperties(List<StringProperty> stringProperties) {
    this.stringProperties = stringProperties;
  }


  public UserSession longProperties(List<LongProperty> longProperties) {
    this.longProperties = longProperties;
    return this;
  }

  public UserSession addLongPropertiesItem(LongProperty longPropertiesItem) {
    if (this.longProperties == null) {
      this.longProperties = new ArrayList<>();
    }
    this.longProperties.add(longPropertiesItem);
    return this;
  }

   /**
   * A list of custom properties of the user session with integer (short or long) values.
   * @return longProperties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of custom properties of the user session with integer (short or long) values.")
  @JsonProperty(JSON_PROPERTY_LONG_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LongProperty> getLongProperties() {
    return longProperties;
  }


  @JsonProperty(JSON_PROPERTY_LONG_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLongProperties(List<LongProperty> longProperties) {
    this.longProperties = longProperties;
  }


  public UserSession doubleProperties(List<DoubleProperty> doubleProperties) {
    this.doubleProperties = doubleProperties;
    return this;
  }

  public UserSession addDoublePropertiesItem(DoubleProperty doublePropertiesItem) {
    if (this.doubleProperties == null) {
      this.doubleProperties = new ArrayList<>();
    }
    this.doubleProperties.add(doublePropertiesItem);
    return this;
  }

   /**
   * A list of custom properties of the user session with floating-point numerical values.
   * @return doubleProperties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of custom properties of the user session with floating-point numerical values.")
  @JsonProperty(JSON_PROPERTY_DOUBLE_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DoubleProperty> getDoubleProperties() {
    return doubleProperties;
  }


  @JsonProperty(JSON_PROPERTY_DOUBLE_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDoubleProperties(List<DoubleProperty> doubleProperties) {
    this.doubleProperties = doubleProperties;
  }


  public UserSession dateProperties(List<DateProperty> dateProperties) {
    this.dateProperties = dateProperties;
    return this;
  }

  public UserSession addDatePropertiesItem(DateProperty datePropertiesItem) {
    if (this.dateProperties == null) {
      this.dateProperties = new ArrayList<>();
    }
    this.dateProperties.add(datePropertiesItem);
    return this;
  }

   /**
   * A list of custom properties of the user session with date values.
   * @return dateProperties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of custom properties of the user session with date values.")
  @JsonProperty(JSON_PROPERTY_DATE_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DateProperty> getDateProperties() {
    return dateProperties;
  }


  @JsonProperty(JSON_PROPERTY_DATE_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateProperties(List<DateProperty> dateProperties) {
    this.dateProperties = dateProperties;
  }


  public UserSession userActions(List<UserSessionUserAction> userActions) {
    this.userActions = userActions;
    return this;
  }

  public UserSession addUserActionsItem(UserSessionUserAction userActionsItem) {
    if (this.userActions == null) {
      this.userActions = new ArrayList<>();
    }
    this.userActions.add(userActionsItem);
    return this;
  }

   /**
   * A list of user actions recorded in the user session.
   * @return userActions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of user actions recorded in the user session.")
  @JsonProperty(JSON_PROPERTY_USER_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UserSessionUserAction> getUserActions() {
    return userActions;
  }


  @JsonProperty(JSON_PROPERTY_USER_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserActions(List<UserSessionUserAction> userActions) {
    this.userActions = userActions;
  }


  public UserSession events(List<UserSessionEvents> events) {
    this.events = events;
    return this;
  }

  public UserSession addEventsItem(UserSessionEvents eventsItem) {
    if (this.events == null) {
      this.events = new ArrayList<>();
    }
    this.events.add(eventsItem);
    return this;
  }

   /**
   * A list of additional events recorded in the user session.
   * @return events
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of additional events recorded in the user session.")
  @JsonProperty(JSON_PROPERTY_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UserSessionEvents> getEvents() {
    return events;
  }


  @JsonProperty(JSON_PROPERTY_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEvents(List<UserSessionEvents> events) {
    this.events = events;
  }


  public UserSession errors(List<UserSessionErrors> errors) {
    this.errors = errors;
    return this;
  }

  public UserSession addErrorsItem(UserSessionErrors errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * A list of errors recorded in the user session.
   * @return errors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of errors recorded in the user session.")
  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UserSessionErrors> getErrors() {
    return errors;
  }


  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrors(List<UserSessionErrors> errors) {
    this.errors = errors;
  }


  public UserSession syntheticEvents(List<UserSessionSyntheticEvent> syntheticEvents) {
    this.syntheticEvents = syntheticEvents;
    return this;
  }

  public UserSession addSyntheticEventsItem(UserSessionSyntheticEvent syntheticEventsItem) {
    if (this.syntheticEvents == null) {
      this.syntheticEvents = new ArrayList<>();
    }
    this.syntheticEvents.add(syntheticEventsItem);
    return this;
  }

   /**
   * A list of synthetic events recorded in the user session.
   * @return syntheticEvents
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of synthetic events recorded in the user session.")
  @JsonProperty(JSON_PROPERTY_SYNTHETIC_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UserSessionSyntheticEvent> getSyntheticEvents() {
    return syntheticEvents;
  }


  @JsonProperty(JSON_PROPERTY_SYNTHETIC_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSyntheticEvents(List<UserSessionSyntheticEvent> syntheticEvents) {
    this.syntheticEvents = syntheticEvents;
  }


  public UserSession appVersion(String appVersion) {
    this.appVersion = appVersion;
    return this;
  }

   /**
   * The version of the application where the user session has been recorded.    This information is provided by another integration, such as OpenKit.
   * @return appVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The version of the application where the user session has been recorded.    This information is provided by another integration, such as OpenKit.")
  @JsonProperty(JSON_PROPERTY_APP_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAppVersion() {
    return appVersion;
  }


  @JsonProperty(JSON_PROPERTY_APP_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAppVersion(String appVersion) {
    this.appVersion = appVersion;
  }


  public UserSession endReason(EndReasonEnum endReason) {
    this.endReason = endReason;
    return this;
  }

   /**
   * The reason for the end of the user session.
   * @return endReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The reason for the end of the user session.")
  @JsonProperty(JSON_PROPERTY_END_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EndReasonEnum getEndReason() {
    return endReason;
  }


  @JsonProperty(JSON_PROPERTY_END_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndReason(EndReasonEnum endReason) {
    this.endReason = endReason;
  }


  public UserSession numberOfRageClicks(Integer numberOfRageClicks) {
    this.numberOfRageClicks = numberOfRageClicks;
    return this;
  }

   /**
   * The number of rage clicks detected in the user session.
   * @return numberOfRageClicks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of rage clicks detected in the user session.")
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_RAGE_CLICKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumberOfRageClicks() {
    return numberOfRageClicks;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_RAGE_CLICKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberOfRageClicks(Integer numberOfRageClicks) {
    this.numberOfRageClicks = numberOfRageClicks;
  }


  public UserSession numberOfRageTaps(Integer numberOfRageTaps) {
    this.numberOfRageTaps = numberOfRageTaps;
    return this;
  }

   /**
   * The number of rage taps detected in the user session.
   * @return numberOfRageTaps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of rage taps detected in the user session.")
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_RAGE_TAPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumberOfRageTaps() {
    return numberOfRageTaps;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_RAGE_TAPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberOfRageTaps(Integer numberOfRageTaps) {
    this.numberOfRageTaps = numberOfRageTaps;
  }


  public UserSession userExperienceScore(UserExperienceScoreEnum userExperienceScore) {
    this.userExperienceScore = userExperienceScore;
    return this;
  }

   /**
   * The user experience score of the user session.
   * @return userExperienceScore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user experience score of the user session.")
  @JsonProperty(JSON_PROPERTY_USER_EXPERIENCE_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UserExperienceScoreEnum getUserExperienceScore() {
    return userExperienceScore;
  }


  @JsonProperty(JSON_PROPERTY_USER_EXPERIENCE_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserExperienceScore(UserExperienceScoreEnum userExperienceScore) {
    this.userExperienceScore = userExperienceScore;
  }


  public UserSession carrier(String carrier) {
    this.carrier = carrier;
    return this;
  }

   /**
   * The carrier information of the mobile user session.
   * @return carrier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The carrier information of the mobile user session.")
  @JsonProperty(JSON_PROPERTY_CARRIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCarrier() {
    return carrier;
  }


  @JsonProperty(JSON_PROPERTY_CARRIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCarrier(String carrier) {
    this.carrier = carrier;
  }


  public UserSession networkTechnology(String networkTechnology) {
    this.networkTechnology = networkTechnology;
    return this;
  }

   /**
   * The network technology information of the mobile user session.
   * @return networkTechnology
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The network technology information of the mobile user session.")
  @JsonProperty(JSON_PROPERTY_NETWORK_TECHNOLOGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNetworkTechnology() {
    return networkTechnology;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK_TECHNOLOGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetworkTechnology(String networkTechnology) {
    this.networkTechnology = networkTechnology;
  }


  public UserSession connectionType(ConnectionTypeEnum connectionType) {
    this.connectionType = connectionType;
    return this;
  }

   /**
   * The serialized connection type of the mobile user session.
   * @return connectionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The serialized connection type of the mobile user session.")
  @JsonProperty(JSON_PROPERTY_CONNECTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConnectionTypeEnum getConnectionType() {
    return connectionType;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectionType(ConnectionTypeEnum connectionType) {
    this.connectionType = connectionType;
  }


  public UserSession replayStart(Long replayStart) {
    this.replayStart = replayStart;
    return this;
  }

   /**
   * The timestamp of the Session Replay start, in UTC milliseconds.
   * @return replayStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp of the Session Replay start, in UTC milliseconds.")
  @JsonProperty(JSON_PROPERTY_REPLAY_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getReplayStart() {
    return replayStart;
  }


  @JsonProperty(JSON_PROPERTY_REPLAY_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReplayStart(Long replayStart) {
    this.replayStart = replayStart;
  }


  public UserSession replayEnd(Long replayEnd) {
    this.replayEnd = replayEnd;
    return this;
  }

   /**
   * The timestamp of the Session Replay end, in UTC milliseconds.
   * @return replayEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp of the Session Replay end, in UTC milliseconds.")
  @JsonProperty(JSON_PROPERTY_REPLAY_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getReplayEnd() {
    return replayEnd;
  }


  @JsonProperty(JSON_PROPERTY_REPLAY_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReplayEnd(Long replayEnd) {
    this.replayEnd = replayEnd;
  }


  public UserSession clientTimeOffset(Integer clientTimeOffset) {
    this.clientTimeOffset = clientTimeOffset;
    return this;
  }

   /**
   * The time offset of the client, in milliseconds
   * @return clientTimeOffset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time offset of the client, in milliseconds")
  @JsonProperty(JSON_PROPERTY_CLIENT_TIME_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getClientTimeOffset() {
    return clientTimeOffset;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_TIME_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientTimeOffset(Integer clientTimeOffset) {
    this.clientTimeOffset = clientTimeOffset;
  }


  public UserSession rootedOrJailbroken(Boolean rootedOrJailbroken) {
    this.rootedOrJailbroken = rootedOrJailbroken;
    return this;
  }

   /**
   * The mobile device is rooted/jailbroken (&#x60;true&#x60;) or genuine (&#x60;false&#x60;).   Has the value of &#x60;null&#x60; if the status is unknown or undefined. Custom applications always report unknown/undefined.
   * @return rootedOrJailbroken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The mobile device is rooted/jailbroken (`true`) or genuine (`false`).   Has the value of `null` if the status is unknown or undefined. Custom applications always report unknown/undefined.")
  @JsonProperty(JSON_PROPERTY_ROOTED_OR_JAILBROKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRootedOrJailbroken() {
    return rootedOrJailbroken;
  }


  @JsonProperty(JSON_PROPERTY_ROOTED_OR_JAILBROKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRootedOrJailbroken(Boolean rootedOrJailbroken) {
    this.rootedOrJailbroken = rootedOrJailbroken;
  }


  public UserSession hasError(Boolean hasError) {
    this.hasError = hasError;
    return this;
  }

   /**
   * The user session includes (&#x60;true&#x60;) or doesn&#39;t include (&#x60;false&#x60;) an error.
   * @return hasError
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user session includes (`true`) or doesn't include (`false`) an error.")
  @JsonProperty(JSON_PROPERTY_HAS_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasError() {
    return hasError;
  }


  @JsonProperty(JSON_PROPERTY_HAS_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasError(Boolean hasError) {
    this.hasError = hasError;
  }


  public UserSession partNumber(Integer partNumber) {
    this.partNumber = partNumber;
    return this;
  }

   /**
   * User sessions can be split into multiple parts for various technical reasons (e.g. after 200 user actions). This &#x60;partNumber&#x60; represents the number of each part of the overall user session.
   * @return partNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User sessions can be split into multiple parts for various technical reasons (e.g. after 200 user actions). This `partNumber` represents the number of each part of the overall user session.")
  @JsonProperty(JSON_PROPERTY_PART_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPartNumber() {
    return partNumber;
  }


  @JsonProperty(JSON_PROPERTY_PART_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPartNumber(Integer partNumber) {
    this.partNumber = partNumber;
  }


  /**
   * Return true if this UserSession object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserSession userSession = (UserSession) o;
    return Objects.equals(this.tenantId, userSession.tenantId) &&
        Objects.equals(this.userSessionId, userSession.userSessionId) &&
        Objects.equals(this.startTime, userSession.startTime) &&
        Objects.equals(this.endTime, userSession.endTime) &&
        Objects.equals(this.duration, userSession.duration) &&
        Objects.equals(this.internalUserId, userSession.internalUserId) &&
        Objects.equals(this.userType, userSession.userType) &&
        Objects.equals(this.reasonForNoSessionReplay, userSession.reasonForNoSessionReplay) &&
        Objects.equals(this.reasonForNoSessionReplayMobile, userSession.reasonForNoSessionReplayMobile) &&
        Objects.equals(this.applicationType, userSession.applicationType) &&
        Objects.equals(this.bounce, userSession.bounce) &&
        Objects.equals(this.newUser, userSession.newUser) &&
        Objects.equals(this.userActionCount, userSession.userActionCount) &&
        Objects.equals(this.totalErrorCount, userSession.totalErrorCount) &&
        Objects.equals(this.totalLicenseCreditCount, userSession.totalLicenseCreditCount) &&
        Objects.equals(this.matchingConversionGoalsCount, userSession.matchingConversionGoalsCount) &&
        Objects.equals(this.matchingConversionGoals, userSession.matchingConversionGoals) &&
        Objects.equals(this.ip, userSession.ip) &&
        Objects.equals(this.continent, userSession.continent) &&
        Objects.equals(this.country, userSession.country) &&
        Objects.equals(this.region, userSession.region) &&
        Objects.equals(this.city, userSession.city) &&
        Objects.equals(this.browserType, userSession.browserType) &&
        Objects.equals(this.browserFamily, userSession.browserFamily) &&
        Objects.equals(this.browserMajorVersion, userSession.browserMajorVersion) &&
        Objects.equals(this.osFamily, userSession.osFamily) &&
        Objects.equals(this.osVersion, userSession.osVersion) &&
        Objects.equals(this.manufacturer, userSession.manufacturer) &&
        Objects.equals(this.device, userSession.device) &&
        Objects.equals(this.userId, userSession.userId) &&
        Objects.equals(this.screenHeight, userSession.screenHeight) &&
        Objects.equals(this.screenWidth, userSession.screenWidth) &&
        Objects.equals(this.screenOrientation, userSession.screenOrientation) &&
        Objects.equals(this.displayResolution, userSession.displayResolution) &&
        Objects.equals(this.hasCrash, userSession.hasCrash) &&
        Objects.equals(this.crashGroupId, userSession.crashGroupId) &&
        Objects.equals(this.hasSessionReplay, userSession.hasSessionReplay) &&
        Objects.equals(this.isp, userSession.isp) &&
        Objects.equals(this.clientType, userSession.clientType) &&
        Objects.equals(this.browserMonitorId, userSession.browserMonitorId) &&
        Objects.equals(this.browserMonitorName, userSession.browserMonitorName) &&
        Objects.equals(this.stringProperties, userSession.stringProperties) &&
        Objects.equals(this.longProperties, userSession.longProperties) &&
        Objects.equals(this.doubleProperties, userSession.doubleProperties) &&
        Objects.equals(this.dateProperties, userSession.dateProperties) &&
        Objects.equals(this.userActions, userSession.userActions) &&
        Objects.equals(this.events, userSession.events) &&
        Objects.equals(this.errors, userSession.errors) &&
        Objects.equals(this.syntheticEvents, userSession.syntheticEvents) &&
        Objects.equals(this.appVersion, userSession.appVersion) &&
        Objects.equals(this.endReason, userSession.endReason) &&
        Objects.equals(this.numberOfRageClicks, userSession.numberOfRageClicks) &&
        Objects.equals(this.numberOfRageTaps, userSession.numberOfRageTaps) &&
        Objects.equals(this.userExperienceScore, userSession.userExperienceScore) &&
        Objects.equals(this.carrier, userSession.carrier) &&
        Objects.equals(this.networkTechnology, userSession.networkTechnology) &&
        Objects.equals(this.connectionType, userSession.connectionType) &&
        Objects.equals(this.replayStart, userSession.replayStart) &&
        Objects.equals(this.replayEnd, userSession.replayEnd) &&
        Objects.equals(this.clientTimeOffset, userSession.clientTimeOffset) &&
        Objects.equals(this.rootedOrJailbroken, userSession.rootedOrJailbroken) &&
        Objects.equals(this.hasError, userSession.hasError) &&
        Objects.equals(this.partNumber, userSession.partNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tenantId, userSessionId, startTime, endTime, duration, internalUserId, userType, reasonForNoSessionReplay, reasonForNoSessionReplayMobile, applicationType, bounce, newUser, userActionCount, totalErrorCount, totalLicenseCreditCount, matchingConversionGoalsCount, matchingConversionGoals, ip, continent, country, region, city, browserType, browserFamily, browserMajorVersion, osFamily, osVersion, manufacturer, device, userId, screenHeight, screenWidth, screenOrientation, displayResolution, hasCrash, crashGroupId, hasSessionReplay, isp, clientType, browserMonitorId, browserMonitorName, stringProperties, longProperties, doubleProperties, dateProperties, userActions, events, errors, syntheticEvents, appVersion, endReason, numberOfRageClicks, numberOfRageTaps, userExperienceScore, carrier, networkTechnology, connectionType, replayStart, replayEnd, clientTimeOffset, rootedOrJailbroken, hasError, partNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserSession {\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    userSessionId: ").append(toIndentedString(userSessionId)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    internalUserId: ").append(toIndentedString(internalUserId)).append("\n");
    sb.append("    userType: ").append(toIndentedString(userType)).append("\n");
    sb.append("    reasonForNoSessionReplay: ").append(toIndentedString(reasonForNoSessionReplay)).append("\n");
    sb.append("    reasonForNoSessionReplayMobile: ").append(toIndentedString(reasonForNoSessionReplayMobile)).append("\n");
    sb.append("    applicationType: ").append(toIndentedString(applicationType)).append("\n");
    sb.append("    bounce: ").append(toIndentedString(bounce)).append("\n");
    sb.append("    newUser: ").append(toIndentedString(newUser)).append("\n");
    sb.append("    userActionCount: ").append(toIndentedString(userActionCount)).append("\n");
    sb.append("    totalErrorCount: ").append(toIndentedString(totalErrorCount)).append("\n");
    sb.append("    totalLicenseCreditCount: ").append(toIndentedString(totalLicenseCreditCount)).append("\n");
    sb.append("    matchingConversionGoalsCount: ").append(toIndentedString(matchingConversionGoalsCount)).append("\n");
    sb.append("    matchingConversionGoals: ").append(toIndentedString(matchingConversionGoals)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    continent: ").append(toIndentedString(continent)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    browserType: ").append(toIndentedString(browserType)).append("\n");
    sb.append("    browserFamily: ").append(toIndentedString(browserFamily)).append("\n");
    sb.append("    browserMajorVersion: ").append(toIndentedString(browserMajorVersion)).append("\n");
    sb.append("    osFamily: ").append(toIndentedString(osFamily)).append("\n");
    sb.append("    osVersion: ").append(toIndentedString(osVersion)).append("\n");
    sb.append("    manufacturer: ").append(toIndentedString(manufacturer)).append("\n");
    sb.append("    device: ").append(toIndentedString(device)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    screenHeight: ").append(toIndentedString(screenHeight)).append("\n");
    sb.append("    screenWidth: ").append(toIndentedString(screenWidth)).append("\n");
    sb.append("    screenOrientation: ").append(toIndentedString(screenOrientation)).append("\n");
    sb.append("    displayResolution: ").append(toIndentedString(displayResolution)).append("\n");
    sb.append("    hasCrash: ").append(toIndentedString(hasCrash)).append("\n");
    sb.append("    crashGroupId: ").append(toIndentedString(crashGroupId)).append("\n");
    sb.append("    hasSessionReplay: ").append(toIndentedString(hasSessionReplay)).append("\n");
    sb.append("    isp: ").append(toIndentedString(isp)).append("\n");
    sb.append("    clientType: ").append(toIndentedString(clientType)).append("\n");
    sb.append("    browserMonitorId: ").append(toIndentedString(browserMonitorId)).append("\n");
    sb.append("    browserMonitorName: ").append(toIndentedString(browserMonitorName)).append("\n");
    sb.append("    stringProperties: ").append(toIndentedString(stringProperties)).append("\n");
    sb.append("    longProperties: ").append(toIndentedString(longProperties)).append("\n");
    sb.append("    doubleProperties: ").append(toIndentedString(doubleProperties)).append("\n");
    sb.append("    dateProperties: ").append(toIndentedString(dateProperties)).append("\n");
    sb.append("    userActions: ").append(toIndentedString(userActions)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    syntheticEvents: ").append(toIndentedString(syntheticEvents)).append("\n");
    sb.append("    appVersion: ").append(toIndentedString(appVersion)).append("\n");
    sb.append("    endReason: ").append(toIndentedString(endReason)).append("\n");
    sb.append("    numberOfRageClicks: ").append(toIndentedString(numberOfRageClicks)).append("\n");
    sb.append("    numberOfRageTaps: ").append(toIndentedString(numberOfRageTaps)).append("\n");
    sb.append("    userExperienceScore: ").append(toIndentedString(userExperienceScore)).append("\n");
    sb.append("    carrier: ").append(toIndentedString(carrier)).append("\n");
    sb.append("    networkTechnology: ").append(toIndentedString(networkTechnology)).append("\n");
    sb.append("    connectionType: ").append(toIndentedString(connectionType)).append("\n");
    sb.append("    replayStart: ").append(toIndentedString(replayStart)).append("\n");
    sb.append("    replayEnd: ").append(toIndentedString(replayEnd)).append("\n");
    sb.append("    clientTimeOffset: ").append(toIndentedString(clientTimeOffset)).append("\n");
    sb.append("    rootedOrJailbroken: ").append(toIndentedString(rootedOrJailbroken)).append("\n");
    sb.append("    hasError: ").append(toIndentedString(hasError)).append("\n");
    sb.append("    partNumber: ").append(toIndentedString(partNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

