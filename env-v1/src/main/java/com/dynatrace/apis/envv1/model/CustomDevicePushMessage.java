/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv1.model.EntityTimeseriesData;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Configuration of a custom device.
 */
@ApiModel(description = "Configuration of a custom device.")
@JsonPropertyOrder({
  CustomDevicePushMessage.JSON_PROPERTY_DISPLAY_NAME,
  CustomDevicePushMessage.JSON_PROPERTY_GROUP,
  CustomDevicePushMessage.JSON_PROPERTY_IP_ADDRESSES,
  CustomDevicePushMessage.JSON_PROPERTY_LISTEN_PORTS,
  CustomDevicePushMessage.JSON_PROPERTY_TYPE,
  CustomDevicePushMessage.JSON_PROPERTY_FAVICON,
  CustomDevicePushMessage.JSON_PROPERTY_CONFIG_URL,
  CustomDevicePushMessage.JSON_PROPERTY_PROPERTIES,
  CustomDevicePushMessage.JSON_PROPERTY_TAGS,
  CustomDevicePushMessage.JSON_PROPERTY_SERIES,
  CustomDevicePushMessage.JSON_PROPERTY_HOST_NAMES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class CustomDevicePushMessage {
  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_GROUP = "group";
  private String group;

  public static final String JSON_PROPERTY_IP_ADDRESSES = "ipAddresses";
  private Set<String> ipAddresses = null;

  public static final String JSON_PROPERTY_LISTEN_PORTS = "listenPorts";
  private Set<Integer> listenPorts = null;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_FAVICON = "favicon";
  private String favicon;

  public static final String JSON_PROPERTY_CONFIG_URL = "configUrl";
  private String configUrl;

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  private Map<String, String> properties = null;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private Set<String> tags = null;

  public static final String JSON_PROPERTY_SERIES = "series";
  private List<EntityTimeseriesData> series = null;

  public static final String JSON_PROPERTY_HOST_NAMES = "hostNames";
  private Set<String> hostNames = null;

  public CustomDevicePushMessage() { 
  }

  public CustomDevicePushMessage displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * The name of the custom device that will appear in the user interface.
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the custom device that will appear in the user interface.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public CustomDevicePushMessage group(String group) {
    this.group = group;
    return this;
  }

   /**
   * User defined group ID of entity.   The group ID helps to keep a consistent picture of device-group relations. One of many cases where a proper group is important is service detection: you can define which custom devices should lead to the same service by defining the same group ID for them.   If you set a group ID, it will be hashed into the Dynatrace entity ID of the custom device. In that case the custom device can only be part of one custom device group.   If you don&#39;t set the group ID, Dynatrace will create it based on the ID or type of the custom device. Also, the group will not be hashed into the device ID which means the device may switch groups.
   * @return group
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User defined group ID of entity.   The group ID helps to keep a consistent picture of device-group relations. One of many cases where a proper group is important is service detection: you can define which custom devices should lead to the same service by defining the same group ID for them.   If you set a group ID, it will be hashed into the Dynatrace entity ID of the custom device. In that case the custom device can only be part of one custom device group.   If you don't set the group ID, Dynatrace will create it based on the ID or type of the custom device. Also, the group will not be hashed into the device ID which means the device may switch groups.")
  @JsonProperty(JSON_PROPERTY_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGroup() {
    return group;
  }


  @JsonProperty(JSON_PROPERTY_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroup(String group) {
    this.group = group;
  }


  public CustomDevicePushMessage ipAddresses(Set<String> ipAddresses) {
    this.ipAddresses = ipAddresses;
    return this;
  }

  public CustomDevicePushMessage addIpAddressesItem(String ipAddressesItem) {
    if (this.ipAddresses == null) {
      this.ipAddresses = new LinkedHashSet<>();
    }
    this.ipAddresses.add(ipAddressesItem);
    return this;
  }

   /**
   * The list of IP addresses that belong to the custom device.   These addresses are used to automatically discover the horizontal communication relationship between this component and all other observed components within Smartscape. Once a connection is discovered, it is automatically mapped and shown within Smartscape.   If you send a value (including an empty value), the existing values will be overwritten.   If you send &#x60;null&#x60; or omit this field, the existing values will be kept.
   * @return ipAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of IP addresses that belong to the custom device.   These addresses are used to automatically discover the horizontal communication relationship between this component and all other observed components within Smartscape. Once a connection is discovered, it is automatically mapped and shown within Smartscape.   If you send a value (including an empty value), the existing values will be overwritten.   If you send `null` or omit this field, the existing values will be kept.")
  @JsonProperty(JSON_PROPERTY_IP_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getIpAddresses() {
    return ipAddresses;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_IP_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpAddresses(Set<String> ipAddresses) {
    this.ipAddresses = ipAddresses;
  }


  public CustomDevicePushMessage listenPorts(Set<Integer> listenPorts) {
    this.listenPorts = listenPorts;
    return this;
  }

  public CustomDevicePushMessage addListenPortsItem(Integer listenPortsItem) {
    if (this.listenPorts == null) {
      this.listenPorts = new LinkedHashSet<>();
    }
    this.listenPorts.add(listenPortsItem);
    return this;
  }

   /**
   * The list of ports the custom devices listens to.   These ports are used to discover the horizontal communication relationship between this component and all other observed components within Smartscape.   Once a connection is discovered, it is automatically mapped and shown within Smartscape.   If ports are specified, you should also add at least one IP address or a host name for the custom device.   If you send a value, the existing values will be overwritten.   If you send &#x60;null&#x60;, or an empty value, or omit this field, the existing values will be kept.
   * @return listenPorts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of ports the custom devices listens to.   These ports are used to discover the horizontal communication relationship between this component and all other observed components within Smartscape.   Once a connection is discovered, it is automatically mapped and shown within Smartscape.   If ports are specified, you should also add at least one IP address or a host name for the custom device.   If you send a value, the existing values will be overwritten.   If you send `null`, or an empty value, or omit this field, the existing values will be kept.")
  @JsonProperty(JSON_PROPERTY_LISTEN_PORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<Integer> getListenPorts() {
    return listenPorts;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_LISTEN_PORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setListenPorts(Set<Integer> listenPorts) {
    this.listenPorts = listenPorts;
  }


  public CustomDevicePushMessage type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The technology type definition of the custom device.   It must be the same technology type of the metric you&#39;re reporting.   If you send a value, the existing value will be overwritten.   If you send &#x60;null&#x60;, empty or omit this field, the existing value will be kept.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The technology type definition of the custom device.   It must be the same technology type of the metric you're reporting.   If you send a value, the existing value will be overwritten.   If you send `null`, empty or omit this field, the existing value will be kept.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public CustomDevicePushMessage favicon(String favicon) {
    this.favicon = favicon;
    return this;
  }

   /**
   * The icon to be displayed for your custom component within Smartscape. Provide the full URL of the icon file.
   * @return favicon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The icon to be displayed for your custom component within Smartscape. Provide the full URL of the icon file.")
  @JsonProperty(JSON_PROPERTY_FAVICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFavicon() {
    return favicon;
  }


  @JsonProperty(JSON_PROPERTY_FAVICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFavicon(String favicon) {
    this.favicon = favicon;
  }


  public CustomDevicePushMessage configUrl(String configUrl) {
    this.configUrl = configUrl;
    return this;
  }

   /**
   * The URL of a configuration web page for the custom device, such as a login page for a firewall or router.
   * @return configUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URL of a configuration web page for the custom device, such as a login page for a firewall or router.")
  @JsonProperty(JSON_PROPERTY_CONFIG_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConfigUrl() {
    return configUrl;
  }


  @JsonProperty(JSON_PROPERTY_CONFIG_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConfigUrl(String configUrl) {
    this.configUrl = configUrl;
  }


  public CustomDevicePushMessage properties(Map<String, String> properties) {
    this.properties = properties;
    return this;
  }

  public CustomDevicePushMessage putPropertiesItem(String key, String propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * The list of key-value pair properties that will be shown beneath the infographics of your custom device.
   * @return properties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of key-value pair properties that will be shown beneath the infographics of your custom device.")
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getProperties() {
    return properties;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperties(Map<String, String> properties) {
    this.properties = properties;
  }


  public CustomDevicePushMessage tags(Set<String> tags) {
    this.tags = tags;
    return this;
  }

  public CustomDevicePushMessage addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new LinkedHashSet<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * List of custom tags that you want to attach to your custom device.
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of custom tags that you want to attach to your custom device.")
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getTags() {
    return tags;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(Set<String> tags) {
    this.tags = tags;
  }


  public CustomDevicePushMessage series(List<EntityTimeseriesData> series) {
    this.series = series;
    return this;
  }

  public CustomDevicePushMessage addSeriesItem(EntityTimeseriesData seriesItem) {
    if (this.series == null) {
      this.series = new ArrayList<>();
    }
    this.series.add(seriesItem);
    return this;
  }

   /**
   * The list of metric values that are reported for the custom device.   The metric you&#39;re reporting must already exist in Dynatrace. To learn how to create a custom metric, see [Timeseries API v1 - PUT a custom metric](https://dt-url.net/5k143rzb).   Dynatrace aggregates all the values you report for a custom device.   If you send a value (including an empty value), it will be added to the set of existing values.   If you send &#x60;null&#x60; or omit this field, the set of existing values won&#39;t change.
   * @return series
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of metric values that are reported for the custom device.   The metric you're reporting must already exist in Dynatrace. To learn how to create a custom metric, see [Timeseries API v1 - PUT a custom metric](https://dt-url.net/5k143rzb).   Dynatrace aggregates all the values you report for a custom device.   If you send a value (including an empty value), it will be added to the set of existing values.   If you send `null` or omit this field, the set of existing values won't change.")
  @JsonProperty(JSON_PROPERTY_SERIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EntityTimeseriesData> getSeries() {
    return series;
  }


  @JsonProperty(JSON_PROPERTY_SERIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSeries(List<EntityTimeseriesData> series) {
    this.series = series;
  }


  public CustomDevicePushMessage hostNames(Set<String> hostNames) {
    this.hostNames = hostNames;
    return this;
  }

  public CustomDevicePushMessage addHostNamesItem(String hostNamesItem) {
    if (this.hostNames == null) {
      this.hostNames = new LinkedHashSet<>();
    }
    this.hostNames.add(hostNamesItem);
    return this;
  }

   /**
   * The list of host names related to the custom device.   These names are used to automatically discover the horizontal communication relationship between this component and all other observed components within Smartscape. Once a connection is discovered, it is automatically mapped and shown within Smartscape.   If you send a value, the existing values will be overwritten.   If you send &#x60;null&#x60; or an empty value; or omit this field, the existing values will be kept.
   * @return hostNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of host names related to the custom device.   These names are used to automatically discover the horizontal communication relationship between this component and all other observed components within Smartscape. Once a connection is discovered, it is automatically mapped and shown within Smartscape.   If you send a value, the existing values will be overwritten.   If you send `null` or an empty value; or omit this field, the existing values will be kept.")
  @JsonProperty(JSON_PROPERTY_HOST_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getHostNames() {
    return hostNames;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_HOST_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHostNames(Set<String> hostNames) {
    this.hostNames = hostNames;
  }


  /**
   * Return true if this CustomDevicePushMessage object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomDevicePushMessage customDevicePushMessage = (CustomDevicePushMessage) o;
    return Objects.equals(this.displayName, customDevicePushMessage.displayName) &&
        Objects.equals(this.group, customDevicePushMessage.group) &&
        Objects.equals(this.ipAddresses, customDevicePushMessage.ipAddresses) &&
        Objects.equals(this.listenPorts, customDevicePushMessage.listenPorts) &&
        Objects.equals(this.type, customDevicePushMessage.type) &&
        Objects.equals(this.favicon, customDevicePushMessage.favicon) &&
        Objects.equals(this.configUrl, customDevicePushMessage.configUrl) &&
        Objects.equals(this.properties, customDevicePushMessage.properties) &&
        Objects.equals(this.tags, customDevicePushMessage.tags) &&
        Objects.equals(this.series, customDevicePushMessage.series) &&
        Objects.equals(this.hostNames, customDevicePushMessage.hostNames);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, group, ipAddresses, listenPorts, type, favicon, configUrl, properties, tags, series, hostNames);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomDevicePushMessage {\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    ipAddresses: ").append(toIndentedString(ipAddresses)).append("\n");
    sb.append("    listenPorts: ").append(toIndentedString(listenPorts)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    favicon: ").append(toIndentedString(favicon)).append("\n");
    sb.append("    configUrl: ").append(toIndentedString(configUrl)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    series: ").append(toIndentedString(series)).append("\n");
    sb.append("    hostNames: ").append(toIndentedString(hostNames)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

