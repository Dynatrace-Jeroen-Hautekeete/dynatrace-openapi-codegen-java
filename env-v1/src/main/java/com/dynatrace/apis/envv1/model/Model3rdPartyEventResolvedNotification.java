/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The closed third-party synthetic event.
 */
@ApiModel(description = "The closed third-party synthetic event.")
@JsonPropertyOrder({
  Model3rdPartyEventResolvedNotification.JSON_PROPERTY_TEST_ID,
  Model3rdPartyEventResolvedNotification.JSON_PROPERTY_EVENT_ID,
  Model3rdPartyEventResolvedNotification.JSON_PROPERTY_END_TIMESTAMP
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class Model3rdPartyEventResolvedNotification {
  public static final String JSON_PROPERTY_TEST_ID = "testId";
  private String testId;

  public static final String JSON_PROPERTY_EVENT_ID = "eventId";
  private String eventId;

  public static final String JSON_PROPERTY_END_TIMESTAMP = "endTimestamp";
  private Long endTimestamp;

  public Model3rdPartyEventResolvedNotification() { 
  }

  public Model3rdPartyEventResolvedNotification testId(String testId) {
    this.testId = testId;
    return this;
  }

   /**
   * The ID of the third-party synthetic monitor.
   * @return testId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The ID of the third-party synthetic monitor.")
  @JsonProperty(JSON_PROPERTY_TEST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTestId() {
    return testId;
  }


  @JsonProperty(JSON_PROPERTY_TEST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTestId(String testId) {
    this.testId = testId;
  }


  public Model3rdPartyEventResolvedNotification eventId(String eventId) {
    this.eventId = eventId;
    return this;
  }

   /**
   * The unique ID of the event.
   * @return eventId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The unique ID of the event.")
  @JsonProperty(JSON_PROPERTY_EVENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEventId() {
    return eventId;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEventId(String eventId) {
    this.eventId = eventId;
  }


  public Model3rdPartyEventResolvedNotification endTimestamp(Long endTimestamp) {
    this.endTimestamp = endTimestamp;
    return this;
  }

   /**
   * The end timestamp of the event, in UTC milliseconds.
   * @return endTimestamp
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The end timestamp of the event, in UTC milliseconds.")
  @JsonProperty(JSON_PROPERTY_END_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getEndTimestamp() {
    return endTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_END_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEndTimestamp(Long endTimestamp) {
    this.endTimestamp = endTimestamp;
  }


  /**
   * Return true if this 3rdPartyEventResolvedNotification object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Model3rdPartyEventResolvedNotification _3rdPartyEventResolvedNotification = (Model3rdPartyEventResolvedNotification) o;
    return Objects.equals(this.testId, _3rdPartyEventResolvedNotification.testId) &&
        Objects.equals(this.eventId, _3rdPartyEventResolvedNotification.eventId) &&
        Objects.equals(this.endTimestamp, _3rdPartyEventResolvedNotification.endTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(testId, eventId, endTimestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Model3rdPartyEventResolvedNotification {\n");
    sb.append("    testId: ").append(toIndentedString(testId)).append("\n");
    sb.append("    eventId: ").append(toIndentedString(eventId)).append("\n");
    sb.append("    endTimestamp: ").append(toIndentedString(endTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

