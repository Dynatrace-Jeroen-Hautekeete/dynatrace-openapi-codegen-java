/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv1.model.TagMatchRule;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The set of rules defining Dynatrace entities to be associated with the event.  You can specify tags to dynamically match Dynatrace entities or IDs of specific entities.  At least one entity ID or tag is required.
 */
@ApiModel(description = "The set of rules defining Dynatrace entities to be associated with the event.  You can specify tags to dynamically match Dynatrace entities or IDs of specific entities.  At least one entity ID or tag is required.")
@JsonPropertyOrder({
  PushEventAttachRules.JSON_PROPERTY_ENTITY_IDS,
  PushEventAttachRules.JSON_PROPERTY_TAG_RULE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class PushEventAttachRules {
  public static final String JSON_PROPERTY_ENTITY_IDS = "entityIds";
  private List<String> entityIds = null;

  public static final String JSON_PROPERTY_TAG_RULE = "tagRule";
  private List<TagMatchRule> tagRule = null;

  public PushEventAttachRules() { 
  }

  public PushEventAttachRules entityIds(List<String> entityIds) {
    this.entityIds = entityIds;
    return this;
  }

  public PushEventAttachRules addEntityIdsItem(String entityIdsItem) {
    if (this.entityIds == null) {
      this.entityIds = new ArrayList<>();
    }
    this.entityIds.add(entityIdsItem);
    return this;
  }

   /**
   * A list of entity IDs to which the event should be attached.
   * @return entityIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of entity IDs to which the event should be attached.")
  @JsonProperty(JSON_PROPERTY_ENTITY_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getEntityIds() {
    return entityIds;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntityIds(List<String> entityIds) {
    this.entityIds = entityIds;
  }


  public PushEventAttachRules tagRule(List<TagMatchRule> tagRule) {
    this.tagRule = tagRule;
    return this;
  }

  public PushEventAttachRules addTagRuleItem(TagMatchRule tagRuleItem) {
    if (this.tagRule == null) {
      this.tagRule = new ArrayList<>();
    }
    this.tagRule.add(tagRuleItem);
    return this;
  }

   /**
   * A set of matching rules to dynamically pick up entities based on tags.   Only entities seen within the last **24 hours** are taken into account for tag-based matching rules.
   * @return tagRule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A set of matching rules to dynamically pick up entities based on tags.   Only entities seen within the last **24 hours** are taken into account for tag-based matching rules.")
  @JsonProperty(JSON_PROPERTY_TAG_RULE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TagMatchRule> getTagRule() {
    return tagRule;
  }


  @JsonProperty(JSON_PROPERTY_TAG_RULE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTagRule(List<TagMatchRule> tagRule) {
    this.tagRule = tagRule;
  }


  /**
   * Return true if this PushEventAttachRules object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PushEventAttachRules pushEventAttachRules = (PushEventAttachRules) o;
    return Objects.equals(this.entityIds, pushEventAttachRules.entityIds) &&
        Objects.equals(this.tagRule, pushEventAttachRules.tagRule);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityIds, tagRule);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PushEventAttachRules {\n");
    sb.append("    entityIds: ").append(toIndentedString(entityIds)).append("\n");
    sb.append("    tagRule: ").append(toIndentedString(tagRule)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

