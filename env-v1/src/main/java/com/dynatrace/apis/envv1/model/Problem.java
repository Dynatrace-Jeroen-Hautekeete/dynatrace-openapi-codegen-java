/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.dynatrace.apis.envv1.model.Event;
import com.dynatrace.apis.envv1.model.EventRestImpact;
import com.dynatrace.apis.envv1.model.ProblemAffectedCounts;
import com.dynatrace.apis.envv1.model.ProblemRecoveredCounts;
import com.dynatrace.apis.envv1.model.TagInfo;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The properties of a problem.
 */
@ApiModel(description = "The properties of a problem.")
@JsonPropertyOrder({
  Problem.JSON_PROPERTY_ID,
  Problem.JSON_PROPERTY_START_TIME,
  Problem.JSON_PROPERTY_END_TIME,
  Problem.JSON_PROPERTY_DISPLAY_NAME,
  Problem.JSON_PROPERTY_IMPACT_LEVEL,
  Problem.JSON_PROPERTY_STATUS,
  Problem.JSON_PROPERTY_SEVERITY_LEVEL,
  Problem.JSON_PROPERTY_COMMENT_COUNT,
  Problem.JSON_PROPERTY_TAGS_OF_AFFECTED_ENTITIES,
  Problem.JSON_PROPERTY_RANKED_EVENTS,
  Problem.JSON_PROPERTY_RANKED_IMPACTS,
  Problem.JSON_PROPERTY_AFFECTED_COUNTS,
  Problem.JSON_PROPERTY_RECOVERED_COUNTS,
  Problem.JSON_PROPERTY_HAS_ROOT_CAUSE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-02T15:08:03.911513100+01:00[Europe/Brussels]")
public class Problem {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_START_TIME = "startTime";
  private Long startTime;

  public static final String JSON_PROPERTY_END_TIME = "endTime";
  private Long endTime;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  /**
   * The impact level of the problem. It shows what is affected by the problem: infrastructure, service, or application.
   */
  public enum ImpactLevelEnum {
    APPLICATION("APPLICATION"),
    
    ENVIRONMENT("ENVIRONMENT"),
    
    INFRASTRUCTURE("INFRASTRUCTURE"),
    
    SERVICE("SERVICE");

    private String value;

    ImpactLevelEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ImpactLevelEnum fromValue(String value) {
      for (ImpactLevelEnum b : ImpactLevelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_IMPACT_LEVEL = "impactLevel";
  private ImpactLevelEnum impactLevel;

  /**
   * The status of the problem.
   */
  public enum StatusEnum {
    CLOSED("CLOSED"),
    
    OPEN("OPEN");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  /**
   * The severity of the problem.
   */
  public enum SeverityLevelEnum {
    AVAILABILITY("AVAILABILITY"),
    
    CUSTOM_ALERT("CUSTOM_ALERT"),
    
    ERROR("ERROR"),
    
    MONITORING_UNAVAILABLE("MONITORING_UNAVAILABLE"),
    
    PERFORMANCE("PERFORMANCE"),
    
    RESOURCE_CONTENTION("RESOURCE_CONTENTION");

    private String value;

    SeverityLevelEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SeverityLevelEnum fromValue(String value) {
      for (SeverityLevelEnum b : SeverityLevelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SEVERITY_LEVEL = "severityLevel";
  private SeverityLevelEnum severityLevel;

  public static final String JSON_PROPERTY_COMMENT_COUNT = "commentCount";
  private Integer commentCount;

  public static final String JSON_PROPERTY_TAGS_OF_AFFECTED_ENTITIES = "tagsOfAffectedEntities";
  private Set<TagInfo> tagsOfAffectedEntities = null;

  public static final String JSON_PROPERTY_RANKED_EVENTS = "rankedEvents";
  private List<Event> rankedEvents = null;

  public static final String JSON_PROPERTY_RANKED_IMPACTS = "rankedImpacts";
  private List<EventRestImpact> rankedImpacts = null;

  public static final String JSON_PROPERTY_AFFECTED_COUNTS = "affectedCounts";
  private ProblemAffectedCounts affectedCounts;

  public static final String JSON_PROPERTY_RECOVERED_COUNTS = "recoveredCounts";
  private ProblemRecoveredCounts recoveredCounts;

  public static final String JSON_PROPERTY_HAS_ROOT_CAUSE = "hasRootCause";
  private Boolean hasRootCause;

  public Problem() { 
  }

  public Problem id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of the problem.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the problem.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public Problem startTime(Long startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * The start timestamp of the problem, in UTC milliseconds.
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The start timestamp of the problem, in UTC milliseconds.")
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getStartTime() {
    return startTime;
  }


  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartTime(Long startTime) {
    this.startTime = startTime;
  }


  public Problem endTime(Long endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * The end timestamp of the problem, in UTC milliseconds.    Has the value &#x60;-1&#x60; if the problem is still open.
   * @return endTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The end timestamp of the problem, in UTC milliseconds.    Has the value `-1` if the problem is still open.")
  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getEndTime() {
    return endTime;
  }


  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndTime(Long endTime) {
    this.endTime = endTime;
  }


  public Problem displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * The name of the problem, displayed in the UI.
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the problem, displayed in the UI.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public Problem impactLevel(ImpactLevelEnum impactLevel) {
    this.impactLevel = impactLevel;
    return this;
  }

   /**
   * The impact level of the problem. It shows what is affected by the problem: infrastructure, service, or application.
   * @return impactLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The impact level of the problem. It shows what is affected by the problem: infrastructure, service, or application.")
  @JsonProperty(JSON_PROPERTY_IMPACT_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ImpactLevelEnum getImpactLevel() {
    return impactLevel;
  }


  @JsonProperty(JSON_PROPERTY_IMPACT_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImpactLevel(ImpactLevelEnum impactLevel) {
    this.impactLevel = impactLevel;
  }


  public Problem status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The status of the problem.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The status of the problem.")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public Problem severityLevel(SeverityLevelEnum severityLevel) {
    this.severityLevel = severityLevel;
    return this;
  }

   /**
   * The severity of the problem.
   * @return severityLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The severity of the problem.")
  @JsonProperty(JSON_PROPERTY_SEVERITY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SeverityLevelEnum getSeverityLevel() {
    return severityLevel;
  }


  @JsonProperty(JSON_PROPERTY_SEVERITY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSeverityLevel(SeverityLevelEnum severityLevel) {
    this.severityLevel = severityLevel;
  }


  public Problem commentCount(Integer commentCount) {
    this.commentCount = commentCount;
    return this;
  }

   /**
   * The number of comments to the problem.
   * @return commentCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of comments to the problem.")
  @JsonProperty(JSON_PROPERTY_COMMENT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCommentCount() {
    return commentCount;
  }


  @JsonProperty(JSON_PROPERTY_COMMENT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommentCount(Integer commentCount) {
    this.commentCount = commentCount;
  }


  public Problem tagsOfAffectedEntities(Set<TagInfo> tagsOfAffectedEntities) {
    this.tagsOfAffectedEntities = tagsOfAffectedEntities;
    return this;
  }

  public Problem addTagsOfAffectedEntitiesItem(TagInfo tagsOfAffectedEntitiesItem) {
    if (this.tagsOfAffectedEntities == null) {
      this.tagsOfAffectedEntities = new LinkedHashSet<>();
    }
    this.tagsOfAffectedEntities.add(tagsOfAffectedEntitiesItem);
    return this;
  }

   /**
   * Tags of entities affected by the problem.
   * @return tagsOfAffectedEntities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tags of entities affected by the problem.")
  @JsonProperty(JSON_PROPERTY_TAGS_OF_AFFECTED_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<TagInfo> getTagsOfAffectedEntities() {
    return tagsOfAffectedEntities;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_TAGS_OF_AFFECTED_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTagsOfAffectedEntities(Set<TagInfo> tagsOfAffectedEntities) {
    this.tagsOfAffectedEntities = tagsOfAffectedEntities;
  }


  public Problem rankedEvents(List<Event> rankedEvents) {
    this.rankedEvents = rankedEvents;
    return this;
  }

  public Problem addRankedEventsItem(Event rankedEventsItem) {
    if (this.rankedEvents == null) {
      this.rankedEvents = new ArrayList<>();
    }
    this.rankedEvents.add(rankedEventsItem);
    return this;
  }

   /**
   * The list of events related to the problem.
   * @return rankedEvents
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of events related to the problem.")
  @JsonProperty(JSON_PROPERTY_RANKED_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Event> getRankedEvents() {
    return rankedEvents;
  }


  @JsonProperty(JSON_PROPERTY_RANKED_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRankedEvents(List<Event> rankedEvents) {
    this.rankedEvents = rankedEvents;
  }


  public Problem rankedImpacts(List<EventRestImpact> rankedImpacts) {
    this.rankedImpacts = rankedImpacts;
    return this;
  }

  public Problem addRankedImpactsItem(EventRestImpact rankedImpactsItem) {
    if (this.rankedImpacts == null) {
      this.rankedImpacts = new ArrayList<>();
    }
    this.rankedImpacts.add(rankedImpactsItem);
    return this;
  }

   /**
   * Provides impact information of the events in an aggregated form. For a more detailed impact analysis, see &#x60;rankedEvents&#x60;.
   * @return rankedImpacts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Provides impact information of the events in an aggregated form. For a more detailed impact analysis, see `rankedEvents`.")
  @JsonProperty(JSON_PROPERTY_RANKED_IMPACTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EventRestImpact> getRankedImpacts() {
    return rankedImpacts;
  }


  @JsonProperty(JSON_PROPERTY_RANKED_IMPACTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRankedImpacts(List<EventRestImpact> rankedImpacts) {
    this.rankedImpacts = rankedImpacts;
  }


  public Problem affectedCounts(ProblemAffectedCounts affectedCounts) {
    this.affectedCounts = affectedCounts;
    return this;
  }

   /**
   * Get affectedCounts
   * @return affectedCounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AFFECTED_COUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProblemAffectedCounts getAffectedCounts() {
    return affectedCounts;
  }


  @JsonProperty(JSON_PROPERTY_AFFECTED_COUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAffectedCounts(ProblemAffectedCounts affectedCounts) {
    this.affectedCounts = affectedCounts;
  }


  public Problem recoveredCounts(ProblemRecoveredCounts recoveredCounts) {
    this.recoveredCounts = recoveredCounts;
    return this;
  }

   /**
   * Get recoveredCounts
   * @return recoveredCounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RECOVERED_COUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProblemRecoveredCounts getRecoveredCounts() {
    return recoveredCounts;
  }


  @JsonProperty(JSON_PROPERTY_RECOVERED_COUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecoveredCounts(ProblemRecoveredCounts recoveredCounts) {
    this.recoveredCounts = recoveredCounts;
  }


  public Problem hasRootCause(Boolean hasRootCause) {
    this.hasRootCause = hasRootCause;
    return this;
  }

   /**
   * Indicates whether Dynatrace has found at least one possible root cause for the problem.
   * @return hasRootCause
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether Dynatrace has found at least one possible root cause for the problem.")
  @JsonProperty(JSON_PROPERTY_HAS_ROOT_CAUSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasRootCause() {
    return hasRootCause;
  }


  @JsonProperty(JSON_PROPERTY_HAS_ROOT_CAUSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasRootCause(Boolean hasRootCause) {
    this.hasRootCause = hasRootCause;
  }


  /**
   * Return true if this Problem object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Problem problem = (Problem) o;
    return Objects.equals(this.id, problem.id) &&
        Objects.equals(this.startTime, problem.startTime) &&
        Objects.equals(this.endTime, problem.endTime) &&
        Objects.equals(this.displayName, problem.displayName) &&
        Objects.equals(this.impactLevel, problem.impactLevel) &&
        Objects.equals(this.status, problem.status) &&
        Objects.equals(this.severityLevel, problem.severityLevel) &&
        Objects.equals(this.commentCount, problem.commentCount) &&
        Objects.equals(this.tagsOfAffectedEntities, problem.tagsOfAffectedEntities) &&
        Objects.equals(this.rankedEvents, problem.rankedEvents) &&
        Objects.equals(this.rankedImpacts, problem.rankedImpacts) &&
        Objects.equals(this.affectedCounts, problem.affectedCounts) &&
        Objects.equals(this.recoveredCounts, problem.recoveredCounts) &&
        Objects.equals(this.hasRootCause, problem.hasRootCause);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, startTime, endTime, displayName, impactLevel, status, severityLevel, commentCount, tagsOfAffectedEntities, rankedEvents, rankedImpacts, affectedCounts, recoveredCounts, hasRootCause);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Problem {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    impactLevel: ").append(toIndentedString(impactLevel)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    severityLevel: ").append(toIndentedString(severityLevel)).append("\n");
    sb.append("    commentCount: ").append(toIndentedString(commentCount)).append("\n");
    sb.append("    tagsOfAffectedEntities: ").append(toIndentedString(tagsOfAffectedEntities)).append("\n");
    sb.append("    rankedEvents: ").append(toIndentedString(rankedEvents)).append("\n");
    sb.append("    rankedImpacts: ").append(toIndentedString(rankedImpacts)).append("\n");
    sb.append("    affectedCounts: ").append(toIndentedString(affectedCounts)).append("\n");
    sb.append("    recoveredCounts: ").append(toIndentedString(recoveredCounts)).append("\n");
    sb.append("    hasRootCause: ").append(toIndentedString(hasRootCause)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

