/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import com.dynatrace.apis.envv1.model.DateProperty;
import com.dynatrace.apis.envv1.model.DoubleProperty;
import com.dynatrace.apis.envv1.model.LongProperty;
import com.dynatrace.apis.envv1.model.StringProperty;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for UserSessionUserAction
 */
public class UserSessionUserActionTest {
    private final UserSessionUserAction model = new UserSessionUserAction();

    /**
     * Model tests for UserSessionUserAction
     */
    @Test
    public void testUserSessionUserAction() {
        // TODO: test UserSessionUserAction
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'domain'
     */
    @Test
    public void domainTest() {
        // TODO: test domain
    }

    /**
     * Test the property 'targetUrl'
     */
    @Test
    public void targetUrlTest() {
        // TODO: test targetUrl
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    public void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'endTime'
     */
    @Test
    public void endTimeTest() {
        // TODO: test endTime
    }

    /**
     * Test the property 'duration'
     */
    @Test
    public void durationTest() {
        // TODO: test duration
    }

    /**
     * Test the property 'application'
     */
    @Test
    public void applicationTest() {
        // TODO: test application
    }

    /**
     * Test the property 'internalApplicationId'
     */
    @Test
    public void internalApplicationIdTest() {
        // TODO: test internalApplicationId
    }

    /**
     * Test the property 'internalKeyUserActionId'
     */
    @Test
    public void internalKeyUserActionIdTest() {
        // TODO: test internalKeyUserActionId
    }

    /**
     * Test the property 'speedIndex'
     */
    @Test
    public void speedIndexTest() {
        // TODO: test speedIndex
    }

    /**
     * Test the property 'apdexCategory'
     */
    @Test
    public void apdexCategoryTest() {
        // TODO: test apdexCategory
    }

    /**
     * Test the property 'matchingConversionGoals'
     */
    @Test
    public void matchingConversionGoalsTest() {
        // TODO: test matchingConversionGoals
    }

    /**
     * Test the property 'networkTime'
     */
    @Test
    public void networkTimeTest() {
        // TODO: test networkTime
    }

    /**
     * Test the property 'serverTime'
     */
    @Test
    public void serverTimeTest() {
        // TODO: test serverTime
    }

    /**
     * Test the property 'frontendTime'
     */
    @Test
    public void frontendTimeTest() {
        // TODO: test frontendTime
    }

    /**
     * Test the property 'documentInteractiveTime'
     */
    @Test
    public void documentInteractiveTimeTest() {
        // TODO: test documentInteractiveTime
    }

    /**
     * Test the property 'thirdPartyResources'
     */
    @Test
    public void thirdPartyResourcesTest() {
        // TODO: test thirdPartyResources
    }

    /**
     * Test the property 'thirdPartyBusyTime'
     */
    @Test
    public void thirdPartyBusyTimeTest() {
        // TODO: test thirdPartyBusyTime
    }

    /**
     * Test the property 'cdnResources'
     */
    @Test
    public void cdnResourcesTest() {
        // TODO: test cdnResources
    }

    /**
     * Test the property 'cdnBusyTime'
     */
    @Test
    public void cdnBusyTimeTest() {
        // TODO: test cdnBusyTime
    }

    /**
     * Test the property 'firstPartyResources'
     */
    @Test
    public void firstPartyResourcesTest() {
        // TODO: test firstPartyResources
    }

    /**
     * Test the property 'firstPartyBusyTime'
     */
    @Test
    public void firstPartyBusyTimeTest() {
        // TODO: test firstPartyBusyTime
    }

    /**
     * Test the property 'hasCrash'
     */
    @Test
    public void hasCrashTest() {
        // TODO: test hasCrash
    }

    /**
     * Test the property 'domCompleteTime'
     */
    @Test
    public void domCompleteTimeTest() {
        // TODO: test domCompleteTime
    }

    /**
     * Test the property 'domContentLoadedTime'
     */
    @Test
    public void domContentLoadedTimeTest() {
        // TODO: test domContentLoadedTime
    }

    /**
     * Test the property 'loadEventStart'
     */
    @Test
    public void loadEventStartTest() {
        // TODO: test loadEventStart
    }

    /**
     * Test the property 'loadEventEnd'
     */
    @Test
    public void loadEventEndTest() {
        // TODO: test loadEventEnd
    }

    /**
     * Test the property 'navigationStart'
     */
    @Test
    public void navigationStartTest() {
        // TODO: test navigationStart
    }

    /**
     * Test the property 'requestStart'
     */
    @Test
    public void requestStartTest() {
        // TODO: test requestStart
    }

    /**
     * Test the property 'responseStart'
     */
    @Test
    public void responseStartTest() {
        // TODO: test responseStart
    }

    /**
     * Test the property 'responseEnd'
     */
    @Test
    public void responseEndTest() {
        // TODO: test responseEnd
    }

    /**
     * Test the property 'visuallyCompleteTime'
     */
    @Test
    public void visuallyCompleteTimeTest() {
        // TODO: test visuallyCompleteTime
    }

    /**
     * Test the property 'syntheticEvent'
     */
    @Test
    public void syntheticEventTest() {
        // TODO: test syntheticEvent
    }

    /**
     * Test the property 'syntheticEventId'
     */
    @Test
    public void syntheticEventIdTest() {
        // TODO: test syntheticEventId
    }

    /**
     * Test the property 'keyUserAction'
     */
    @Test
    public void keyUserActionTest() {
        // TODO: test keyUserAction
    }

    /**
     * Test the property 'stringProperties'
     */
    @Test
    public void stringPropertiesTest() {
        // TODO: test stringProperties
    }

    /**
     * Test the property 'longProperties'
     */
    @Test
    public void longPropertiesTest() {
        // TODO: test longProperties
    }

    /**
     * Test the property 'doubleProperties'
     */
    @Test
    public void doublePropertiesTest() {
        // TODO: test doubleProperties
    }

    /**
     * Test the property 'dateProperties'
     */
    @Test
    public void datePropertiesTest() {
        // TODO: test dateProperties
    }

    /**
     * Test the property 'userActionPropertyCount'
     */
    @Test
    public void userActionPropertyCountTest() {
        // TODO: test userActionPropertyCount
    }

    /**
     * Test the property 'customErrorCount'
     */
    @Test
    public void customErrorCountTest() {
        // TODO: test customErrorCount
    }

    /**
     * Test the property 'javascriptErrorCount'
     */
    @Test
    public void javascriptErrorCountTest() {
        // TODO: test javascriptErrorCount
    }

    /**
     * Test the property 'requestErrorCount'
     */
    @Test
    public void requestErrorCountTest() {
        // TODO: test requestErrorCount
    }

    /**
     * Test the property 'largestContentfulPaint'
     */
    @Test
    public void largestContentfulPaintTest() {
        // TODO: test largestContentfulPaint
    }

    /**
     * Test the property 'firstInputDelay'
     */
    @Test
    public void firstInputDelayTest() {
        // TODO: test firstInputDelay
    }

    /**
     * Test the property 'totalBlockingTime'
     */
    @Test
    public void totalBlockingTimeTest() {
        // TODO: test totalBlockingTime
    }

    /**
     * Test the property 'cumulativeLayoutShift'
     */
    @Test
    public void cumulativeLayoutShiftTest() {
        // TODO: test cumulativeLayoutShift
    }

}
