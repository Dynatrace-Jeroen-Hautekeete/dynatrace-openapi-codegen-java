/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import com.dynatrace.apis.envv1.model.DateProperty;
import com.dynatrace.apis.envv1.model.DoubleProperty;
import com.dynatrace.apis.envv1.model.LongProperty;
import com.dynatrace.apis.envv1.model.StringProperty;
import com.dynatrace.apis.envv1.model.UserSessionErrors;
import com.dynatrace.apis.envv1.model.UserSessionEvents;
import com.dynatrace.apis.envv1.model.UserSessionSyntheticEvent;
import com.dynatrace.apis.envv1.model.UserSessionUserAction;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for UserSession
 */
public class UserSessionTest {
    private final UserSession model = new UserSession();

    /**
     * Model tests for UserSession
     */
    @Test
    public void testUserSession() {
        // TODO: test UserSession
    }

    /**
     * Test the property 'tenantId'
     */
    @Test
    public void tenantIdTest() {
        // TODO: test tenantId
    }

    /**
     * Test the property 'userSessionId'
     */
    @Test
    public void userSessionIdTest() {
        // TODO: test userSessionId
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    public void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'endTime'
     */
    @Test
    public void endTimeTest() {
        // TODO: test endTime
    }

    /**
     * Test the property 'duration'
     */
    @Test
    public void durationTest() {
        // TODO: test duration
    }

    /**
     * Test the property 'internalUserId'
     */
    @Test
    public void internalUserIdTest() {
        // TODO: test internalUserId
    }

    /**
     * Test the property 'userType'
     */
    @Test
    public void userTypeTest() {
        // TODO: test userType
    }

    /**
     * Test the property 'reasonForNoSessionReplay'
     */
    @Test
    public void reasonForNoSessionReplayTest() {
        // TODO: test reasonForNoSessionReplay
    }

    /**
     * Test the property 'reasonForNoSessionReplayMobile'
     */
    @Test
    public void reasonForNoSessionReplayMobileTest() {
        // TODO: test reasonForNoSessionReplayMobile
    }

    /**
     * Test the property 'applicationType'
     */
    @Test
    public void applicationTypeTest() {
        // TODO: test applicationType
    }

    /**
     * Test the property 'bounce'
     */
    @Test
    public void bounceTest() {
        // TODO: test bounce
    }

    /**
     * Test the property 'newUser'
     */
    @Test
    public void newUserTest() {
        // TODO: test newUser
    }

    /**
     * Test the property 'userActionCount'
     */
    @Test
    public void userActionCountTest() {
        // TODO: test userActionCount
    }

    /**
     * Test the property 'totalErrorCount'
     */
    @Test
    public void totalErrorCountTest() {
        // TODO: test totalErrorCount
    }

    /**
     * Test the property 'totalLicenseCreditCount'
     */
    @Test
    public void totalLicenseCreditCountTest() {
        // TODO: test totalLicenseCreditCount
    }

    /**
     * Test the property 'matchingConversionGoalsCount'
     */
    @Test
    public void matchingConversionGoalsCountTest() {
        // TODO: test matchingConversionGoalsCount
    }

    /**
     * Test the property 'matchingConversionGoals'
     */
    @Test
    public void matchingConversionGoalsTest() {
        // TODO: test matchingConversionGoals
    }

    /**
     * Test the property 'ip'
     */
    @Test
    public void ipTest() {
        // TODO: test ip
    }

    /**
     * Test the property 'continent'
     */
    @Test
    public void continentTest() {
        // TODO: test continent
    }

    /**
     * Test the property 'country'
     */
    @Test
    public void countryTest() {
        // TODO: test country
    }

    /**
     * Test the property 'region'
     */
    @Test
    public void regionTest() {
        // TODO: test region
    }

    /**
     * Test the property 'city'
     */
    @Test
    public void cityTest() {
        // TODO: test city
    }

    /**
     * Test the property 'browserType'
     */
    @Test
    public void browserTypeTest() {
        // TODO: test browserType
    }

    /**
     * Test the property 'browserFamily'
     */
    @Test
    public void browserFamilyTest() {
        // TODO: test browserFamily
    }

    /**
     * Test the property 'browserMajorVersion'
     */
    @Test
    public void browserMajorVersionTest() {
        // TODO: test browserMajorVersion
    }

    /**
     * Test the property 'osFamily'
     */
    @Test
    public void osFamilyTest() {
        // TODO: test osFamily
    }

    /**
     * Test the property 'osVersion'
     */
    @Test
    public void osVersionTest() {
        // TODO: test osVersion
    }

    /**
     * Test the property 'manufacturer'
     */
    @Test
    public void manufacturerTest() {
        // TODO: test manufacturer
    }

    /**
     * Test the property 'device'
     */
    @Test
    public void deviceTest() {
        // TODO: test device
    }

    /**
     * Test the property 'userId'
     */
    @Test
    public void userIdTest() {
        // TODO: test userId
    }

    /**
     * Test the property 'screenHeight'
     */
    @Test
    public void screenHeightTest() {
        // TODO: test screenHeight
    }

    /**
     * Test the property 'screenWidth'
     */
    @Test
    public void screenWidthTest() {
        // TODO: test screenWidth
    }

    /**
     * Test the property 'screenOrientation'
     */
    @Test
    public void screenOrientationTest() {
        // TODO: test screenOrientation
    }

    /**
     * Test the property 'displayResolution'
     */
    @Test
    public void displayResolutionTest() {
        // TODO: test displayResolution
    }

    /**
     * Test the property 'hasCrash'
     */
    @Test
    public void hasCrashTest() {
        // TODO: test hasCrash
    }

    /**
     * Test the property 'crashGroupId'
     */
    @Test
    public void crashGroupIdTest() {
        // TODO: test crashGroupId
    }

    /**
     * Test the property 'hasSessionReplay'
     */
    @Test
    public void hasSessionReplayTest() {
        // TODO: test hasSessionReplay
    }

    /**
     * Test the property 'isp'
     */
    @Test
    public void ispTest() {
        // TODO: test isp
    }

    /**
     * Test the property 'clientType'
     */
    @Test
    public void clientTypeTest() {
        // TODO: test clientType
    }

    /**
     * Test the property 'browserMonitorId'
     */
    @Test
    public void browserMonitorIdTest() {
        // TODO: test browserMonitorId
    }

    /**
     * Test the property 'browserMonitorName'
     */
    @Test
    public void browserMonitorNameTest() {
        // TODO: test browserMonitorName
    }

    /**
     * Test the property 'stringProperties'
     */
    @Test
    public void stringPropertiesTest() {
        // TODO: test stringProperties
    }

    /**
     * Test the property 'longProperties'
     */
    @Test
    public void longPropertiesTest() {
        // TODO: test longProperties
    }

    /**
     * Test the property 'doubleProperties'
     */
    @Test
    public void doublePropertiesTest() {
        // TODO: test doubleProperties
    }

    /**
     * Test the property 'dateProperties'
     */
    @Test
    public void datePropertiesTest() {
        // TODO: test dateProperties
    }

    /**
     * Test the property 'userActions'
     */
    @Test
    public void userActionsTest() {
        // TODO: test userActions
    }

    /**
     * Test the property 'events'
     */
    @Test
    public void eventsTest() {
        // TODO: test events
    }

    /**
     * Test the property 'errors'
     */
    @Test
    public void errorsTest() {
        // TODO: test errors
    }

    /**
     * Test the property 'syntheticEvents'
     */
    @Test
    public void syntheticEventsTest() {
        // TODO: test syntheticEvents
    }

    /**
     * Test the property 'appVersion'
     */
    @Test
    public void appVersionTest() {
        // TODO: test appVersion
    }

    /**
     * Test the property 'endReason'
     */
    @Test
    public void endReasonTest() {
        // TODO: test endReason
    }

    /**
     * Test the property 'numberOfRageClicks'
     */
    @Test
    public void numberOfRageClicksTest() {
        // TODO: test numberOfRageClicks
    }

    /**
     * Test the property 'numberOfRageTaps'
     */
    @Test
    public void numberOfRageTapsTest() {
        // TODO: test numberOfRageTaps
    }

    /**
     * Test the property 'userExperienceScore'
     */
    @Test
    public void userExperienceScoreTest() {
        // TODO: test userExperienceScore
    }

    /**
     * Test the property 'carrier'
     */
    @Test
    public void carrierTest() {
        // TODO: test carrier
    }

    /**
     * Test the property 'networkTechnology'
     */
    @Test
    public void networkTechnologyTest() {
        // TODO: test networkTechnology
    }

    /**
     * Test the property 'connectionType'
     */
    @Test
    public void connectionTypeTest() {
        // TODO: test connectionType
    }

    /**
     * Test the property 'replayStart'
     */
    @Test
    public void replayStartTest() {
        // TODO: test replayStart
    }

    /**
     * Test the property 'replayEnd'
     */
    @Test
    public void replayEndTest() {
        // TODO: test replayEnd
    }

    /**
     * Test the property 'clientTimeOffset'
     */
    @Test
    public void clientTimeOffsetTest() {
        // TODO: test clientTimeOffset
    }

    /**
     * Test the property 'rootedOrJailbroken'
     */
    @Test
    public void rootedOrJailbrokenTest() {
        // TODO: test rootedOrJailbroken
    }

    /**
     * Test the property 'hasError'
     */
    @Test
    public void hasErrorTest() {
        // TODO: test hasError
    }

    /**
     * Test the property 'partNumber'
     */
    @Test
    public void partNumberTest() {
        // TODO: test partNumber
    }

}
