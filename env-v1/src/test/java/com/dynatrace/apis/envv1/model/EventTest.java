/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import com.dynatrace.apis.envv1.model.EntityShortRepresentation;
import com.dynatrace.apis.envv1.model.EventSeverity;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Event
 */
public class EventTest {
    private final Event model = new Event();

    /**
     * Model tests for Event
     */
    @Test
    public void testEvent() {
        // TODO: test Event
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    public void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'endTime'
     */
    @Test
    public void endTimeTest() {
        // TODO: test endTime
    }

    /**
     * Test the property 'entityId'
     */
    @Test
    public void entityIdTest() {
        // TODO: test entityId
    }

    /**
     * Test the property 'entityName'
     */
    @Test
    public void entityNameTest() {
        // TODO: test entityName
    }

    /**
     * Test the property 'severityLevel'
     */
    @Test
    public void severityLevelTest() {
        // TODO: test severityLevel
    }

    /**
     * Test the property 'impactLevel'
     */
    @Test
    public void impactLevelTest() {
        // TODO: test impactLevel
    }

    /**
     * Test the property 'eventType'
     */
    @Test
    public void eventTypeTest() {
        // TODO: test eventType
    }

    /**
     * Test the property 'resourceId'
     */
    @Test
    public void resourceIdTest() {
        // TODO: test resourceId
    }

    /**
     * Test the property 'resourceName'
     */
    @Test
    public void resourceNameTest() {
        // TODO: test resourceName
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'severities'
     */
    @Test
    public void severitiesTest() {
        // TODO: test severities
    }

    /**
     * Test the property 'isRootCause'
     */
    @Test
    public void isRootCauseTest() {
        // TODO: test isRootCause
    }

    /**
     * Test the property 'deploymentProject'
     */
    @Test
    public void deploymentProjectTest() {
        // TODO: test deploymentProject
    }

    /**
     * Test the property 'cpuLimitInMHz'
     */
    @Test
    public void cpuLimitInMHzTest() {
        // TODO: test cpuLimitInMHz
    }

    /**
     * Test the property 'deploymentParamAdded'
     */
    @Test
    public void deploymentParamAddedTest() {
        // TODO: test deploymentParamAdded
    }

    /**
     * Test the property 'affectedPrivateSyntheticLocations'
     */
    @Test
    public void affectedPrivateSyntheticLocationsTest() {
        // TODO: test affectedPrivateSyntheticLocations
    }

    /**
     * Test the property 'isClusterWide'
     */
    @Test
    public void isClusterWideTest() {
        // TODO: test isClusterWide
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'effectiveEntity'
     */
    @Test
    public void effectiveEntityTest() {
        // TODO: test effectiveEntity
    }

    /**
     * Test the property 'operatingSystem'
     */
    @Test
    public void operatingSystemTest() {
        // TODO: test operatingSystem
    }

    /**
     * Test the property 'artifact'
     */
    @Test
    public void artifactTest() {
        // TODO: test artifact
    }

    /**
     * Test the property 'cpuLoad'
     */
    @Test
    public void cpuLoadTest() {
        // TODO: test cpuLoad
    }

    /**
     * Test the property 'affectedRequestsPerMinute'
     */
    @Test
    public void affectedRequestsPerMinuteTest() {
        // TODO: test affectedRequestsPerMinute
    }

    /**
     * Test the property 'annotationDescription'
     */
    @Test
    public void annotationDescriptionTest() {
        // TODO: test annotationDescription
    }

    /**
     * Test the property 'browser'
     */
    @Test
    public void browserTest() {
        // TODO: test browser
    }

    /**
     * Test the property 'affectedSyntheticLocations'
     */
    @Test
    public void affectedSyntheticLocationsTest() {
        // TODO: test affectedSyntheticLocations
    }

    /**
     * Test the property 'deploymentName'
     */
    @Test
    public void deploymentNameTest() {
        // TODO: test deploymentName
    }

    /**
     * Test the property 'deploymentParamRemoved'
     */
    @Test
    public void deploymentParamRemovedTest() {
        // TODO: test deploymentParamRemoved
    }

    /**
     * Test the property 'correlationId'
     */
    @Test
    public void correlationIdTest() {
        // TODO: test correlationId
    }

    /**
     * Test the property 'userDefined50thPercentileThreshold'
     */
    @Test
    public void userDefined50thPercentileThresholdTest() {
        // TODO: test userDefined50thPercentileThreshold
    }

    /**
     * Test the property 'syntheticErrorType'
     */
    @Test
    public void syntheticErrorTypeTest() {
        // TODO: test syntheticErrorType
    }

    /**
     * Test the property 'serviceMethodGroup'
     */
    @Test
    public void serviceMethodGroupTest() {
        // TODO: test serviceMethodGroup
    }

    /**
     * Test the property 'referenceResponseTime90thPercentile'
     */
    @Test
    public void referenceResponseTime90thPercentileTest() {
        // TODO: test referenceResponseTime90thPercentile
    }

    /**
     * Test the property 'userAction'
     */
    @Test
    public void userActionTest() {
        // TODO: test userAction
    }

    /**
     * Test the property 'minimumProcessGroupInstanceCountThreshold'
     */
    @Test
    public void minimumProcessGroupInstanceCountThresholdTest() {
        // TODO: test minimumProcessGroupInstanceCountThreshold
    }

    /**
     * Test the property 'referenceResponseTime50thPercentile'
     */
    @Test
    public void referenceResponseTime50thPercentileTest() {
        // TODO: test referenceResponseTime50thPercentile
    }

    /**
     * Test the property 'original'
     */
    @Test
    public void originalTest() {
        // TODO: test original
    }

    /**
     * Test the property 'userDefined90thPercentileThreshold'
     */
    @Test
    public void userDefined90thPercentileThresholdTest() {
        // TODO: test userDefined90thPercentileThreshold
    }

    /**
     * Test the property 'deploymentVersion'
     */
    @Test
    public void deploymentVersionTest() {
        // TODO: test deploymentVersion
    }

    /**
     * Test the property 'annotationType'
     */
    @Test
    public void annotationTypeTest() {
        // TODO: test annotationType
    }

    /**
     * Test the property 'affectedSyntheticActions'
     */
    @Test
    public void affectedSyntheticActionsTest() {
        // TODO: test affectedSyntheticActions
    }

    /**
     * Test the property 'affectedUserActionsPerMinute'
     */
    @Test
    public void affectedUserActionsPerMinuteTest() {
        // TODO: test affectedUserActionsPerMinute
    }

    /**
     * Test the property 'activeMaintenanceWindows'
     */
    @Test
    public void activeMaintenanceWindowsTest() {
        // TODO: test activeMaintenanceWindows
    }

    /**
     * Test the property 'mobileAppVersion'
     */
    @Test
    public void mobileAppVersionTest() {
        // TODO: test mobileAppVersion
    }

    /**
     * Test the property 'userDefinedFailureRateThreshold'
     */
    @Test
    public void userDefinedFailureRateThresholdTest() {
        // TODO: test userDefinedFailureRateThreshold
    }

    /**
     * Test the property 'percentile'
     */
    @Test
    public void percentileTest() {
        // TODO: test percentile
    }

    /**
     * Test the property 'customProperties'
     */
    @Test
    public void customPropertiesTest() {
        // TODO: test customProperties
    }

    /**
     * Test the property 'remediationAction'
     */
    @Test
    public void remediationActionTest() {
        // TODO: test remediationAction
    }

    /**
     * Test the property 'service'
     */
    @Test
    public void serviceTest() {
        // TODO: test service
    }

    /**
     * Test the property 'ciBackLink'
     */
    @Test
    public void ciBackLinkTest() {
        // TODO: test ciBackLink
    }

    /**
     * Test the property 'geolocation'
     */
    @Test
    public void geolocationTest() {
        // TODO: test geolocation
    }

    /**
     * Test the property 'serviceMethod'
     */
    @Test
    public void serviceMethodTest() {
        // TODO: test serviceMethod
    }

    /**
     * Test the property 'changed'
     */
    @Test
    public void changedTest() {
        // TODO: test changed
    }

}
