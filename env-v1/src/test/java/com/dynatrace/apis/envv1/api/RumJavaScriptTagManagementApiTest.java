/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.api;

import com.dynatrace.apis.envv1.ApiException;
import com.dynatrace.apis.envv1.model.ManualApplication;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for RumJavaScriptTagManagementApi
 */
@Ignore
public class RumJavaScriptTagManagementApiTest {

    private final RumJavaScriptTagManagementApi api = new RumJavaScriptTagManagementApi();

    
    /**
     * Gets the version of the RUM JavaScript code injected into specified application
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppRevisionTest() throws ApiException {
        String entity = null;
        String response = 
        api.getAppRevision(entity);
        
        // TODO: test validations
    }
    
    /**
     * Downloads the asynchronous code snippet
     *
     * This code provides configuration and basic code to be manually inserted into your web application code.   The full functionality of the monitoring code is loaded asynchronously.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAsyncCodeSnippetTest() throws ApiException {
        String entity = null;
        String response = 
        api.getAsyncCodeSnippet(entity);
        
        // TODO: test validations
    }
    
    /**
     * Downloads inline code
     *
     * Returns the inline code of the most recent OneAgent JavaScript. This is a complete configuration and monitoring code to be manually inserted into your web application code.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJsInlineScriptTest() throws ApiException {
        String entity = null;
        String response = 
        api.getJsInlineScript(entity);
        
        // TODO: test validations
    }
    
    /**
     * Gets the latest version of OneAgent JavaScript library
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJsLatestVersionTest() throws ApiException {
        String response = 
        api.getJsLatestVersion();
        
        // TODO: test validations
    }
    
    /**
     * Downloads OneAgent JavaScript tag
     *
     * Returns the OneAgent JavaScript tag. This is a complete configuration and monitoring code to be manually inserted into your web application code.   The monitoring code is loaded as a separate file from a CDN.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJsScriptTest() throws ApiException {
        String entity = null;
        String response = 
        api.getJsScript(entity);
        
        // TODO: test validations
    }
    
    /**
     * Downloads JavaScript tag
     *
     * Returns a JavaScript tag to be manually inserted into your web application code. The tag references a JavaScript file with full configuration and monitoring code, which causes a lower possible caching duration.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJsTagCompleteTest() throws ApiException {
        String entity = null;
        String response = 
        api.getJsTagComplete(entity);
        
        // TODO: test validations
    }
    
    /**
     * Lists all manually injected applications
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getManualAppsTest() throws ApiException {
        List<ManualApplication> response = 
        api.getManualApps();
        
        // TODO: test validations
    }
    
    /**
     * Downloads the synchronous code snippet
     *
     * This code provides configuration and basic code to be manually inserted into your web application code.   The full functionality of the monitoring code is loaded synchronously.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSyncCodeSnippetTest() throws ApiException {
        String entity = null;
        String response = 
        api.getSyncCodeSnippet(entity);
        
        // TODO: test validations
    }
    
}
