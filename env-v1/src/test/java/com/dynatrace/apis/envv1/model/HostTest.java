/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import com.dynatrace.apis.envv1.model.AgentVersion;
import com.dynatrace.apis.envv1.model.EntityShortRepresentation;
import com.dynatrace.apis.envv1.model.HostFromRelationships;
import com.dynatrace.apis.envv1.model.HostGroup;
import com.dynatrace.apis.envv1.model.HostToRelationships;
import com.dynatrace.apis.envv1.model.TagInfo;
import com.dynatrace.apis.envv1.model.TechnologyInfo;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Host
 */
public class HostTest {
    private final Host model = new Host();

    /**
     * Model tests for Host
     */
    @Test
    public void testHost() {
        // TODO: test Host
    }

    /**
     * Test the property 'entityId'
     */
    @Test
    public void entityIdTest() {
        // TODO: test entityId
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'customizedName'
     */
    @Test
    public void customizedNameTest() {
        // TODO: test customizedName
    }

    /**
     * Test the property 'discoveredName'
     */
    @Test
    public void discoveredNameTest() {
        // TODO: test discoveredName
    }

    /**
     * Test the property 'firstSeenTimestamp'
     */
    @Test
    public void firstSeenTimestampTest() {
        // TODO: test firstSeenTimestamp
    }

    /**
     * Test the property 'lastSeenTimestamp'
     */
    @Test
    public void lastSeenTimestampTest() {
        // TODO: test lastSeenTimestamp
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'fromRelationships'
     */
    @Test
    public void fromRelationshipsTest() {
        // TODO: test fromRelationships
    }

    /**
     * Test the property 'toRelationships'
     */
    @Test
    public void toRelationshipsTest() {
        // TODO: test toRelationships
    }

    /**
     * Test the property 'osArchitecture'
     */
    @Test
    public void osArchitectureTest() {
        // TODO: test osArchitecture
    }

    /**
     * Test the property 'zosSystemName'
     */
    @Test
    public void zosSystemNameTest() {
        // TODO: test zosSystemName
    }

    /**
     * Test the property 'autoScalingGroup'
     */
    @Test
    public void autoScalingGroupTest() {
        // TODO: test autoScalingGroup
    }

    /**
     * Test the property 'agentVersion'
     */
    @Test
    public void agentVersionTest() {
        // TODO: test agentVersion
    }

    /**
     * Test the property 'openstackProjectName'
     */
    @Test
    public void openstackProjectNameTest() {
        // TODO: test openstackProjectName
    }

    /**
     * Test the property 'monitoringMode'
     */
    @Test
    public void monitoringModeTest() {
        // TODO: test monitoringMode
    }

    /**
     * Test the property 'esxiHostName'
     */
    @Test
    public void esxiHostNameTest() {
        // TODO: test esxiHostName
    }

    /**
     * Test the property 'softwareTechnologies'
     */
    @Test
    public void softwareTechnologiesTest() {
        // TODO: test softwareTechnologies
    }

    /**
     * Test the property 'azureEnvironment'
     */
    @Test
    public void azureEnvironmentTest() {
        // TODO: test azureEnvironment
    }

    /**
     * Test the property 'boshStemcellVersion'
     */
    @Test
    public void boshStemcellVersionTest() {
        // TODO: test boshStemcellVersion
    }

    /**
     * Test the property 'amiId'
     */
    @Test
    public void amiIdTest() {
        // TODO: test amiId
    }

    /**
     * Test the property 'openStackInstaceType'
     */
    @Test
    public void openStackInstaceTypeTest() {
        // TODO: test openStackInstaceType
    }

    /**
     * Test the property 'zosTotalZiipProcessors'
     */
    @Test
    public void zosTotalZiipProcessorsTest() {
        // TODO: test zosTotalZiipProcessors
    }

    /**
     * Test the property 'hostGroup'
     */
    @Test
    public void hostGroupTest() {
        // TODO: test hostGroup
    }

    /**
     * Test the property 'ipAddresses'
     */
    @Test
    public void ipAddressesTest() {
        // TODO: test ipAddresses
    }

    /**
     * Test the property 'isMonitoringCandidate'
     */
    @Test
    public void isMonitoringCandidateTest() {
        // TODO: test isMonitoringCandidate
    }

    /**
     * Test the property 'awsInstanceId'
     */
    @Test
    public void awsInstanceIdTest() {
        // TODO: test awsInstanceId
    }

    /**
     * Test the property 'localIp'
     */
    @Test
    public void localIpTest() {
        // TODO: test localIp
    }

    /**
     * Test the property 'paasAgentVersions'
     */
    @Test
    public void paasAgentVersionsTest() {
        // TODO: test paasAgentVersions
    }

    /**
     * Test the property 'virtualCpus'
     */
    @Test
    public void virtualCpusTest() {
        // TODO: test virtualCpus
    }

    /**
     * Test the property 'gcpZone'
     */
    @Test
    public void gcpZoneTest() {
        // TODO: test gcpZone
    }

    /**
     * Test the property 'azureResourceGroupName'
     */
    @Test
    public void azureResourceGroupNameTest() {
        // TODO: test azureResourceGroupName
    }

    /**
     * Test the property 'boshName'
     */
    @Test
    public void boshNameTest() {
        // TODO: test boshName
    }

    /**
     * Test the property 'boshInstanceName'
     */
    @Test
    public void boshInstanceNameTest() {
        // TODO: test boshInstanceName
    }

    /**
     * Test the property 'oneAgentCustomHostName'
     */
    @Test
    public void oneAgentCustomHostNameTest() {
        // TODO: test oneAgentCustomHostName
    }

    /**
     * Test the property 'kubernetesNode'
     */
    @Test
    public void kubernetesNodeTest() {
        // TODO: test kubernetesNode
    }

    /**
     * Test the property 'azureSku'
     */
    @Test
    public void azureSkuTest() {
        // TODO: test azureSku
    }

    /**
     * Test the property 'managementZones'
     */
    @Test
    public void managementZonesTest() {
        // TODO: test managementZones
    }

    /**
     * Test the property 'publicIp'
     */
    @Test
    public void publicIpTest() {
        // TODO: test publicIp
    }

    /**
     * Test the property 'azureVmSizeLabel'
     */
    @Test
    public void azureVmSizeLabelTest() {
        // TODO: test azureVmSizeLabel
    }

    /**
     * Test the property 'zosCPUModelNumber'
     */
    @Test
    public void zosCPUModelNumberTest() {
        // TODO: test zosCPUModelNumber
    }

    /**
     * Test the property 'autoInjection'
     */
    @Test
    public void autoInjectionTest() {
        // TODO: test autoInjection
    }

    /**
     * Test the property 'awsSecurityGroup'
     */
    @Test
    public void awsSecurityGroupTest() {
        // TODO: test awsSecurityGroup
    }

    /**
     * Test the property 'openstackSecurityGroups'
     */
    @Test
    public void openstackSecurityGroupsTest() {
        // TODO: test openstackSecurityGroups
    }

    /**
     * Test the property 'azureZone'
     */
    @Test
    public void azureZoneTest() {
        // TODO: test azureZone
    }

    /**
     * Test the property 'paasType'
     */
    @Test
    public void paasTypeTest() {
        // TODO: test paasType
    }

    /**
     * Test the property 'networkZoneId'
     */
    @Test
    public void networkZoneIdTest() {
        // TODO: test networkZoneId
    }

    /**
     * Test the property 'cloudPlatformVendorVersion'
     */
    @Test
    public void cloudPlatformVendorVersionTest() {
        // TODO: test cloudPlatformVendorVersion
    }

    /**
     * Test the property 'awsInstanceType'
     */
    @Test
    public void awsInstanceTypeTest() {
        // TODO: test awsInstanceType
    }

    /**
     * Test the property 'zosTotalPhysicalMemory'
     */
    @Test
    public void zosTotalPhysicalMemoryTest() {
        // TODO: test zosTotalPhysicalMemory
    }

    /**
     * Test the property 'openstackComputeNodeName'
     */
    @Test
    public void openstackComputeNodeNameTest() {
        // TODO: test openstackComputeNodeName
    }

    /**
     * Test the property 'scaleSetName'
     */
    @Test
    public void scaleSetNameTest() {
        // TODO: test scaleSetName
    }

    /**
     * Test the property 'osType'
     */
    @Test
    public void osTypeTest() {
        // TODO: test osType
    }

    /**
     * Test the property 'gceInstanceId'
     */
    @Test
    public void gceInstanceIdTest() {
        // TODO: test gceInstanceId
    }

    /**
     * Test the property 'userLevel'
     */
    @Test
    public void userLevelTest() {
        // TODO: test userLevel
    }

    /**
     * Test the property 'beanstalkEnvironmentName'
     */
    @Test
    public void beanstalkEnvironmentNameTest() {
        // TODO: test beanstalkEnvironmentName
    }

    /**
     * Test the property 'boshDeploymentId'
     */
    @Test
    public void boshDeploymentIdTest() {
        // TODO: test boshDeploymentId
    }

    /**
     * Test the property 'osVersion'
     */
    @Test
    public void osVersionTest() {
        // TODO: test osVersion
    }

    /**
     * Test the property 'openstackVmName'
     */
    @Test
    public void openstackVmNameTest() {
        // TODO: test openstackVmName
    }

    /**
     * Test the property 'azureVmName'
     */
    @Test
    public void azureVmNameTest() {
        // TODO: test azureVmName
    }

    /**
     * Test the property 'kubernetesLabels'
     */
    @Test
    public void kubernetesLabelsTest() {
        // TODO: test kubernetesLabels
    }

    /**
     * Test the property 'localHostName'
     */
    @Test
    public void localHostNameTest() {
        // TODO: test localHostName
    }

    /**
     * Test the property 'azureVmScaleSetName'
     */
    @Test
    public void azureVmScaleSetNameTest() {
        // TODO: test azureVmScaleSetName
    }

    /**
     * Test the property 'boshAvailabilityZone'
     */
    @Test
    public void boshAvailabilityZoneTest() {
        // TODO: test boshAvailabilityZone
    }

    /**
     * Test the property 'kubernetesCluster'
     */
    @Test
    public void kubernetesClusterTest() {
        // TODO: test kubernetesCluster
    }

    /**
     * Test the property 'openstackAvZone'
     */
    @Test
    public void openstackAvZoneTest() {
        // TODO: test openstackAvZone
    }

    /**
     * Test the property 'vmwareName'
     */
    @Test
    public void vmwareNameTest() {
        // TODO: test vmwareName
    }

    /**
     * Test the property 'azureHostNames'
     */
    @Test
    public void azureHostNamesTest() {
        // TODO: test azureHostNames
    }

    /**
     * Test the property 'azureResourceId'
     */
    @Test
    public void azureResourceIdTest() {
        // TODO: test azureResourceId
    }

    /**
     * Test the property 'azureComputeModeName'
     */
    @Test
    public void azureComputeModeNameTest() {
        // TODO: test azureComputeModeName
    }

    /**
     * Test the property 'azureSiteNames'
     */
    @Test
    public void azureSiteNamesTest() {
        // TODO: test azureSiteNames
    }

    /**
     * Test the property 'awsNameTag'
     */
    @Test
    public void awsNameTagTest() {
        // TODO: test awsNameTag
    }

    /**
     * Test the property 'gceProjectId'
     */
    @Test
    public void gceProjectIdTest() {
        // TODO: test gceProjectId
    }

    /**
     * Test the property 'logicalCpus'
     */
    @Test
    public void logicalCpusTest() {
        // TODO: test logicalCpus
    }

    /**
     * Test the property 'zosTotalGeneralPurposeProcessors'
     */
    @Test
    public void zosTotalGeneralPurposeProcessorsTest() {
        // TODO: test zosTotalGeneralPurposeProcessors
    }

    /**
     * Test the property 'cloudType'
     */
    @Test
    public void cloudTypeTest() {
        // TODO: test cloudType
    }

    /**
     * Test the property 'paasMemoryLimit'
     */
    @Test
    public void paasMemoryLimitTest() {
        // TODO: test paasMemoryLimit
    }

    /**
     * Test the property 'zosCPUSerialNumber'
     */
    @Test
    public void zosCPUSerialNumberTest() {
        // TODO: test zosCPUSerialNumber
    }

    /**
     * Test the property 'zosVirtualization'
     */
    @Test
    public void zosVirtualizationTest() {
        // TODO: test zosVirtualization
    }

    /**
     * Test the property 'hypervisorType'
     */
    @Test
    public void hypervisorTypeTest() {
        // TODO: test hypervisorType
    }

    /**
     * Test the property 'cpuCores'
     */
    @Test
    public void cpuCoresTest() {
        // TODO: test cpuCores
    }

    /**
     * Test the property 'bitness'
     */
    @Test
    public void bitnessTest() {
        // TODO: test bitness
    }

    /**
     * Test the property 'zosLpaName'
     */
    @Test
    public void zosLpaNameTest() {
        // TODO: test zosLpaName
    }

    /**
     * Test the property 'gceInstanceName'
     */
    @Test
    public void gceInstanceNameTest() {
        // TODO: test gceInstanceName
    }

    /**
     * Test the property 'simultaneousMultithreading'
     */
    @Test
    public void simultaneousMultithreadingTest() {
        // TODO: test simultaneousMultithreading
    }

    /**
     * Test the property 'logicalCpuCores'
     */
    @Test
    public void logicalCpuCoresTest() {
        // TODO: test logicalCpuCores
    }

    /**
     * Test the property 'gceMachineType'
     */
    @Test
    public void gceMachineTypeTest() {
        // TODO: test gceMachineType
    }

    /**
     * Test the property 'gceProject'
     */
    @Test
    public void gceProjectTest() {
        // TODO: test gceProject
    }

    /**
     * Test the property 'boshInstanceId'
     */
    @Test
    public void boshInstanceIdTest() {
        // TODO: test boshInstanceId
    }

    /**
     * Test the property 'publicHostName'
     */
    @Test
    public void publicHostNameTest() {
        // TODO: test publicHostName
    }

    /**
     * Test the property 'gcePublicIpAddresses'
     */
    @Test
    public void gcePublicIpAddressesTest() {
        // TODO: test gcePublicIpAddresses
    }

    /**
     * Test the property 'consumedHostUnits'
     */
    @Test
    public void consumedHostUnitsTest() {
        // TODO: test consumedHostUnits
    }

}
