/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.api;

import com.dynatrace.apis.envv1.ApiException;
import com.dynatrace.apis.envv1.model.ErrorEnvelope;
import com.dynatrace.apis.envv1.model.MaintenanceWindow;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for MaintenanceWindowApi
 */
@Ignore
public class MaintenanceWindowApiTest {

    private final MaintenanceWindowApi api = new MaintenanceWindowApi();

    
    /**
     * Lists all parameters of all maintenance windows available in your Dynatrace environment.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllMaintenanceWindowConfigsTest() throws ApiException {
        Long from = null;
        Long to = null;
        String type = null;
        List<MaintenanceWindow> response = 
        api.getAllMaintenanceWindowConfigs(from, to, type);
        
        // TODO: test validations
    }
    
    /**
     * Lists all parameters of the specified maintenance window.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMaintenanceWindowConfigTest() throws ApiException {
        String uid = null;
        MaintenanceWindow response = 
        api.getMaintenanceWindowConfig(uid);
        
        // TODO: test validations
    }
    
    /**
     * Deletes the specified maintenance window
     *
     * Deletion cannot be undone.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeMaintenanceWindowConfigTest() throws ApiException {
        String uid = null;
        
        api.removeMaintenanceWindowConfig(uid);
        
        // TODO: test validations
    }
    
    /**
     * Creates a new or updates an existing maintenance window
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void storeMaintenanceWindowConfigTest() throws ApiException {
        MaintenanceWindow maintenanceWindow = null;
        
        api.storeMaintenanceWindowConfig(maintenanceWindow);
        
        // TODO: test validations
    }
    
}
