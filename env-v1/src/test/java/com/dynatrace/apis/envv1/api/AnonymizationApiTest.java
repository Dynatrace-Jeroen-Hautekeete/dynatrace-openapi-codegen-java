/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.api;

import com.dynatrace.apis.envv1.ApiException;
import com.dynatrace.apis.envv1.model.AnonymizationIdResult;
import com.dynatrace.apis.envv1.model.AnonymizationProgressResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for AnonymizationApi
 */
@Ignore
public class AnonymizationApiTest {

    private final AnonymizationApi api = new AnonymizationApi();

    
    /**
     * Creates user session anonymization job
     *
     * The job anonymizes all user sessions in the specified timeframe by masking the specified fields.   To identify user sessions to be anonymized you can specify either userID, or IP address, or both. If you specify both the **OR** logic applies.   You can&#39;t undo the anonymization.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void anonymizeTest() throws ApiException {
        Long startTimestamp = null;
        Long endTimestamp = null;
        List<String> userIds = null;
        List<String> ips = null;
        List<String> additionalField = null;
        AnonymizationIdResult response = 
        api.anonymize(startTimestamp, endTimestamp, userIds, ips, additionalField);
        
        // TODO: test validations
    }
    
    /**
     * Shows the progress of the specified anonymization job
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStatusTest() throws ApiException {
        String requestId = null;
        AnonymizationProgressResult response = 
        api.getStatus(requestId);
        
        // TODO: test validations
    }
    
}
