/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ProcessGroupMetadata
 */
public class ProcessGroupMetadataTest {
    private final ProcessGroupMetadata model = new ProcessGroupMetadata();

    /**
     * Model tests for ProcessGroupMetadata
     */
    @Test
    public void testProcessGroupMetadata() {
        // TODO: test ProcessGroupMetadata
    }

    /**
     * Test the property 'hostGroups'
     */
    @Test
    public void hostGroupsTest() {
        // TODO: test hostGroups
    }

    /**
     * Test the property 'cloudFoundryAppIds'
     */
    @Test
    public void cloudFoundryAppIdsTest() {
        // TODO: test cloudFoundryAppIds
    }

    /**
     * Test the property 'dynatraceNodeIds'
     */
    @Test
    public void dynatraceNodeIdsTest() {
        // TODO: test dynatraceNodeIds
    }

    /**
     * Test the property 'executables'
     */
    @Test
    public void executablesTest() {
        // TODO: test executables
    }

    /**
     * Test the property 'googleComputeEngineMetadata'
     */
    @Test
    public void googleComputeEngineMetadataTest() {
        // TODO: test googleComputeEngineMetadata
    }

    /**
     * Test the property 'phpScripts'
     */
    @Test
    public void phpScriptsTest() {
        // TODO: test phpScripts
    }

    /**
     * Test the property 'awsEcsCluster'
     */
    @Test
    public void awsEcsClusterTest() {
        // TODO: test awsEcsCluster
    }

    /**
     * Test the property 'declarativeId'
     */
    @Test
    public void declarativeIdTest() {
        // TODO: test declarativeId
    }

    /**
     * Test the property 'glassfishInstanceNames'
     */
    @Test
    public void glassfishInstanceNamesTest() {
        // TODO: test glassfishInstanceNames
    }

    /**
     * Test the property 'tibcoBusinessWorksEnginePropertyFiles'
     */
    @Test
    public void tibcoBusinessWorksEnginePropertyFilesTest() {
        // TODO: test tibcoBusinessWorksEnginePropertyFiles
    }

    /**
     * Test the property 'jbossServerNames'
     */
    @Test
    public void jbossServerNamesTest() {
        // TODO: test jbossServerNames
    }

    /**
     * Test the property 'catalinaBaseValues'
     */
    @Test
    public void catalinaBaseValuesTest() {
        // TODO: test catalinaBaseValues
    }

    /**
     * Test the property 'mssqlInstanceName'
     */
    @Test
    public void mssqlInstanceNameTest() {
        // TODO: test mssqlInstanceName
    }

    /**
     * Test the property 'ibmIntegrationServerName'
     */
    @Test
    public void ibmIntegrationServerNameTest() {
        // TODO: test ibmIntegrationServerName
    }

    /**
     * Test the property 'varnishInstanceNames'
     */
    @Test
    public void varnishInstanceNamesTest() {
        // TODO: test varnishInstanceNames
    }

    /**
     * Test the property 'phpWorkingDirectories'
     */
    @Test
    public void phpWorkingDirectoriesTest() {
        // TODO: test phpWorkingDirectories
    }

    /**
     * Test the property 'websphereLibertyServerName'
     */
    @Test
    public void websphereLibertyServerNameTest() {
        // TODO: test websphereLibertyServerName
    }

    /**
     * Test the property 'googleCloudProjects'
     */
    @Test
    public void googleCloudProjectsTest() {
        // TODO: test googleCloudProjects
    }

    /**
     * Test the property 'dockerContainerImageVersions'
     */
    @Test
    public void dockerContainerImageVersionsTest() {
        // TODO: test dockerContainerImageVersions
    }

    /**
     * Test the property 'hybrisConfigDirectories'
     */
    @Test
    public void hybrisConfigDirectoriesTest() {
        // TODO: test hybrisConfigDirectories
    }

    /**
     * Test the property 'executablePaths'
     */
    @Test
    public void executablePathsTest() {
        // TODO: test executablePaths
    }

    /**
     * Test the property 'awsEcrImageRegions'
     */
    @Test
    public void awsEcrImageRegionsTest() {
        // TODO: test awsEcrImageRegions
    }

    /**
     * Test the property 'tibcoBusinessWorksAppSpaceName'
     */
    @Test
    public void tibcoBusinessWorksAppSpaceNameTest() {
        // TODO: test tibcoBusinessWorksAppSpaceName
    }

    /**
     * Test the property 'springBootStartupClass'
     */
    @Test
    public void springBootStartupClassTest() {
        // TODO: test springBootStartupClass
    }

    /**
     * Test the property 'weblogicDomainNames'
     */
    @Test
    public void weblogicDomainNamesTest() {
        // TODO: test weblogicDomainNames
    }

    /**
     * Test the property 'elasticSearchNodeNames'
     */
    @Test
    public void elasticSearchNodeNamesTest() {
        // TODO: test elasticSearchNodeNames
    }

    /**
     * Test the property 'tibcoBWEnginePropertyFilePaths'
     */
    @Test
    public void tibcoBWEnginePropertyFilePathsTest() {
        // TODO: test tibcoBWEnginePropertyFilePaths
    }

    /**
     * Test the property 'kubernetesContainerNames'
     */
    @Test
    public void kubernetesContainerNamesTest() {
        // TODO: test kubernetesContainerNames
    }

    /**
     * Test the property 'rubyAppRootPaths'
     */
    @Test
    public void rubyAppRootPathsTest() {
        // TODO: test rubyAppRootPaths
    }

    /**
     * Test the property 'ibmImsMessageProcessingRegions'
     */
    @Test
    public void ibmImsMessageProcessingRegionsTest() {
        // TODO: test ibmImsMessageProcessingRegions
    }

    /**
     * Test the property 'linkage'
     */
    @Test
    public void linkageTest() {
        // TODO: test linkage
    }

    /**
     * Test the property 'cloudfoundryMetadata'
     */
    @Test
    public void cloudfoundryMetadataTest() {
        // TODO: test cloudfoundryMetadata
    }

    /**
     * Test the property 'oracleSid'
     */
    @Test
    public void oracleSidTest() {
        // TODO: test oracleSid
    }

    /**
     * Test the property 'awsEcsFamily'
     */
    @Test
    public void awsEcsFamilyTest() {
        // TODO: test awsEcsFamily
    }

    /**
     * Test the property 'commandLineArgs'
     */
    @Test
    public void commandLineArgsTest() {
        // TODO: test commandLineArgs
    }

    /**
     * Test the property 'aspDotNetCoreApplicationPaths'
     */
    @Test
    public void aspDotNetCoreApplicationPathsTest() {
        // TODO: test aspDotNetCoreApplicationPaths
    }

    /**
     * Test the property 'awsEcrImageAccountIds'
     */
    @Test
    public void awsEcrImageAccountIdsTest() {
        // TODO: test awsEcrImageAccountIds
    }

    /**
     * Test the property 'springBootAppName'
     */
    @Test
    public void springBootAppNameTest() {
        // TODO: test springBootAppName
    }

    /**
     * Test the property 'websphereClusterNames'
     */
    @Test
    public void websphereClusterNamesTest() {
        // TODO: test websphereClusterNames
    }

    /**
     * Test the property 'springBootProfileName'
     */
    @Test
    public void springBootProfileNameTest() {
        // TODO: test springBootProfileName
    }

    /**
     * Test the property 'kubernetesAnnotations'
     */
    @Test
    public void kubernetesAnnotationsTest() {
        // TODO: test kubernetesAnnotations
    }

    /**
     * Test the property 'websphereServerNames'
     */
    @Test
    public void websphereServerNamesTest() {
        // TODO: test websphereServerNames
    }

    /**
     * Test the property 'catalinaHomeValues'
     */
    @Test
    public void catalinaHomeValuesTest() {
        // TODO: test catalinaHomeValues
    }

    /**
     * Test the property 'glassfishDomainNames'
     */
    @Test
    public void glassfishDomainNamesTest() {
        // TODO: test glassfishDomainNames
    }

    /**
     * Test the property 'kubernetesBasePodNames'
     */
    @Test
    public void kubernetesBasePodNamesTest() {
        // TODO: test kubernetesBasePodNames
    }

    /**
     * Test the property 'weblogicClusterNames'
     */
    @Test
    public void weblogicClusterNamesTest() {
        // TODO: test weblogicClusterNames
    }

    /**
     * Test the property 'javaMainModules'
     */
    @Test
    public void javaMainModulesTest() {
        // TODO: test javaMainModules
    }

    /**
     * Test the property 'kubernetesPodUids'
     */
    @Test
    public void kubernetesPodUidsTest() {
        // TODO: test kubernetesPodUids
    }

    /**
     * Test the property 'awsEcsContainerName'
     */
    @Test
    public void awsEcsContainerNameTest() {
        // TODO: test awsEcsContainerName
    }

    /**
     * Test the property 'coldfusionJvmConfigFiles'
     */
    @Test
    public void coldfusionJvmConfigFilesTest() {
        // TODO: test coldfusionJvmConfigFiles
    }

    /**
     * Test the property 'dotnetCommandPath'
     */
    @Test
    public void dotnetCommandPathTest() {
        // TODO: test dotnetCommandPath
    }

    /**
     * Test the property 'tibcoBusinessWorksDomainName'
     */
    @Test
    public void tibcoBusinessWorksDomainNameTest() {
        // TODO: test tibcoBusinessWorksDomainName
    }

    /**
     * Test the property 'elasticSearchClusterNames'
     */
    @Test
    public void elasticSearchClusterNamesTest() {
        // TODO: test elasticSearchClusterNames
    }

    /**
     * Test the property 'nodejsScriptNames'
     */
    @Test
    public void nodejsScriptNamesTest() {
        // TODO: test nodejsScriptNames
    }

    /**
     * Test the property 'iisRoleNames'
     */
    @Test
    public void iisRoleNamesTest() {
        // TODO: test iisRoleNames
    }

    /**
     * Test the property 'apacheSparkMasterIpAddresses'
     */
    @Test
    public void apacheSparkMasterIpAddressesTest() {
        // TODO: test apacheSparkMasterIpAddresses
    }

    /**
     * Test the property 'weblogicNames'
     */
    @Test
    public void weblogicNamesTest() {
        // TODO: test weblogicNames
    }

    /**
     * Test the property 'rubyScriptPaths'
     */
    @Test
    public void rubyScriptPathsTest() {
        // TODO: test rubyScriptPaths
    }

    /**
     * Test the property 'ibmImsSoapGwName'
     */
    @Test
    public void ibmImsSoapGwNameTest() {
        // TODO: test ibmImsSoapGwName
    }

    /**
     * Test the property 'nodejsAppBaseDirectories'
     */
    @Test
    public void nodejsAppBaseDirectoriesTest() {
        // TODO: test nodejsAppBaseDirectories
    }

    /**
     * Test the property 'softwareAgProductPropertyName'
     */
    @Test
    public void softwareAgProductPropertyNameTest() {
        // TODO: test softwareAgProductPropertyName
    }

    /**
     * Test the property 'awsEcsRevision'
     */
    @Test
    public void awsEcsRevisionTest() {
        // TODO: test awsEcsRevision
    }

    /**
     * Test the property 'ibmImsControlRegions'
     */
    @Test
    public void ibmImsControlRegionsTest() {
        // TODO: test ibmImsControlRegions
    }

    /**
     * Test the property 'javaMainClasses'
     */
    @Test
    public void javaMainClassesTest() {
        // TODO: test javaMainClasses
    }

    /**
     * Test the property 'cassandraClusterNames'
     */
    @Test
    public void cassandraClusterNamesTest() {
        // TODO: test cassandraClusterNames
    }

    /**
     * Test the property 'softwareAgInstallRoot'
     */
    @Test
    public void softwareAgInstallRootTest() {
        // TODO: test softwareAgInstallRoot
    }

    /**
     * Test the property 'cloudFoundryAppNames'
     */
    @Test
    public void cloudFoundryAppNamesTest() {
        // TODO: test cloudFoundryAppNames
    }

    /**
     * Test the property 'cloudFoundrySpaceNames'
     */
    @Test
    public void cloudFoundrySpaceNamesTest() {
        // TODO: test cloudFoundrySpaceNames
    }

    /**
     * Test the property 'pluginMetadata'
     */
    @Test
    public void pluginMetadataTest() {
        // TODO: test pluginMetadata
    }

    /**
     * Test the property 'ibmIntegrationNodeName'
     */
    @Test
    public void ibmIntegrationNodeNameTest() {
        // TODO: test ibmIntegrationNodeName
    }

    /**
     * Test the property 'dockerContainerNames'
     */
    @Test
    public void dockerContainerNamesTest() {
        // TODO: test dockerContainerNames
    }

    /**
     * Test the property 'ibmCtgName'
     */
    @Test
    public void ibmCtgNameTest() {
        // TODO: test ibmCtgName
    }

    /**
     * Test the property 'tibcoBusinessWorksCeAppName'
     */
    @Test
    public void tibcoBusinessWorksCeAppNameTest() {
        // TODO: test tibcoBusinessWorksCeAppName
    }

    /**
     * Test the property 'kubernetesFullPodNames'
     */
    @Test
    public void kubernetesFullPodNamesTest() {
        // TODO: test kubernetesFullPodNames
    }

    /**
     * Test the property 'apacheConfigPaths'
     */
    @Test
    public void apacheConfigPathsTest() {
        // TODO: test apacheConfigPaths
    }

    /**
     * Test the property 'tibcoBusinessWorksAppNodeName'
     */
    @Test
    public void tibcoBusinessWorksAppNodeNameTest() {
        // TODO: test tibcoBusinessWorksAppNodeName
    }

    /**
     * Test the property 'tibcoBusinessWorksCeVersion'
     */
    @Test
    public void tibcoBusinessWorksCeVersionTest() {
        // TODO: test tibcoBusinessWorksCeVersion
    }

    /**
     * Test the property 'dotNetCommands'
     */
    @Test
    public void dotNetCommandsTest() {
        // TODO: test dotNetCommands
    }

    /**
     * Test the property 'googleAppEngineServices'
     */
    @Test
    public void googleAppEngineServicesTest() {
        // TODO: test googleAppEngineServices
    }

    /**
     * Test the property 'kubernetesNamespaces'
     */
    @Test
    public void kubernetesNamespacesTest() {
        // TODO: test kubernetesNamespaces
    }

    /**
     * Test the property 'hybrisDataDirectories'
     */
    @Test
    public void hybrisDataDirectoriesTest() {
        // TODO: test hybrisDataDirectories
    }

    /**
     * Test the property 'envVariables'
     */
    @Test
    public void envVariablesTest() {
        // TODO: test envVariables
    }

    /**
     * Test the property 'javaJarFiles'
     */
    @Test
    public void javaJarFilesTest() {
        // TODO: test javaJarFiles
    }

    /**
     * Test the property 'javaJarPaths'
     */
    @Test
    public void javaJarPathsTest() {
        // TODO: test javaJarPaths
    }

    /**
     * Test the property 'dockerContainerIds'
     */
    @Test
    public void dockerContainerIdsTest() {
        // TODO: test dockerContainerIds
    }

    /**
     * Test the property 'cloudFoundrySpaceIds'
     */
    @Test
    public void cloudFoundrySpaceIdsTest() {
        // TODO: test cloudFoundrySpaceIds
    }

    /**
     * Test the property 'ruleResult'
     */
    @Test
    public void ruleResultTest() {
        // TODO: test ruleResult
    }

    /**
     * Test the property 'kubernetesRuleResult'
     */
    @Test
    public void kubernetesRuleResultTest() {
        // TODO: test kubernetesRuleResult
    }

    /**
     * Test the property 'jbossModes'
     */
    @Test
    public void jbossModesTest() {
        // TODO: test jbossModes
    }

    /**
     * Test the property 'awsLambdaFunctionNames'
     */
    @Test
    public void awsLambdaFunctionNamesTest() {
        // TODO: test awsLambdaFunctionNames
    }

    /**
     * Test the property 'cloudFoundryInstanceIndexes'
     */
    @Test
    public void cloudFoundryInstanceIndexesTest() {
        // TODO: test cloudFoundryInstanceIndexes
    }

    /**
     * Test the property 'hybrisBinDirectories'
     */
    @Test
    public void hybrisBinDirectoriesTest() {
        // TODO: test hybrisBinDirectories
    }

    /**
     * Test the property 'weblogicHomeValues'
     */
    @Test
    public void weblogicHomeValuesTest() {
        // TODO: test weblogicHomeValues
    }

    /**
     * Test the property 'jbossHomes'
     */
    @Test
    public void jbossHomesTest() {
        // TODO: test jbossHomes
    }

    /**
     * Test the property 'dynatraceClusterIds'
     */
    @Test
    public void dynatraceClusterIdsTest() {
        // TODO: test dynatraceClusterIds
    }

    /**
     * Test the property 'googleAppEngineInstances'
     */
    @Test
    public void googleAppEngineInstancesTest() {
        // TODO: test googleAppEngineInstances
    }

    /**
     * Test the property 'websphereNodeNames'
     */
    @Test
    public void websphereNodeNamesTest() {
        // TODO: test websphereNodeNames
    }

    /**
     * Test the property 'agentValueMetadata'
     */
    @Test
    public void agentValueMetadataTest() {
        // TODO: test agentValueMetadata
    }

    /**
     * Test the property 'iisAppPools'
     */
    @Test
    public void iisAppPoolsTest() {
        // TODO: test iisAppPools
    }

    /**
     * Test the property 'ibmImsConnectRegions'
     */
    @Test
    public void ibmImsConnectRegionsTest() {
        // TODO: test ibmImsConnectRegions
    }

    /**
     * Test the property 'dockerContainerImageNames'
     */
    @Test
    public void dockerContainerImageNamesTest() {
        // TODO: test dockerContainerImageNames
    }

    /**
     * Test the property 'tibcoBusinessWorksHome'
     */
    @Test
    public void tibcoBusinessWorksHomeTest() {
        // TODO: test tibcoBusinessWorksHome
    }

    /**
     * Test the property 'ibmCicsRegion'
     */
    @Test
    public void ibmCicsRegionTest() {
        // TODO: test ibmCicsRegion
    }

    /**
     * Test the property 'serviceNames'
     */
    @Test
    public void serviceNamesTest() {
        // TODO: test serviceNames
    }

    /**
     * Test the property 'websphereCellNames'
     */
    @Test
    public void websphereCellNamesTest() {
        // TODO: test websphereCellNames
    }

    /**
     * Test the property 'nodejsAppNames'
     */
    @Test
    public void nodejsAppNamesTest() {
        // TODO: test nodejsAppNames
    }

    /**
     * Test the property 'equinoxConfigPath'
     */
    @Test
    public void equinoxConfigPathTest() {
        // TODO: test equinoxConfigPath
    }

    /**
     * Test the property 'awsRegions'
     */
    @Test
    public void awsRegionsTest() {
        // TODO: test awsRegions
    }

}
