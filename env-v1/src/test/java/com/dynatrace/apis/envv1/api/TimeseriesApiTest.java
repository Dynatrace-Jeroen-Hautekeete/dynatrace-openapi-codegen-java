/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.api;

import com.dynatrace.apis.envv1.ApiException;
import java.util.Set;
import com.dynatrace.apis.envv1.model.TimeseriesDefinition;
import com.dynatrace.apis.envv1.model.TimeseriesQueryMessage;
import com.dynatrace.apis.envv1.model.TimeseriesQueryResult;
import com.dynatrace.apis.envv1.model.TimeseriesQueryResultWrapper;
import com.dynatrace.apis.envv1.model.TimeseriesRegistrationMessage;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for TimeseriesApi
 */
@Ignore
public class TimeseriesApiTest {

    private final TimeseriesApi api = new TimeseriesApi();

    
    /**
     * Creates a new custom metric
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCustomTimeseriesTest() throws ApiException {
        String timeseriesIdentifier = null;
        TimeseriesRegistrationMessage timeseriesRegistrationMessage = null;
        TimeseriesDefinition response = 
        api.createCustomTimeseries(timeseriesIdentifier, timeseriesRegistrationMessage);
        
        // TODO: test validations
    }
    
    /**
     * Deletes the specified custom metric
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCustomTimeseriesTest() throws ApiException {
        String timeseriesIdentifier = null;
        
        api.deleteCustomTimeseries(timeseriesIdentifier);
        
        // TODO: test validations
    }
    
    /**
     * Lists all metric definitions, with the parameters of each metric
     *
     * You can specify filtering parameters to return only matched metrics. If no parameters are specified, the call will list all the defined metrics.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllTimeseriesDefinitionsTest() throws ApiException {
        String source = null;
        String detailedSource = null;
        List<TimeseriesDefinition> response = 
        api.getAllTimeseriesDefinitions(source, detailedSource);
        
        // TODO: test validations
    }
    
    /**
     * Lists all available metric data points, matching the specified parameters
     *
     * Provides advanced filtering possibilities, comparing to the &#x60;GET /timeseries/{metricIdentifier}&#x60; request.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readTimeseriesComplexTest() throws ApiException {
        String timeseriesIdentifier = null;
        TimeseriesQueryMessage timeseriesQueryMessage = null;
        TimeseriesQueryResultWrapper response = 
        api.readTimeseriesComplex(timeseriesIdentifier, timeseriesQueryMessage);
        
        // TODO: test validations
    }
    
    /**
     * Gets the parameters of the specified metric and, optionally, its data points
     *
     * To obtain data points, set **includeData** to &#x60;true&#x60;.   You can obtain either data points or the scalar result of the specified timeseries, depending on the **queryMode**.   To obtain data points, you must specify the timeframe, either as **relativeTime** or as a combination of **startTimestamp** and **endTimestamp**.   You must also provide the **aggregationType**, supported by the metric.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readTimeseriesDataTest() throws ApiException {
        String timeseriesIdentifier = null;
        Boolean includeData = null;
        String aggregationType = null;
        Long startTimestamp = null;
        Long endTimestamp = null;
        Boolean predict = null;
        String relativeTime = null;
        String queryMode = null;
        Set<String> entity = null;
        Set<String> tag = null;
        Integer percentile = null;
        Boolean includeParentIds = null;
        Boolean considerMaintenanceWindowsForAvailability = null;
        TimeseriesQueryResult response = 
        api.readTimeseriesData(timeseriesIdentifier, includeData, aggregationType, startTimestamp, endTimestamp, predict, relativeTime, queryMode, entity, tag, percentile, includeParentIds, considerMaintenanceWindowsForAvailability);
        
        // TODO: test validations
    }
    
}
