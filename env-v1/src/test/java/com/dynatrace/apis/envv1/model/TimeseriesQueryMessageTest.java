/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).  Notes about compatibility: * Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this. * We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dynatrace.apis.envv1.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Set;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for TimeseriesQueryMessage
 */
public class TimeseriesQueryMessageTest {
    private final TimeseriesQueryMessage model = new TimeseriesQueryMessage();

    /**
     * Model tests for TimeseriesQueryMessage
     */
    @Test
    public void testTimeseriesQueryMessage() {
        // TODO: test TimeseriesQueryMessage
    }

    /**
     * Test the property 'timeseriesId'
     */
    @Test
    public void timeseriesIdTest() {
        // TODO: test timeseriesId
    }

    /**
     * Test the property 'aggregationType'
     */
    @Test
    public void aggregationTypeTest() {
        // TODO: test aggregationType
    }

    /**
     * Test the property 'startTimestamp'
     */
    @Test
    public void startTimestampTest() {
        // TODO: test startTimestamp
    }

    /**
     * Test the property 'endTimestamp'
     */
    @Test
    public void endTimestampTest() {
        // TODO: test endTimestamp
    }

    /**
     * Test the property 'predict'
     */
    @Test
    public void predictTest() {
        // TODO: test predict
    }

    /**
     * Test the property 'relativeTime'
     */
    @Test
    public void relativeTimeTest() {
        // TODO: test relativeTime
    }

    /**
     * Test the property 'queryMode'
     */
    @Test
    public void queryModeTest() {
        // TODO: test queryMode
    }

    /**
     * Test the property 'entities'
     */
    @Test
    public void entitiesTest() {
        // TODO: test entities
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'filters'
     */
    @Test
    public void filtersTest() {
        // TODO: test filters
    }

    /**
     * Test the property 'percentile'
     */
    @Test
    public void percentileTest() {
        // TODO: test percentile
    }

    /**
     * Test the property 'includeParentIds'
     */
    @Test
    public void includeParentIdsTest() {
        // TODO: test includeParentIds
    }

    /**
     * Test the property 'considerMaintenanceWindowsForAvailability'
     */
    @Test
    public void considerMaintenanceWindowsForAvailabilityTest() {
        // TODO: test considerMaintenanceWindowsForAvailability
    }

}
